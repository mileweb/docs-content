{
  "openapi": "3.0.0",
  "info": {
    "title": "CDN360 API Specification",
    "version": "1.0",
    "description": "CDN360 APIs allow you to manage CDN360 services.",
    "contact": {
      "url": "https://www.cdnetworks.com"
    }
  },
  "servers": [
    {
      "url": "https://ngapi.cdnetworks.com"
    },
    {
      "url": "https://ngapi.quantil.com",
      "description": ""
    }
  ],
  "paths": {
    "/cdn/properties/{propertyID}/versions/{version}": {
      "get": {
        "description": "Get the detailed configuration of a property version.",
        "operationId": "getPropertyVersion",
        "tags": [
          "Property Management"
        ],
        "responses": {
          "200": {
            "description": "The response contains the full details of the property version configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "propertyVersion",
                  "type": "object",
                  "description": "This describes a property version. It includes all of the configuration along with information about its deployment status.",
                  "x-examples": {
                    "example-1": {
                      "value": {
                        "version": 1,
                        "configs": {
                          "description": "validPropertyVersionAllFields_PropertySteps",
                          "cacheKeyHostname": "testdomain-t1572317034478.mwtrial.info",
                          "tlsCertificateId": "8fde2798385e3d0db19bc330",
                          "tlsMinVersion": "1.1",
                          "tlsMaxVersion": "1.2",
                          "tlsCiphers": "ALL:-MD5",
                          "syntaxVersion": "1",
                          "hasBeian": false,
                          "schemeInCacheKey": true,
                          "requestHandlers": {
                            "preprocess": {},
                            "prehtlookup": {},
                            "posthtlookup": {},
                            "origins": {},
                            "mod4origin": {},
                            "cachetime": {},
                            "mod4client": {},
                            "responseDone": {}
                          },
                          "hostnames": [
                            "testdomain-t1572317034478.mwtrial.info",
                            "testdomain-t1572317034478.mwtrial.info"
                          ],
                          "origins": [
                            {
                              "name": "my_origin_1572317034478",
                              "supportedProtocol": "both",
                              "hostHeader": "autohostheader.com",
                              "directConnection": "alwaysDirect",
                              "servers": [
                                "mwtrial.info"
                              ]
                            }
                          ],
                          "loadBalancerHashKey": "$http_hashvalue",
                          "edgeLogic": "location / {origin_pass my_origin_1572317034478;} return 200;",
                          "allowProtocolDowngrade": false
                        },
                        "status": {
                          "lastValidationStatus": "NotValidated",
                          "frozen": false,
                          "creationTime": "2019-10-29T02:43:53Z",
                          "lastUpdateTime": "2019-10-29T02:43:56Z",
                          "inProduction": false,
                          "inStaging": false
                        }
                      }
                    }
                  },
                  "properties": {
                    "version": {
                      "type": "integer"
                    },
                    "configs": {
                      "title": "propertyConfiguration",
                      "type": "object",
                      "description": "Describes a property configuration. This contains all the settings.",
                      "x-examples": {
                        "example-1": {
                          "value": {
                            "syntaxVersion": 1,
                            "edgeLogic": "location / {origin_pass my_origin_1572420965460;}",
                            "tlsMaxVersion": "1.2",
                            "tlsMinVersion": "1.1",
                            "tlsCertificateId": "8961b13c87cd30a7687edc8c",
                            "origins": [
                              {
                                "hostHeader": "testcustomer.g.qtlcdn.com",
                                "servers": [
                                  "edgetools.theoriginserver.com"
                                ],
                                "name": "my_origin_1572420965460",
                                "directConnection": "noDirect"
                              }
                            ],
                            "hostnames": [
                              "testcustomer1572420596536.g.qtlcdn.com"
                            ]
                          }
                        }
                      },
                      "x-tags": [
                        "Property Management"
                      ],
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "A description of the version.\n"
                        },
                        "cacheKeyHostname": {
                          "type": "string",
                          "description": "The cachekey hostname must be a string made of lowercase letters, digits, dot, dash, and underscore. If not specified, the incoming Host header value will be used and the cache will not be shared across different hostnames in this property.\n",
                          "maxLength": 80,
                          "pattern": "^[a-z.-_]+"
                        },
                        "hostnames": {
                          "type": "array",
                          "description": "Hostnames associated with the property.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "realTimeLog": {
                          "type": "object",
                          "description": "This optional field allows you to configure notifications about client requests to be sent to a remote server. It can be used only if you have access to our <i>realtime_log_switch</i> directive. Please contact our support team if you require this feature.",
                          "properties": {
                            "logUrl": {
                              "type": "string",
                              "description": "The URL that receives the notifications. It must begin with “http” or \"https\". The server should support the POST method. This is a required field."
                            },
                            "sampleRate": {
                              "type": "integer",
                              "default": 1,
                              "minimum": 1,
                              "maximum": 65536,
                              "description": "An integer between [1, 65536]. n means one notification for every n edge requests. 1 means every edge request will generate a notification. This is optional. Default is 1."
                            },
                            "escape": {
                              "type": "string",
                              "enum": [
                                "json",
                                "none"
                              ],
                              "description": "Specify <i>json</i> to enable JSON character escaping in variables or <i>none</i> to disable escaping."
                            },
                            "format": {
                              "type": "string",
                              "description": "This is a required field to specify the notification body to be sent to the remote server. It can be any printable text that can be sent in the body of an HTTP POST request. \n\nThe following built-in variables can be used within the format field. They will be replaced with the actual values in the notifications.\n<table>\n<tr><th>Name</th><th>Description</th></tr>\n<tr><td>$body_bytes_sent</td><td>Size of the response body.</td></tr>\n<tr><td>$bytes_sent</td><td>Size of the response, including body, headers and response line.</td></tr>\n<tr><td>$client_country_code</td><td>An ISO 3166-1 country code representing the country of the client request, for example, \"US\". \"ZZ\" is returned if the country is unknown.</td></tr>\n<tr><td>$client_real_ip</td><td>IP address of the client request.</td></tr>\n<tr><td>$cookie_x</td><td>This lets you obtain any cookie named x.  For example, $cookie_account would retrieve the value of a cookie named 'account'.</td></tr>\n<tr><td>$http_x</td><td>Obtain any HTTP header named x from the original request. The header name is converted to lower case with dashes replaced by underscores. For example, specify $http_user_agent to get the value of User-Agent.</td></tr>\n<tr><td>$msec</td><td>Current unix time in seconds with millisecond precision.</td></tr>\n<tr><td>$qtl_req_id</td><td>Unique identifier representing the request.</td></tr>\n<tr><td>$request_uri</td><td>HTTP request URI</td></tr>\n<tr><td>$request_method</td><td>The HTTP request method used to access the origin.</td></tr>\n<tr><td>$request_time</td><td>Response time in milliseconds. It is the time between receiving the request's  first byte and serving the last byte of the response.</td></tr>\n<tr><td>$sc_completed</td><td>1 to indicate the last byte of the object was served to the user, 0 otherwise.\n</td></tr>\n<tr><td>$sc_initial</td><td>1 to indicate the first byte of the object was served to the user, 0 otherwise.</td></tr>\n<tr><td>$scheme</td><td>Indicates the protocol of the user's request (\"http\" or https\").</td></tr>\n<tr><td>$sent_http_content_length</td><td>the original file size.</td></tr>\n<tr><td>$sent_http_x</td><td>Obtain the value of an HTTP header named x that is returned in the response to the client. The header name should be converted to lower case with dashes replaced by underscores. For example, $sent_http_etag would give you the value of the ETag header.</td></tr>\n<tr><td>$server_addr</td><td>IP address of the edge node serving the user's request.</td></tr>\n<tr><td>$server_protocol</td><td>Indicates the version of HTTP used in the user's request, either \"HTTP/1.0\", \"HTTP/1.1\", or \"HTTP/2.0\".</td></tr>\n<tr><td>$ssl_cipher</td><td>Indicates the cipher suite used for the TLS (SSL) connection.</td></tr>\n<tr><td>$ssl_server_name</td><td>The hostname that a client initiating a TLS (SSL) connection is attempting to connect to. It is only sent by clients supporting SNI (Server Name Indication).</td></tr>\n<tr><td>$ssl_protocol</td><td>Indicates the TLS version used for the TLS (SSL) connection. Example versions include \"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\", and \"unknown\".</td></tr>\n<tr><td>$status</td><td>An HTTP response code for the user's request.</td></tr>\n<tr><td>$tcpinfo_rtt</td><td>The time in microseconds taken by a packet to travel to the destination and back.</td></tr>\n</table>"
                            },
                            "headers": {
                              "type": "array",
                              "description": "HTTP header names and values to be sent to the notification server. A header name can contain any alphanumeric character or hyphen, \"-\". A header value can contain any printable characters. It can also include any of the built-in variables supported in the <i>format</i> field of the realTimeLog object.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of an HTTP header."
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Value of an HTTP header."
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "logUrl"
                          ]
                        },
                        "edgeLogic": {
                          "type": "string",
                          "maxLength": 200000,
                          "description": "Refer to https://docs.cdnetworks.com/cdn/docs/edge-logic/intro"
                        },
                        "hasBeian": {
                          "type": "boolean",
                          "default": false,
                          "description": "The value indicates whether all the hostnames in this property have Beian license on file with the Chinese government. This is required to serve this property from servers in mainland China. A value of <i>false</i> means servers outside of mainland China will be used to distribute content to visitors in China. If set to <i>true</i> you must also specify the content type in the <i>beianContentType</i> field."
                        },
                        "redirectHttpToHttps": {
                          "type": [
                            "boolean",
                            "string"
                          ],
                          "default": false,
                          "description": "This field can be set to either a boolean value or a string. When the value is set to <i>true</i>, the server will redirect all HTTP requests to HTTPS using status code 301. You can also specify string values \"302\", \"307\", or \"308\" instead if you wish to return a different status code when a request is redirected."
                        },
                        "origins": {
                          "type": "array",
                          "description": "Describes the origin servers for the property's content.",
                          "items": {
                            "type": "object",
                            "description": "Describes an origin server.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of an origin. It must be unique within this property.\n",
                                "pattern": "^[a-zA-z0-9_]"
                              },
                              "servers": {
                                "type": "array",
                                "description": "Each entry should be a string consisting of an address optionally followed by one or more parameters, separated by space characters. The address can take one of the following three forms:\n<ul>\n<li>{hostname or IP address}</li>\n<li>{hostname or IP address}:{http port}</li>\n<li>{hostname or IP address}:{http port},{https port}</li>\n</ul>\nValues for the HTTP and HTTPS ports should be integers in the range [1,65535]. \nEven when the value of <i>supportedProtocol</i> is “https”, the HTTPS port has to be specified after the comma.\nIn the third form, one of the two ports can be empty.\n\nSupported parameters are \"backup\" and \"weight\".\n\n\"backup\" is used to indicate the server is a backup server. It will be used when the primary servers are unavailable.\n\n\"weight\" is a value in the range [1, 100]. The default value is 1. It lets you control the likelihood that one origin server will be used relative to another.\n\nThere should be at least one primary server defined; it does not have the \"backup\" parameter.\n\nExample:\n<code>[\"www.abc.com weight=1\", \"www1.abc.com:8080 weight=4\", \"www2.abc.com:880,4443 backup\"]</code>\n\nThis example specifies two primary servers which are used in a 1:4 ratio meaning one gets about 20% of the requests to origin while the other gets 80% of the requests. In addition, a backup server is specified.\n",
                                "example": "[“www.abc.com”, “www1.abc.com:8080”, “www2.abc.com:880,4443 backup”]",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "supportedProtocol": {
                                "type": "string",
                                "description": "This optional field indicates the protocol supported by the origin server. If this property has a certificate attached to it, the value can be set to <i>http</i> if the <i>allowProtocolDowngrade</i> field is also set to <i>true</i>.",
                                "enum": [
                                  "http",
                                  "https",
                                  "both"
                                ]
                              },
                              "directConnection": {
                                "type": "string",
                                "default": "auto",
                                "description": "Optional. This parameter tells us how important it is to directly go to this origin without going through any intermediate cache to fetch content. The values can be “noDirect”, “auto”, “alwaysDirect”. \n\n“noDirect” means we always go through at least one intermediate cache. Customers who care particularly about the origin's workload can use this option. Our cache scheduler will dynamically pick the intermediate cache based on performance and resource availability.\n\n“auto” means the cache scheduler will make the choice dynamically based on performance and resource availability. This is the default behavior if not specified.\n\n“alwaysDirect” means we always directly connect to this origin.\n"
                              },
                              "hostHeader": {
                                "type": "string",
                                "description": "Optional. It should be a valid hostname. It will also be used as the SNI servername when contacting the HTTPS origin. We also allow it to be an nginx variable that begins with ‘$’ followed by [a-z_]{3,60}. Nginx variable names are case insensitive, so we only allow lowercase characters.\nIf not specified, the value of the HOST header in the request will be used. \n\nOne constraint is that if “aswS3” is specified for origin authentication, the value of <i>hostHeader</i> cannot be a variable or empty. It has to be a valid Amazon S3 hostname. Refer to https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html",
                                "format": "hostname"
                              },
                              "supportSni": {
                                "type": "boolean",
                                "default": true,
                                "description": "Optional. If set to <i>true</i>, the SNI extension will be enabled in the TLS handshake with the origin server."
                              },
                              "verifyOrigin": {
                                "type": "boolean",
                                "default": false,
                                "description": "Optional. It controls whether the cache will validate the certificate of the origin."
                              },
                              "authentication": {
                                "type": "object",
                                "description": "Optional. It is a structure to specify the parameters, such as password, for authentication with the origin servers. It should have at least one field: ”methodName”, which should be a string indicating one of the predefined authentication methods. The only valid value at this time is “awsS3”. When “awsS3” is used, the following parameters are required:\n<ul>\n<li>awsS3.region</li>\n<li>awsS3.accessKey</li>\n<li>awsS3.secretKey</li>\n</ul>\nAlso, the value of the <i>hostHeader</i> field cannot be a variable or empty. It must be a valid Amazon S3 hostname.\n\nExample:\n<code>\n{\"methodName\":\"awsS3\",\n\"awsS3\":{\n\"region\":\"us-west-1\",\n\"accessKey\":\"sdnu2932\",\n\"secretKey\":\"d12345678abcdefghi\"\n}}\n</code>",
                                "example": "{“methodName”:”awsS3”, ”awsS3”:{ ”region”:”us-west-1”, ”accessKey”:”sdnu2932”, ”secretKey”:”d12133424fvregvrew” }}",
                                "properties": {
                                  "methodName": {
                                    "type": "string",
                                    "description": "Authentication method."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "syntaxVersion": {
                          "type": "number",
                          "default": 1,
                          "description": "The value must be set to 1 at this time."
                        },
                        "disableHttp2": {
                          "type": "boolean",
                          "default": false,
                          "description": "When set to <i>true</i>, the server will not support HTTP/2. Only HTTP/1.1 will be supported.\n"
                        },
                        "schemeInCacheKey": {
                          "type": "boolean",
                          "default": false,
                          "description": "Specifies whether the scheme (“http” or “https”) should be included in the cache key. Default behavior is </i>false</i>. Set to <i>true</i> if the content is known to be different for different schemes.\n"
                        },
                        "tlsMaxVersion": {
                          "type": "string",
                          "default": 1.3,
                          "enum": [
                            "1.1",
                            "1.2",
                            "1.3"
                          ],
                          "description": "Maximum supported TLS version."
                        },
                        "loadBalancerHashKey": {
                          "type": "string",
                          "description": "Multiple tiers of load balancing are used in our CDN pops to distribute the client requests to different servers. We are using consistent hashing in many of those places. By default, the URL is used as the hash key, which should be good enough in most cases. Here you can define additional variables to be added to the hash key to distribute the requests more evenly. One typical use case is when all requests carry the same URL, but use a particular header to indicate the resources. \n\nThis is an optional field. The default value is an empty string. A valid value is a string meeting the following criteria:\n<ol>\n<li>Consists of alphanumeric characters, underscore _, equal sign =, dollar sign $, and ampersand sign &.</li>\n<li>The variable names can only be in one of the following formats: $http_name, $cookie_name, or $arg_name.</li>\n<li>At least one variable must be specified. No more than three are permitted.</li>\n<li>The total length should be no more than 100 characters.</li>\n</ol>\nThe validator will treat any dollar sign and the string after it (before any = or & or $) as a variable. \n\nHere are some examples of valid values:\n<table>\n<tr><td>$http_abc</td></tr>\n<tr><td>abc=$http_abc&def=$http_def&c_123=$cookie_123</td></tr>\n<tr><td>abc=$http_abc=$http_def</td></tr>\n<tr><td>$http_abc&$http_def</td></tr>\n<tr><td>=$http_abd&</td></tr>\n<tr><td>&&abc==$http_abc&&&===qwer</td></tr>\n</table>\n",
                          "maxLength": 100
                        },
                        "tlsCertificateId": {
                          "type": "number",
                          "description": "Refers to a <a href=\"#tag/Certificate-Management\">certificate</a>. It is invalid to only set the <i>tlsCertificateId1</i> field without setting the <i>tlsCertificateId</i> field. If <i>tlsCertificateId</i> is not set, HTTPS will not be enabled for this property. This is a feature to enable you to specify two certificates of different types, i.e. one RSA, one EC. If two certificates of the same type are specified, the one specified by <i>tlsCertificateId</i> will be ignored. "
                        },
                        "tlsMinVersion": {
                          "type": "string",
                          "default": 1,
                          "description": "Minimum required TLS version.",
                          "enum": [
                            "1.1",
                            "1.2",
                            "1.3",
                            "1"
                          ]
                        },
                        "tlsCiphers": {
                          "type": "string",
                          "description": "Any cipher list supported by \"openssl ciphers\". See https://www.openssl.org/docs/manmaster/man1/ciphers.html\n",
                          "maxLength": 2040
                        },
                        "allowProtocolDowngrade": {
                          "type": "boolean",
                          "default": false,
                          "description": "This setting only applies when the property has an attached certificate allowing client requests to use HTTPS. When the value of allowProtocolDowngrade is <i>false</i>, we require all the origin servers to support HTTPS. When the value is <i>true</i>, we allow origins that only support HTTP; this setting reduces security.\n"
                        },
                        "tlsCertificateId1": {
                          "type": "number",
                          "description": "Refers to a <a href=\"#tag/Certificate-Management\">certificate</a>. It is invalid to only set the <i>tlsCertificateId1</i> field without setting the <i>tlsCertificateId</i> field. If <i>tlsCertificateId</i> is not set, HTTPS will not be enabled for this property. This is a feature to enable you to specify two certificates of different types, i.e. one RSA, one EC. If two certificates of the same type are specified, the one specified by <i>tlsCertificateId</i> will be ignored. \n\n"
                        },
                        "videoSeek": {
                          "type": "object",
                          "description": "This object allows you to support video players requesting partial content through query string parameters. If you specify <i>videoSeek</i>, you must enter a value for <i>startParameter</i>.",
                          "properties": {
                            "startParameter": {
                              "type": "string",
                              "description": "Name of the query parameter indicating the starting offset in bytes of the content to fetch. The parameter name should begin with a letter (a-z, a-Z) and may be followed by up to 30 letters and numbers.",
                              "minLength": 1,
                              "maxLength": 31
                            },
                            "endParameter": {
                              "type": "string",
                              "description": "Name of the query parameter indicating the ending offset of the content to fetch. The parameter name should begin with a letter (a-z, a-Z) and may be followed by up to 30 letters and numbers.",
                              "minLength": 0,
                              "maxLength": 31
                            }
                          },
                          "required": [
                            "startParameter"
                          ]
                        },
                        "tlsSessionTimeout": {
                          "type": "integer",
                          "minimum": 300,
                          "maximum": 86400,
                          "default": 1800,
                          "description": "Lifespan of TLS session ticket in seconds."
                        },
                        "enableOcspStapling": {
                          "type": "boolean",
                          "default": false,
                          "description": "Enables Online Certificate Status Protocol (OCSP) stapling to check the revocation status of digital certificates. (Refer to https://en.wikipedia.org/wiki/OCSP_stapling)"
                        },
                        "beianContentType": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 24,
                          "description": "If you are planning to distribute content through servers in mainland China, you will need to set the <i>hasBeian</i> field to <i>true</i> and also indicate the type of content you are distributing. Enter the value that best corresponds to your content:\n\n<table>\n<tr><th>Value</th><th>Content Type</th></tr>\n<tr><td>1</td><td>Instant Messaging</td></tr>\n<tr><td>2</td><td>Search Engine</td></tr>\n<tr><td>3</td><td>Web Portal</td></tr>\n<tr><td>4</td><td>Online Postal Service</td></tr>\n<tr><td>5</td><td>Online News</td></tr>\n<tr><td>6</td><td>Blog</td></tr>\n<tr><td>7</td><td>Advertisement</td></tr>\n<tr><td>8</td><td>Organization Web Portal</td></tr>\n<tr><td>9</td><td>Shopping</td></tr>\n<tr><td>10</td><td>Online Payment</td></tr>\n<tr><td>11</td><td>Online Bank</td></tr>\n<tr><td>12</td><td>Online Stock Market</td></tr>\n<tr><td>13</td><td>Online Gaming</td></tr>\n<tr><td>14</td><td>Online Music</td></tr>\n<tr><td>15</td><td>Online Movie</td></tr>\n<tr><td>16</td><td>Online Picture</td></tr>\n<tr><td>17</td><td>Software Download</td></tr>\n<tr><td>18</td><td>Job Hunting</td></tr>\n<tr><td>19</td><td>Online Dating</td></tr>\n<tr><td>20</td><td>Online Real Property</td></tr>\n<tr><td>21</td><td>Online Education</td></tr>\n<tr><td>22</td><td>Web Design</td></tr>\n<tr><td>23</td><td>WAP</td></tr>\n<tr><td>24</td><td>Others</td></tr>\n</table>"
                        },
                        "accessControlRules": {
                          "type": "array",
                          "description": "Specify one or more access control rules to restrict access to your content. More advanced configuration can be done using edge logic. These access control rules take precedence over edge logic if both are defined.",
                          "items": {
                            "title": "accessControlRule",
                            "type": "object",
                            "description": "This object defines a rule that can be used to restrict access to your content. More complex rules can be created using CDN360's Edge Logic.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "maxLength": 60,
                                "minLength": 0,
                                "description": "An optional ID for the access control rule."
                              },
                              "conditions": {
                                "type": "object",
                                "description": "Specify the conditions that the incoming request must match. At least one condition must be specified. If multiple are specified, all must match.",
                                "properties": {
                                  "scheme": {
                                    "type": "string",
                                    "enum": [
                                      "https",
                                      "http"
                                    ],
                                    "description": "Indicates whether the incoming request uses HTTP or HTTPS."
                                  },
                                  "hostname": {
                                    "type": "string",
                                    "description": "Indicates the hostname requested. It must be one of the hostnames defined in the property."
                                  },
                                  "uri": {
                                    "type": "string",
                                    "description": "The URI begins with \"/ and can end with \"*\" for prefix matching. ",
                                    "maxLength": 500
                                  },
                                  "serverRegions": {
                                    "type": "array",
                                    "description": "An array of <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">ISO-3166-1 alpha-2 codes</a> indicating the countries of the servers, for example, \"US\" to represent \"United States of America\".",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "clientRegions": {
                                    "type": "array",
                                    "description": "An array of <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">ISO-3166-1 alpha-2 codes</a> indicating one or more countries which are the source of the client requests, for example, \"CN\" to represent \"China\".",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "clientIpRange": {
                                    "type": "array",
                                    "description": "Indicates the starting and ending IP addresses of the client requests to match against. They must be in IPv4 or IPv6 format.",
                                    "items": {
                                      "type": "string",
                                      "maxLength": 2
                                    }
                                  }
                                }
                              },
                              "action": {
                                "type": "object",
                                "description": "Indicates the action to take in response to a request that matches the conditions of the access control rule.",
                                "required": [
                                  "status"
                                ],
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "Indicates the HTTP status code to respond with. It must be in the range 300-309, 400-409, or 500-509 to indicate a redirection or error."
                                  },
                                  "message": {
                                    "type": "string",
                                    "maxLength": 200,
                                    "description": "If the value of the <i>status</i> field is in the range 300-309, the <i>message</i> field's value will be placed in a Location HTTP header returned to the client. If the <i>status</i> is in the range 400-409 or 500-509, the value will be returned in the response body to the client."
                                  }
                                }
                              }
                            },
                            "required": [
                              "conditions",
                              "action"
                            ]
                          }
                        },
                        "disableCertAutomation": {
                          "type": "boolean",
                          "description": "If you plan to allow CDNetworks to renew your TLS certificate through Let's Encrypt, set this to <i>false</i>. \n If you plan to handle certificate renewal yourself,  set this to <i>true</i>. For more information about our support for certificate auto-renewal, refer to the description of the <i>autoRenew</i> field in the <a href=\"#operation/createCertificate\">Create a certificate API</a>.",
                          "default": "false"
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "lastValidationStatus": {
                          "type": "string"
                        },
                        "frozen": {
                          "type": "string"
                        },
                        "creationTime": {
                          "type": "string"
                        },
                        "lastUpdateTime": {
                          "type": "string"
                        },
                        "inProduction": {
                          "type": "boolean"
                        },
                        "inStaging": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "x-tags": [
                    "Property Management"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "version": 1,
                      "configs": {
                        "description": "validPropertyVersionAllFields_PropertySteps",
                        "cacheKeyHostname": "testdomain-t1572403678265.mwtrial.info",
                        "tlsCertificateId": "b0b3f432ccbaafb5693ce13d",
                        "tlsMinVersion": "1.1",
                        "tlsMaxVersion": "1.2",
                        "tlsCiphers": "ALL:-MD5",
                        "syntaxVersion": "1",
                        "hasBeian": false,
                        "schemeInCacheKey": false,
                        "requestHandlers": {
                          "preprocess": {},
                          "prehtlookup": {},
                          "posthtlookup": {},
                          "origins": {},
                          "mod4origin": {},
                          "cachetime": {},
                          "mod4client": {},
                          "responseDone": {}
                        },
                        "hostnames": [
                          "testdomain-t1572403678233.mwtrial.info",
                          "testdomain-t1572403678265.mwtrial.info"
                        ],
                        "origins": [
                          {
                            "name": "my_origin_1572403678233",
                            "supportedProtocol": "both",
                            "hostHeader": "autohostheader.com",
                            "directConnection": "alwaysDirect",
                            "supportSni": true,
                            "servers": [
                              "mwtrial.info"
                            ]
                          }
                        ],
                        "loadBalancerHashKey": "$http_hashvalue",
                        "edgeLogic": "location / {origin_pass my_origin_1572403678233;} return 200;",
                        "allowProtocolDowngrade": false
                      },
                      "status": {
                        "lastValidationStatus": "NotValidated",
                        "frozen": false,
                        "creationTime": "2019-10-30T02:47:59Z",
                        "lastUpdateTime": "2019-10-30T02:47:59Z",
                        "inProduction": false,
                        "inStaging": false
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid version": {
                    "value": {
                      "code": "InvalidVersion",
                      "message": "The version number must be a positive integer or \"latest\"."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid property ID": {
                    "value": {
                      "code": "InvalidPropertyId",
                      "message": "The specified property ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Query a property version",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "propertyID",
          "in": "path",
          "required": true,
          "description": "ID of a property."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "version",
          "in": "path",
          "required": true,
          "description": "A property version. It must be an integer value >=1 or the word \"latest\", in which case the most recent version is returned."
        }
      ],
      "patch": {
        "summary": "Update a property version",
        "responses": {
          "204": {
            "description": "Indicates the property version was successfully updated."
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Frozen property version": {
                    "value": {
                      "code": "FrozenPropertyVersion",
                      "message": "The property version cannot be updated because it is currently deployed to staging or production."
                    }
                  },
                  "Invalid version": {
                    "value": {
                      "code": "InvalidVersion",
                      "message": "The version number must be a positive integer."
                    }
                  },
                  "Invalid redirect HTTP to HTTPS": {
                    "value": {
                      "code": "InvalidRedirectHttpToHttps",
                      "message": "The allowed values for redirectHttpToHttps are true, false, 302, 307 and 308."
                    }
                  },
                  "OriginHostnameConflict": {
                    "value": {
                      "code": "OriginHostnameConflict",
                      "message": "At least one of the hostnames is equal to an origin's server name."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The property could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidPropertyId",
                      "message": "The specified property ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API lets you update a property version. Please note that a property that has already been deployed to production or staging is 'frozen' and cannot be updated or validated again. The only exception is that the version description can be updated.",
        "operationId": "updatePropertyVersion",
        "tags": [
          "Property Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "propertyConfiguration",
                "type": "object",
                "description": "Describes a property configuration. This contains all the settings.",
                "x-examples": {
                  "example-1": {
                    "value": {
                      "syntaxVersion": 1,
                      "edgeLogic": "location / {origin_pass my_origin_1572420965460;}",
                      "tlsMaxVersion": "1.2",
                      "tlsMinVersion": "1.1",
                      "tlsCertificateId": "8961b13c87cd30a7687edc8c",
                      "origins": [
                        {
                          "hostHeader": "testcustomer.g.qtlcdn.com",
                          "servers": [
                            "edgetools.theoriginserver.com"
                          ],
                          "name": "my_origin_1572420965460",
                          "directConnection": "noDirect"
                        }
                      ],
                      "hostnames": [
                        "testcustomer1572420596536.g.qtlcdn.com"
                      ]
                    }
                  }
                },
                "x-tags": [
                  "Property Management"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A description of the version.\n"
                  },
                  "cacheKeyHostname": {
                    "type": "string",
                    "description": "The cachekey hostname must be a string made of lowercase letters, digits, dot, dash, and underscore. If not specified, the incoming Host header value will be used and the cache will not be shared across different hostnames in this property.\n",
                    "maxLength": 80,
                    "pattern": "^[a-z.-_]+"
                  },
                  "hostnames": {
                    "type": "array",
                    "description": "Hostnames associated with the property.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "realTimeLog": {
                    "type": "object",
                    "description": "This optional field allows you to configure notifications about client requests to be sent to a remote server. It can be used only if you have access to our <i>realtime_log_switch</i> directive. Please contact our support team if you require this feature.",
                    "properties": {
                      "logUrl": {
                        "type": "string",
                        "description": "The URL that receives the notifications. It must begin with “http” or \"https\". The server should support the POST method. This is a required field."
                      },
                      "sampleRate": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 1,
                        "maximum": 65536,
                        "description": "An integer between [1, 65536]. n means one notification for every n edge requests. 1 means every edge request will generate a notification. This is optional. Default is 1."
                      },
                      "escape": {
                        "type": "string",
                        "enum": [
                          "json",
                          "none"
                        ],
                        "description": "Specify <i>json</i> to enable JSON character escaping in variables or <i>none</i> to disable escaping."
                      },
                      "format": {
                        "type": "string",
                        "description": "This is a required field to specify the notification body to be sent to the remote server. It can be any printable text that can be sent in the body of an HTTP POST request. \n\nThe following built-in variables can be used within the format field. They will be replaced with the actual values in the notifications.\n<table>\n<tr><th>Name</th><th>Description</th></tr>\n<tr><td>$body_bytes_sent</td><td>Size of the response body.</td></tr>\n<tr><td>$bytes_sent</td><td>Size of the response, including body, headers and response line.</td></tr>\n<tr><td>$client_country_code</td><td>An ISO 3166-1 country code representing the country of the client request, for example, \"US\". \"ZZ\" is returned if the country is unknown.</td></tr>\n<tr><td>$client_real_ip</td><td>IP address of the client request.</td></tr>\n<tr><td>$cookie_x</td><td>This lets you obtain any cookie named x.  For example, $cookie_account would retrieve the value of a cookie named 'account'.</td></tr>\n<tr><td>$http_x</td><td>Obtain any HTTP header named x from the original request. The header name is converted to lower case with dashes replaced by underscores. For example, specify $http_user_agent to get the value of User-Agent.</td></tr>\n<tr><td>$msec</td><td>Current unix time in seconds with millisecond precision.</td></tr>\n<tr><td>$qtl_req_id</td><td>Unique identifier representing the request.</td></tr>\n<tr><td>$request_uri</td><td>HTTP request URI</td></tr>\n<tr><td>$request_method</td><td>The HTTP request method used to access the origin.</td></tr>\n<tr><td>$request_time</td><td>Response time in milliseconds. It is the time between receiving the request's  first byte and serving the last byte of the response.</td></tr>\n<tr><td>$sc_completed</td><td>1 to indicate the last byte of the object was served to the user, 0 otherwise.\n</td></tr>\n<tr><td>$sc_initial</td><td>1 to indicate the first byte of the object was served to the user, 0 otherwise.</td></tr>\n<tr><td>$scheme</td><td>Indicates the protocol of the user's request (\"http\" or https\").</td></tr>\n<tr><td>$sent_http_content_length</td><td>the original file size.</td></tr>\n<tr><td>$sent_http_x</td><td>Obtain the value of an HTTP header named x that is returned in the response to the client. The header name should be converted to lower case with dashes replaced by underscores. For example, $sent_http_etag would give you the value of the ETag header.</td></tr>\n<tr><td>$server_addr</td><td>IP address of the edge node serving the user's request.</td></tr>\n<tr><td>$server_protocol</td><td>Indicates the version of HTTP used in the user's request, either \"HTTP/1.0\", \"HTTP/1.1\", or \"HTTP/2.0\".</td></tr>\n<tr><td>$ssl_cipher</td><td>Indicates the cipher suite used for the TLS (SSL) connection.</td></tr>\n<tr><td>$ssl_server_name</td><td>The hostname that a client initiating a TLS (SSL) connection is attempting to connect to. It is only sent by clients supporting SNI (Server Name Indication).</td></tr>\n<tr><td>$ssl_protocol</td><td>Indicates the TLS version used for the TLS (SSL) connection. Example versions include \"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\", and \"unknown\".</td></tr>\n<tr><td>$status</td><td>An HTTP response code for the user's request.</td></tr>\n<tr><td>$tcpinfo_rtt</td><td>The time in microseconds taken by a packet to travel to the destination and back.</td></tr>\n</table>"
                      },
                      "headers": {
                        "type": "array",
                        "description": "HTTP header names and values to be sent to the notification server. A header name can contain any alphanumeric character or hyphen, \"-\". A header value can contain any printable characters. It can also include any of the built-in variables supported in the <i>format</i> field of the realTimeLog object.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of an HTTP header."
                            },
                            "value": {
                              "type": "string",
                              "description": "Value of an HTTP header."
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "logUrl"
                    ]
                  },
                  "edgeLogic": {
                    "type": "string",
                    "maxLength": 200000,
                    "description": "Refer to https://docs.cdnetworks.com/cdn/docs/edge-logic/intro"
                  },
                  "hasBeian": {
                    "type": "boolean",
                    "default": false,
                    "description": "The value indicates whether all the hostnames in this property have Beian license on file with the Chinese government. This is required to serve this property from servers in mainland China. A value of <i>false</i> means servers outside of mainland China will be used to distribute content to visitors in China. If set to <i>true</i> you must also specify the content type in the <i>beianContentType</i> field."
                  },
                  "redirectHttpToHttps": {
                    "type": [
                      "boolean",
                      "string"
                    ],
                    "default": false,
                    "description": "This field can be set to either a boolean value or a string. When the value is set to <i>true</i>, the server will redirect all HTTP requests to HTTPS using status code 301. You can also specify string values \"302\", \"307\", or \"308\" instead if you wish to return a different status code when a request is redirected."
                  },
                  "origins": {
                    "type": "array",
                    "description": "Describes the origin servers for the property's content.",
                    "items": {
                      "type": "object",
                      "description": "Describes an origin server.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of an origin. It must be unique within this property.\n",
                          "pattern": "^[a-zA-z0-9_]"
                        },
                        "servers": {
                          "type": "array",
                          "description": "Each entry should be a string consisting of an address optionally followed by one or more parameters, separated by space characters. The address can take one of the following three forms:\n<ul>\n<li>{hostname or IP address}</li>\n<li>{hostname or IP address}:{http port}</li>\n<li>{hostname or IP address}:{http port},{https port}</li>\n</ul>\nValues for the HTTP and HTTPS ports should be integers in the range [1,65535]. \nEven when the value of <i>supportedProtocol</i> is “https”, the HTTPS port has to be specified after the comma.\nIn the third form, one of the two ports can be empty.\n\nSupported parameters are \"backup\" and \"weight\".\n\n\"backup\" is used to indicate the server is a backup server. It will be used when the primary servers are unavailable.\n\n\"weight\" is a value in the range [1, 100]. The default value is 1. It lets you control the likelihood that one origin server will be used relative to another.\n\nThere should be at least one primary server defined; it does not have the \"backup\" parameter.\n\nExample:\n<code>[\"www.abc.com weight=1\", \"www1.abc.com:8080 weight=4\", \"www2.abc.com:880,4443 backup\"]</code>\n\nThis example specifies two primary servers which are used in a 1:4 ratio meaning one gets about 20% of the requests to origin while the other gets 80% of the requests. In addition, a backup server is specified.\n",
                          "example": "[“www.abc.com”, “www1.abc.com:8080”, “www2.abc.com:880,4443 backup”]",
                          "items": {
                            "type": "string"
                          }
                        },
                        "supportedProtocol": {
                          "type": "string",
                          "description": "This optional field indicates the protocol supported by the origin server. If this property has a certificate attached to it, the value can be set to <i>http</i> if the <i>allowProtocolDowngrade</i> field is also set to <i>true</i>.",
                          "enum": [
                            "http",
                            "https",
                            "both"
                          ]
                        },
                        "directConnection": {
                          "type": "string",
                          "default": "auto",
                          "description": "Optional. This parameter tells us how important it is to directly go to this origin without going through any intermediate cache to fetch content. The values can be “noDirect”, “auto”, “alwaysDirect”. \n\n“noDirect” means we always go through at least one intermediate cache. Customers who care particularly about the origin's workload can use this option. Our cache scheduler will dynamically pick the intermediate cache based on performance and resource availability.\n\n“auto” means the cache scheduler will make the choice dynamically based on performance and resource availability. This is the default behavior if not specified.\n\n“alwaysDirect” means we always directly connect to this origin.\n"
                        },
                        "hostHeader": {
                          "type": "string",
                          "description": "Optional. It should be a valid hostname. It will also be used as the SNI servername when contacting the HTTPS origin. We also allow it to be an nginx variable that begins with ‘$’ followed by [a-z_]{3,60}. Nginx variable names are case insensitive, so we only allow lowercase characters.\nIf not specified, the value of the HOST header in the request will be used. \n\nOne constraint is that if “aswS3” is specified for origin authentication, the value of <i>hostHeader</i> cannot be a variable or empty. It has to be a valid Amazon S3 hostname. Refer to https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html",
                          "format": "hostname"
                        },
                        "supportSni": {
                          "type": "boolean",
                          "default": true,
                          "description": "Optional. If set to <i>true</i>, the SNI extension will be enabled in the TLS handshake with the origin server."
                        },
                        "verifyOrigin": {
                          "type": "boolean",
                          "default": false,
                          "description": "Optional. It controls whether the cache will validate the certificate of the origin."
                        },
                        "authentication": {
                          "type": "object",
                          "description": "Optional. It is a structure to specify the parameters, such as password, for authentication with the origin servers. It should have at least one field: ”methodName”, which should be a string indicating one of the predefined authentication methods. The only valid value at this time is “awsS3”. When “awsS3” is used, the following parameters are required:\n<ul>\n<li>awsS3.region</li>\n<li>awsS3.accessKey</li>\n<li>awsS3.secretKey</li>\n</ul>\nAlso, the value of the <i>hostHeader</i> field cannot be a variable or empty. It must be a valid Amazon S3 hostname.\n\nExample:\n<code>\n{\"methodName\":\"awsS3\",\n\"awsS3\":{\n\"region\":\"us-west-1\",\n\"accessKey\":\"sdnu2932\",\n\"secretKey\":\"d12345678abcdefghi\"\n}}\n</code>",
                          "example": "{“methodName”:”awsS3”, ”awsS3”:{ ”region”:”us-west-1”, ”accessKey”:”sdnu2932”, ”secretKey”:”d12133424fvregvrew” }}",
                          "properties": {
                            "methodName": {
                              "type": "string",
                              "description": "Authentication method."
                            }
                          }
                        }
                      }
                    }
                  },
                  "syntaxVersion": {
                    "type": "number",
                    "default": 1,
                    "description": "The value must be set to 1 at this time."
                  },
                  "disableHttp2": {
                    "type": "boolean",
                    "default": false,
                    "description": "When set to <i>true</i>, the server will not support HTTP/2. Only HTTP/1.1 will be supported.\n"
                  },
                  "schemeInCacheKey": {
                    "type": "boolean",
                    "default": false,
                    "description": "Specifies whether the scheme (“http” or “https”) should be included in the cache key. Default behavior is </i>false</i>. Set to <i>true</i> if the content is known to be different for different schemes.\n"
                  },
                  "tlsMaxVersion": {
                    "type": "string",
                    "default": 1.3,
                    "enum": [
                      "1.1",
                      "1.2",
                      "1.3"
                    ],
                    "description": "Maximum supported TLS version."
                  },
                  "loadBalancerHashKey": {
                    "type": "string",
                    "description": "Multiple tiers of load balancing are used in our CDN pops to distribute the client requests to different servers. We are using consistent hashing in many of those places. By default, the URL is used as the hash key, which should be good enough in most cases. Here you can define additional variables to be added to the hash key to distribute the requests more evenly. One typical use case is when all requests carry the same URL, but use a particular header to indicate the resources. \n\nThis is an optional field. The default value is an empty string. A valid value is a string meeting the following criteria:\n<ol>\n<li>Consists of alphanumeric characters, underscore _, equal sign =, dollar sign $, and ampersand sign &.</li>\n<li>The variable names can only be in one of the following formats: $http_name, $cookie_name, or $arg_name.</li>\n<li>At least one variable must be specified. No more than three are permitted.</li>\n<li>The total length should be no more than 100 characters.</li>\n</ol>\nThe validator will treat any dollar sign and the string after it (before any = or & or $) as a variable. \n\nHere are some examples of valid values:\n<table>\n<tr><td>$http_abc</td></tr>\n<tr><td>abc=$http_abc&def=$http_def&c_123=$cookie_123</td></tr>\n<tr><td>abc=$http_abc=$http_def</td></tr>\n<tr><td>$http_abc&$http_def</td></tr>\n<tr><td>=$http_abd&</td></tr>\n<tr><td>&&abc==$http_abc&&&===qwer</td></tr>\n</table>\n",
                    "maxLength": 100
                  },
                  "tlsCertificateId": {
                    "type": "number",
                    "description": "Refers to a <a href=\"#tag/Certificate-Management\">certificate</a>. It is invalid to only set the <i>tlsCertificateId1</i> field without setting the <i>tlsCertificateId</i> field. If <i>tlsCertificateId</i> is not set, HTTPS will not be enabled for this property. This is a feature to enable you to specify two certificates of different types, i.e. one RSA, one EC. If two certificates of the same type are specified, the one specified by <i>tlsCertificateId</i> will be ignored. "
                  },
                  "tlsMinVersion": {
                    "type": "string",
                    "default": 1,
                    "description": "Minimum required TLS version.",
                    "enum": [
                      "1.1",
                      "1.2",
                      "1.3",
                      "1"
                    ]
                  },
                  "tlsCiphers": {
                    "type": "string",
                    "description": "Any cipher list supported by \"openssl ciphers\". See https://www.openssl.org/docs/manmaster/man1/ciphers.html\n",
                    "maxLength": 2040
                  },
                  "allowProtocolDowngrade": {
                    "type": "boolean",
                    "default": false,
                    "description": "This setting only applies when the property has an attached certificate allowing client requests to use HTTPS. When the value of allowProtocolDowngrade is <i>false</i>, we require all the origin servers to support HTTPS. When the value is <i>true</i>, we allow origins that only support HTTP; this setting reduces security.\n"
                  },
                  "tlsCertificateId1": {
                    "type": "number",
                    "description": "Refers to a <a href=\"#tag/Certificate-Management\">certificate</a>. It is invalid to only set the <i>tlsCertificateId1</i> field without setting the <i>tlsCertificateId</i> field. If <i>tlsCertificateId</i> is not set, HTTPS will not be enabled for this property. This is a feature to enable you to specify two certificates of different types, i.e. one RSA, one EC. If two certificates of the same type are specified, the one specified by <i>tlsCertificateId</i> will be ignored. \n\n"
                  },
                  "videoSeek": {
                    "type": "object",
                    "description": "This object allows you to support video players requesting partial content through query string parameters. If you specify <i>videoSeek</i>, you must enter a value for <i>startParameter</i>.",
                    "properties": {
                      "startParameter": {
                        "type": "string",
                        "description": "Name of the query parameter indicating the starting offset in bytes of the content to fetch. The parameter name should begin with a letter (a-z, a-Z) and may be followed by up to 30 letters and numbers.",
                        "minLength": 1,
                        "maxLength": 31
                      },
                      "endParameter": {
                        "type": "string",
                        "description": "Name of the query parameter indicating the ending offset of the content to fetch. The parameter name should begin with a letter (a-z, a-Z) and may be followed by up to 30 letters and numbers.",
                        "minLength": 0,
                        "maxLength": 31
                      }
                    },
                    "required": [
                      "startParameter"
                    ]
                  },
                  "tlsSessionTimeout": {
                    "type": "integer",
                    "minimum": 300,
                    "maximum": 86400,
                    "default": 1800,
                    "description": "Lifespan of TLS session ticket in seconds."
                  },
                  "enableOcspStapling": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enables Online Certificate Status Protocol (OCSP) stapling to check the revocation status of digital certificates. (Refer to https://en.wikipedia.org/wiki/OCSP_stapling)"
                  },
                  "beianContentType": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 24,
                    "description": "If you are planning to distribute content through servers in mainland China, you will need to set the <i>hasBeian</i> field to <i>true</i> and also indicate the type of content you are distributing. Enter the value that best corresponds to your content:\n\n<table>\n<tr><th>Value</th><th>Content Type</th></tr>\n<tr><td>1</td><td>Instant Messaging</td></tr>\n<tr><td>2</td><td>Search Engine</td></tr>\n<tr><td>3</td><td>Web Portal</td></tr>\n<tr><td>4</td><td>Online Postal Service</td></tr>\n<tr><td>5</td><td>Online News</td></tr>\n<tr><td>6</td><td>Blog</td></tr>\n<tr><td>7</td><td>Advertisement</td></tr>\n<tr><td>8</td><td>Organization Web Portal</td></tr>\n<tr><td>9</td><td>Shopping</td></tr>\n<tr><td>10</td><td>Online Payment</td></tr>\n<tr><td>11</td><td>Online Bank</td></tr>\n<tr><td>12</td><td>Online Stock Market</td></tr>\n<tr><td>13</td><td>Online Gaming</td></tr>\n<tr><td>14</td><td>Online Music</td></tr>\n<tr><td>15</td><td>Online Movie</td></tr>\n<tr><td>16</td><td>Online Picture</td></tr>\n<tr><td>17</td><td>Software Download</td></tr>\n<tr><td>18</td><td>Job Hunting</td></tr>\n<tr><td>19</td><td>Online Dating</td></tr>\n<tr><td>20</td><td>Online Real Property</td></tr>\n<tr><td>21</td><td>Online Education</td></tr>\n<tr><td>22</td><td>Web Design</td></tr>\n<tr><td>23</td><td>WAP</td></tr>\n<tr><td>24</td><td>Others</td></tr>\n</table>"
                  },
                  "accessControlRules": {
                    "type": "array",
                    "description": "Specify one or more access control rules to restrict access to your content. More advanced configuration can be done using edge logic. These access control rules take precedence over edge logic if both are defined.",
                    "items": {
                      "title": "accessControlRule",
                      "type": "object",
                      "description": "This object defines a rule that can be used to restrict access to your content. More complex rules can be created using CDN360's Edge Logic.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "maxLength": 60,
                          "minLength": 0,
                          "description": "An optional ID for the access control rule."
                        },
                        "conditions": {
                          "type": "object",
                          "description": "Specify the conditions that the incoming request must match. At least one condition must be specified. If multiple are specified, all must match.",
                          "properties": {
                            "scheme": {
                              "type": "string",
                              "enum": [
                                "https",
                                "http"
                              ],
                              "description": "Indicates whether the incoming request uses HTTP or HTTPS."
                            },
                            "hostname": {
                              "type": "string",
                              "description": "Indicates the hostname requested. It must be one of the hostnames defined in the property."
                            },
                            "uri": {
                              "type": "string",
                              "description": "The URI begins with \"/ and can end with \"*\" for prefix matching. ",
                              "maxLength": 500
                            },
                            "serverRegions": {
                              "type": "array",
                              "description": "An array of <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">ISO-3166-1 alpha-2 codes</a> indicating the countries of the servers, for example, \"US\" to represent \"United States of America\".",
                              "items": {
                                "type": "string"
                              }
                            },
                            "clientRegions": {
                              "type": "array",
                              "description": "An array of <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">ISO-3166-1 alpha-2 codes</a> indicating one or more countries which are the source of the client requests, for example, \"CN\" to represent \"China\".",
                              "items": {
                                "type": "string"
                              }
                            },
                            "clientIpRange": {
                              "type": "array",
                              "description": "Indicates the starting and ending IP addresses of the client requests to match against. They must be in IPv4 or IPv6 format.",
                              "items": {
                                "type": "string",
                                "maxLength": 2
                              }
                            }
                          }
                        },
                        "action": {
                          "type": "object",
                          "description": "Indicates the action to take in response to a request that matches the conditions of the access control rule.",
                          "required": [
                            "status"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Indicates the HTTP status code to respond with. It must be in the range 300-309, 400-409, or 500-509 to indicate a redirection or error."
                            },
                            "message": {
                              "type": "string",
                              "maxLength": 200,
                              "description": "If the value of the <i>status</i> field is in the range 300-309, the <i>message</i> field's value will be placed in a Location HTTP header returned to the client. If the <i>status</i> is in the range 400-409 or 500-509, the value will be returned in the response body to the client."
                            }
                          }
                        }
                      },
                      "required": [
                        "conditions",
                        "action"
                      ]
                    }
                  },
                  "disableCertAutomation": {
                    "type": "boolean",
                    "description": "If you plan to allow CDNetworks to renew your TLS certificate through Let's Encrypt, set this to <i>false</i>. \n If you plan to handle certificate renewal yourself,  set this to <i>true</i>. For more information about our support for certificate auto-renewal, refer to the description of the <i>autoRenew</i> field in the <a href=\"#operation/createCertificate\">Create a certificate API</a>.",
                    "default": "false"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "origins": [
                      {
                        "supportedProtocol": "both",
                        "hostHeader": "autohostheader.com",
                        "servers": [
                          "mwtrial.info"
                        ],
                        "supportSni": false,
                        "name": "my_origin_1572403819776",
                        "verifyOrigin": null,
                        "directConnection": "auto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "The body consists of the property configuration you wish to set."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "delete": {
        "summary": "Delete a property version",
        "tags": [
          "Property Management"
        ],
        "responses": {
          "204": {
            "description": "The property version was deleted."
          },
          "404": {
            "description": "Invalid property. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid property ID": {
                    "value": {
                      "code": "InvalidPropertyId",
                      "message": "The specified property ID does not exist."
                    }
                  },
                  "Invalid property version ": {
                    "value": {
                      "code": "InvalidVersion",
                      "message": "The property version specified does not exist."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The property version could not be deleted. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Property in use": {
                    "value": {
                      "code": "PropertyInUse",
                      "message": "The property version is currently deployed to staging or production and cannot be deleted. The user needs to create a deployment task to remove the property from cache servers."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "delete-cdn-properties-propertyID-versions-version",
        "description": "Delete a property version.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/properties/{propertyID}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "propertyID",
          "in": "path",
          "description": "ID of a property\n",
          "required": true
        }
      ],
      "get": {
        "summary": "Query a property",
        "tags": [
          "Property Management"
        ],
        "responses": {
          "200": {
            "description": "This API returns a brief summary of a property including its description, version deployed to production and staging, and the number of versions that have been created.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "property",
                  "type": "object",
                  "description": "Describes a property returned by Query Property.",
                  "x-examples": {
                    "example-1": {
                      "value": {
                        "name": "TestProperty1572420965460",
                        "description": "validPropertyBodyWithCertificate_PropertyEndToEndTestSteps",
                        "ownerCustomerId": 10000021,
                        "versions": 1,
                        "lastUpdateTime": "2019-10-30T07:36:06Z",
                        "creationTime": "2019-10-30T07:36:06Z"
                      }
                    }
                  },
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the property.\n"
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the property.\n"
                    },
                    "ownerCustomerId": {
                      "type": "integer",
                      "description": "ID of the customer that owns this property."
                    },
                    "versionInProduction": {
                      "type": "integer",
                      "description": "Indicates the version of the property deployed to production. The field will be omitted if the property was not yet deployed."
                    },
                    "versionInStaging": {
                      "type": "integer",
                      "description": "Indicates the version of the property deployed to staging. The field will be omitted if the property was not yet deployed."
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "An RFC 3339 date indicating when the property was created."
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "description": "An RFC 3339 date indicating when the property was last updated."
                    },
                    "versions": {
                      "type": "integer",
                      "description": "Number of versions of the property.\n"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "name": "Test20190827",
                      "description": "testing ....",
                      "ownerCustomerId": 6,
                      "versions": 1,
                      "lastUpdateTime": "2019-08-27T19:33:38Z",
                      "creationTime": "2019-08-27T19:15:17Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The property was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid property ID": {
                    "value": {
                      "code": "InvalidPropertyId",
                      "message": "The specified property ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Returns a summary about a property including the number of versions that have been created and which versions are deployed.",
        "operationId": "queryProperty",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "patch": {
        "tags": [
          "Property Management"
        ],
        "summary": "Update a property",
        "responses": {
          "200": {
            "description": "This response indicates the property was successfully updated."
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "This user is not allowed to perform this request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The property cannot be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid property ID": {
                    "value": {
                      "code": "InvalidPropertyId",
                      "message": "The specified property ID does not exist."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "There is another property with the same name.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Duplicate property name.": {
                    "value": {
                      "code": "DuplicatePropertyName",
                      "message": "A property with the same name already exists."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint changes the name and description of a property. Its versions are unaffected. \n\nIf you wish to change a property's configuration, use the <a href=\"#operation/updatePropertyVersion\">Update a property version API</a>.",
        "operationId": "updateProperty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the property."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the property. If unspecified, the description will not be updated."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "name": "TestProperty1572403806952",
                    "description": "updated"
                  }
                }
              }
            }
          },
          "description": "Specify the property's new name or description."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "delete": {
        "summary": "Delete a Property",
        "description": "Delete a property by its ID.",
        "operationId": "deleteProperty",
        "responses": {
          "204": {
            "description": "The property was successfully deleted."
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "This user is not allowed to perform this request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidPropertyId",
                      "message": "The specified property ID does not exist."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The property could not be deleted because it is currently deployed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "PropertyInUse",
                      "message": "The property is currently deployed to staging or production and cannot be deleted. The user must create a deployment task to remove the property from the cache servers. Version on staging: 2. Version on production: 2."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Property Management"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/edgeHostnames/{edgeHostname}": {
      "get": {
        "summary": "Get an edge hostname",
        "tags": [
          "Edge Hostname Management"
        ],
        "responses": {
          "200": {
            "description": "The response body contains details of the edge hostname.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "history": {
                      "type": "array",
                      "description": "Operation history",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiAccountId": {
                            "type": "string",
                            "description": "Indicates the API account that made the change."
                          },
                          "apiName": {
                            "type": "string",
                            "description": "API account name."
                          },
                          "operation": {
                            "type": "string",
                            "enum": [
                              "creation",
                              "update"
                            ],
                            "description": "Indicates the action taken."
                          },
                          "time": {
                            "type": "string",
                            "description": "RFC 3339 format date of the event.",
                            "example": "\"2019-11-11T23:34:59Z"
                          },
                          "apiRequestId": {
                            "type": "string",
                            "description": "An ID representing the API call that made the change."
                          }
                        },
                        "required": [
                          "apiAccountId",
                          "apiName",
                          "operation",
                          "time",
                          "apiRequestId"
                        ]
                      }
                    },
                    "lastUpdateTime": {
                      "type": "string",
                      "description": "RFC 3339 format date indicating when the edge hostname was last updated.",
                      "example": "2019-11-11T23:35:00Z"
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "RFC 3339 format date indicating when the edge hostname was created.",
                      "example": "2019-11-11T23:34:59Z"
                    },
                    "ownerCustomerId": {
                      "type": "integer",
                      "description": "Indicates the customer account that owns the edge hostname.",
                      "format": "int64"
                    },
                    "configs": {
                      "type": "object",
                      "description": "Contains settings that can be modified.",
                      "properties": {
                        "edgeHostname": {
                          "type": "string",
                          "description": "An edge hostname."
                        },
                        "pciRequired": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates whether PCI compliance is required.  <i>true</i> means content will only be served by PCI certified PoPs."
                        },
                        "description": {
                          "type": "string",
                          "description": "A description of the edge hostname."
                        },
                        "hasBeian": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicate whether you have a Beian license for service in China. If you do, content can be served by servers located within mainland China.\n"
                        },
                        "clientZones": {
                          "type": "array",
                          "items": {
                            "title": "Edge Hostname Client Zone Rule",
                            "type": "object",
                            "description": "This object describes how client requests from a zone are handled. A zone is a combination of a geographic region and an ISP.",
                            "x-examples": {
                              "example-1": {
                                "region": "all",
                                "action": {
                                  "type": "deliver",
                                  "by": [
                                    "standard"
                                  ]
                                }
                              },
                              "example-2": {
                                "region": "as.cn",
                                "action": {
                                  "type": "deliver",
                                  "by": [
                                    "standard",
                                    "premium",
                                    "premium+"
                                  ]
                                }
                              },
                              "example-3": {
                                "region": "apac",
                                "action": {
                                  "type": "reject"
                                }
                              },
                              "example-4": {
                                "region": "as.cn",
                                "action": {
                                  "type": "redirect",
                                  "to": [
                                    "redirect.cname.com"
                                  ]
                                },
                                "weight": 10
                              }
                            },
                            "x-tags": [
                              "Edge Hostname Management"
                            ],
                            "properties": {
                              "region": {
                                "type": "string",
                                "description": "This field indicates the region in which the rule applies. Refer to our <a href=\"#operation/get-cdn-edgeHostnames-clientRegions\">API to get client regions</a> to get valid region codes. For example, if you wish to create a rule that covers all of Europe, simply specify \"eu\" as the region. You can indicate specific countries. For example, \"na.us\" represents the \"United States of America\", and \"eu.fr\" represents \"France\".  \n\nA special client region “all” can be used to specify that the rule applies to the entire world. If overlapping regions are specified, the more specific one takes precedence. For example, if you specify \"as\" in one rule and \"as.cn\" in another, then a request from China will follow the rule for \"as.cn\"."
                              },
                              "weight": {
                                "type": "integer",
                                "default": 100,
                                "description": "When multiple actions are specified for a client zone, the weight is used to adjust the probability of a client zone rule applying to a client request.\nConsider two rules that apply to \"as.cn\": <code>{\"region\":\"as.cn\", \"isp\":\"all\", \"action\":{\"type\":\"deliver\", \"by\":[\"standard\", \"premium\", \"premium+\"]}},\n    {\"region\":\"as.cn\", \"isp\":\"all\", \"action\":{\"type\":\"redirect\", \"to\":[\"akamai.cname.com\"]}, \"weight\":10}</code>\n\n The probability of \"deliver\" will be 100/(100+10) or 0.909 while the probability of \"redirect\" will be 10/(100+10) or 0.091.\n \n",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "action": {
                                "type": "object",
                                "description": "This object describes the action to take for requests matching the rule.",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "deliver",
                                      "redirect",
                                      "reject"
                                    ],
                                    "description": "Defines the action to take for requests to the zone. Options are to <i>deliver</i> using one or more server groups, to <i>reject</i> the request altogether, or to <i>redirect</i> to another domain. If \"reject\" is specified, the client request will be redirected to a server that always responds with HTTP response code 403 representing \"Forbidden\". Up to one \"reject\" action is allowed for each client zone.\n"
                                  },
                                  "by": {
                                    "type": "array",
                                    "default": "standard",
                                    "description": "This field is used if the action is of type \"deliver\". Specify one or more of the server groups (<i>standard</i>, <i>premium</i>, <i>premium+</i>, and <i>ultra</i>) to control what servers can be used to deliver content. If unspecified, \"standard\" is used.",
                                    "enum": [
                                      "standard",
                                      "premium",
                                      "premium+",
                                      "ultra"
                                    ],
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "to": {
                                    "type": "string",
                                    "description": "This field is used if the action is of type \"redirect\". It indicates the hostname or IP address to redirect to. This is typically an origin server or another CDN provider.",
                                    "example": "domain.com"
                                  },
                                  "enableIPv6": {
                                    "type": "boolean",
                                    "description": "Indicates whether an IPv6 address can be used. This value is used only if the client zone rule's action type is \"deliver\".",
                                    "default": "true"
                                  }
                                },
                                "required": [
                                  "type"
                                ]
                              },
                              "isp": {
                                "type": "string",
                                "description": "Specify the code representing an ISP (Internet Service Provider) if the rule only applies to requests from a particular ISP. Call our <a href=\"#operation/get-cdn-edgeHostnames-isps\">API to get a list of supported ISPs</a>. Specify 'all' to indicate all ISPs rather than a particular one. Specify a comma separated list of ISP codes if you want your rule to apply to more than one ISP."
                              }
                            },
                            "required": [
                              "region"
                            ]
                          }
                        },
                        "estimatedBandwidth": {
                          "type": "string",
                          "description": "An estimate of the bandwidth required to serve content using this edge hostname. Units of measurement should be in Tbps, Gbps, Mbps, or kbps. Example: 100Gbps"
                        }
                      },
                      "required": [
                        "edge hostname"
                      ]
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "ownerCustomerId": 123456,
                      "configs": {
                        "edgeHostname": "rtycno8odxuwycaror3f.qtlcdn.com",
                        "hasBeian": false,
                        "clientZones": [
                          {
                            "region": "all",
                            "action": {
                              "type": "deliver",
                              "by": [
                                "standard"
                              ],
                              "enableIPv6": true
                            },
                            "isp": "all",
                            "weight": 100
                          }
                        ],
                        "geoFences": []
                      },
                      "creationTime": "2020-05-30T00:43:49Z",
                      "lastUpdateTime": "2020-05-30T00:43:49Z",
                      "history": [
                        {
                          "apiName": "myapiname",
                          "operation": "creation",
                          "time": "2020-05-30T00:43:49Z",
                          "apiRequestId": "b46c1a060706c4e9"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The edge hostname was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidEdgeHostname",
                      "message": "The specified edge hostname does not exist or the caller doesn't have access to this resource."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API returns information about an edge hostname including the associated client zone rules and operation history.",
        "operationId": "getEdgeHostname",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "delete": {
        "summary": "Delete an edge hostname",
        "tags": [
          "Edge Hostname Management"
        ],
        "responses": {
          "204": {
            "description": "The edge hostname was successfully deleted."
          },
          "404": {
            "description": "The edge hostname could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidEdgeHostname",
                      "message": "The specified edge hostname does not exist or the caller doesn't have access to this resource."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "deleteEdgeHostname",
        "description": "Use this API to delete an edge hostname. If you have configured your DNS server with this edge hostname, you should update your DNS records before deleting it. Otherwise, visitors to the associated hostnames will see an error.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "edgeHostname",
          "in": "path",
          "required": true,
          "description": "an edge hostname"
        }
      ],
      "put": {
        "summary": "Update an edge hostname",
        "responses": {
          "204": {
            "description": "The edge hostname was updated."
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidRedirectDst",
                      "message": "The field 'to' must contain either one hostname or multiple IPs."
                    }
                  },
                  "example-2": {
                    "value": {
                      "code": "InvalidWeightCode",
                      "message": "Invalid weight 'test'. The weight should be an integer between 0 and 100."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The edge hostname was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidEdgeHostname",
                      "message": "The specified edge hostname does not exist or the caller doesn't have access to this resource."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "updateEdgeHostname",
        "description": "Use this API to update an edge hostname. Be sure to enter all fields describing your edge hostname including ones that are not changing.",
        "tags": [
          "Edge Hostname Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "edgeHostname": {
                    "type": "string",
                    "description": "The edge hostname"
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the edge hostname."
                  },
                  "pciRequired": {
                    "type": "boolean",
                    "description": "Whether PCI compliance is required.  <i>true</i> means content will only be served by PCI certified PoPs."
                  },
                  "hasBeian": {
                    "type": "boolean",
                    "description": "Indicate whether you have a Beian license for service in China.  If you do, content can be served by servers located within mainland China."
                  },
                  "gdprCompliant": {
                    "type": "boolean",
                    "description": "If set to 'true', clients from European Economic Area (EEA) countries will only be served by IP addresses in EEA countries."
                  },
                  "clientZones": {
                    "type": "array",
                    "description": "Specify rules to control how requests from client zones are handled. If unspecified, a default rule is created that uses our 'standard' server group to handle all requests.  <code>{\"region\":\"all\", \"isp\":\"all\", \"action\":{\"type\":\"deliver\",\"by\":[\"standard\"]}}</code>",
                    "items": {
                      "title": "Edge Hostname Client Zone Rule",
                      "type": "object",
                      "description": "This object describes how client requests from a zone are handled. A zone is a combination of a geographic region and an ISP.",
                      "x-examples": {
                        "example-1": {
                          "region": "all",
                          "action": {
                            "type": "deliver",
                            "by": [
                              "standard"
                            ]
                          }
                        },
                        "example-2": {
                          "region": "as.cn",
                          "action": {
                            "type": "deliver",
                            "by": [
                              "standard",
                              "premium",
                              "premium+"
                            ]
                          }
                        },
                        "example-3": {
                          "region": "apac",
                          "action": {
                            "type": "reject"
                          }
                        },
                        "example-4": {
                          "region": "as.cn",
                          "action": {
                            "type": "redirect",
                            "to": [
                              "redirect.cname.com"
                            ]
                          },
                          "weight": 10
                        }
                      },
                      "x-tags": [
                        "Edge Hostname Management"
                      ],
                      "properties": {
                        "region": {
                          "type": "string",
                          "description": "This field indicates the region in which the rule applies. Refer to our <a href=\"#operation/get-cdn-edgeHostnames-clientRegions\">API to get client regions</a> to get valid region codes. For example, if you wish to create a rule that covers all of Europe, simply specify \"eu\" as the region. You can indicate specific countries. For example, \"na.us\" represents the \"United States of America\", and \"eu.fr\" represents \"France\".  \n\nA special client region “all” can be used to specify that the rule applies to the entire world. If overlapping regions are specified, the more specific one takes precedence. For example, if you specify \"as\" in one rule and \"as.cn\" in another, then a request from China will follow the rule for \"as.cn\"."
                        },
                        "weight": {
                          "type": "integer",
                          "default": 100,
                          "description": "When multiple actions are specified for a client zone, the weight is used to adjust the probability of a client zone rule applying to a client request.\nConsider two rules that apply to \"as.cn\": <code>{\"region\":\"as.cn\", \"isp\":\"all\", \"action\":{\"type\":\"deliver\", \"by\":[\"standard\", \"premium\", \"premium+\"]}},\n    {\"region\":\"as.cn\", \"isp\":\"all\", \"action\":{\"type\":\"redirect\", \"to\":[\"akamai.cname.com\"]}, \"weight\":10}</code>\n\n The probability of \"deliver\" will be 100/(100+10) or 0.909 while the probability of \"redirect\" will be 10/(100+10) or 0.091.\n \n",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "action": {
                          "type": "object",
                          "description": "This object describes the action to take for requests matching the rule.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "deliver",
                                "redirect",
                                "reject"
                              ],
                              "description": "Defines the action to take for requests to the zone. Options are to <i>deliver</i> using one or more server groups, to <i>reject</i> the request altogether, or to <i>redirect</i> to another domain. If \"reject\" is specified, the client request will be redirected to a server that always responds with HTTP response code 403 representing \"Forbidden\". Up to one \"reject\" action is allowed for each client zone.\n"
                            },
                            "by": {
                              "type": "array",
                              "default": "standard",
                              "description": "This field is used if the action is of type \"deliver\". Specify one or more of the server groups (<i>standard</i>, <i>premium</i>, <i>premium+</i>, and <i>ultra</i>) to control what servers can be used to deliver content. If unspecified, \"standard\" is used.",
                              "enum": [
                                "standard",
                                "premium",
                                "premium+",
                                "ultra"
                              ],
                              "items": {
                                "type": "string"
                              }
                            },
                            "to": {
                              "type": "string",
                              "description": "This field is used if the action is of type \"redirect\". It indicates the hostname or IP address to redirect to. This is typically an origin server or another CDN provider.",
                              "example": "domain.com"
                            },
                            "enableIPv6": {
                              "type": "boolean",
                              "description": "Indicates whether an IPv6 address can be used. This value is used only if the client zone rule's action type is \"deliver\".",
                              "default": "true"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        "isp": {
                          "type": "string",
                          "description": "Specify the code representing an ISP (Internet Service Provider) if the rule only applies to requests from a particular ISP. Call our <a href=\"#operation/get-cdn-edgeHostnames-isps\">API to get a list of supported ISPs</a>. Specify 'all' to indicate all ISPs rather than a particular one. Specify a comma separated list of ISP codes if you want your rule to apply to more than one ISP."
                        }
                      },
                      "required": [
                        "region"
                      ]
                    }
                  },
                  "estimatedBandwidth": {
                    "type": "string",
                    "description": "An estimate of the bandwidth required to serve content using this edge hostname. Units of measurement should be in Tbps, Gbps, Mbps, or kbps. Example: 100Gbps"
                  }
                },
                "required": [
                  "edgeHostname"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "edgeHostname": "test.t1573515322742.qtlcdn.com",
                    "clientZones": [
                      {
                        "region": "all",
                        "action": {
                          "type": "deliver",
                          "by": [
                            "standard"
                          ],
                          "enableIPv6": true
                        },
                        "weight": 100
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "The request body fully describes the edge hostname. Please include all fields even if you are not changing their values."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "patch": {
        "summary": "Update an edge hostname",
        "operationId": "patch-cdn-edge-hostname",
        "responses": {
          "204": {
            "description": "The edge hostname was successfully updated."
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid client zone": {
                    "value": {
                      "code": "InvalidClientZone",
                      "message": "Invalid client region 'abc'."
                    }
                  },
                  "Invalid ISP": {
                    "value": {
                      "code": "InvalidISP",
                      "message": "Invalid ISP 'abcdef'."
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "The edge hostname could not be found. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid edge hostname": {
                    "value": {
                      "code": "InvalidEdgeHostname",
                      "message": "The specified edge hostname does not exist or the caller doesn't have access to this resource."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API allows you to update an edge hostname by sending only the fields that are changing.",
        "tags": [
          "Edge Hostname Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A description of the edge hostname."
                  },
                  "pciRequired": {
                    "type": "boolean",
                    "description": "Whether PCI compliance is required.  <i>true</i> means content will only be served by PCI certified PoPs."
                  },
                  "hasBeian": {
                    "type": "boolean",
                    "description": "Indicate whether you have a Beian license for service in China.  If you do, content can be served by servers located within mainland China."
                  },
                  "grprCompliant": {
                    "type": "boolean",
                    "description": "If set to 'true', clients from European Economic Area (EEA) countries will only be served by IP addresses in EEA countries."
                  },
                  "clientZones": {
                    "title": "Edge Hostname Client Zone Rule",
                    "type": "object",
                    "description": "This object describes how client requests from a zone are handled. A zone is a combination of a geographic region and an ISP.",
                    "x-examples": {
                      "example-1": {
                        "region": "all",
                        "action": {
                          "type": "deliver",
                          "by": [
                            "standard"
                          ]
                        }
                      },
                      "example-2": {
                        "region": "as.cn",
                        "action": {
                          "type": "deliver",
                          "by": [
                            "standard",
                            "premium",
                            "premium+"
                          ]
                        }
                      },
                      "example-3": {
                        "region": "apac",
                        "action": {
                          "type": "reject"
                        }
                      },
                      "example-4": {
                        "region": "as.cn",
                        "action": {
                          "type": "redirect",
                          "to": [
                            "redirect.cname.com"
                          ]
                        },
                        "weight": 10
                      }
                    },
                    "x-tags": [
                      "Edge Hostname Management"
                    ],
                    "properties": {
                      "region": {
                        "type": "string",
                        "description": "This field indicates the region in which the rule applies. Refer to our <a href=\"#operation/get-cdn-edgeHostnames-clientRegions\">API to get client regions</a> to get valid region codes. For example, if you wish to create a rule that covers all of Europe, simply specify \"eu\" as the region. You can indicate specific countries. For example, \"na.us\" represents the \"United States of America\", and \"eu.fr\" represents \"France\".  \n\nA special client region “all” can be used to specify that the rule applies to the entire world. If overlapping regions are specified, the more specific one takes precedence. For example, if you specify \"as\" in one rule and \"as.cn\" in another, then a request from China will follow the rule for \"as.cn\"."
                      },
                      "weight": {
                        "type": "integer",
                        "default": 100,
                        "description": "When multiple actions are specified for a client zone, the weight is used to adjust the probability of a client zone rule applying to a client request.\nConsider two rules that apply to \"as.cn\": <code>{\"region\":\"as.cn\", \"isp\":\"all\", \"action\":{\"type\":\"deliver\", \"by\":[\"standard\", \"premium\", \"premium+\"]}},\n    {\"region\":\"as.cn\", \"isp\":\"all\", \"action\":{\"type\":\"redirect\", \"to\":[\"akamai.cname.com\"]}, \"weight\":10}</code>\n\n The probability of \"deliver\" will be 100/(100+10) or 0.909 while the probability of \"redirect\" will be 10/(100+10) or 0.091.\n \n",
                        "minimum": 0,
                        "maximum": 100
                      },
                      "action": {
                        "type": "object",
                        "description": "This object describes the action to take for requests matching the rule.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "deliver",
                              "redirect",
                              "reject"
                            ],
                            "description": "Defines the action to take for requests to the zone. Options are to <i>deliver</i> using one or more server groups, to <i>reject</i> the request altogether, or to <i>redirect</i> to another domain. If \"reject\" is specified, the client request will be redirected to a server that always responds with HTTP response code 403 representing \"Forbidden\". Up to one \"reject\" action is allowed for each client zone.\n"
                          },
                          "by": {
                            "type": "array",
                            "default": "standard",
                            "description": "This field is used if the action is of type \"deliver\". Specify one or more of the server groups (<i>standard</i>, <i>premium</i>, <i>premium+</i>, and <i>ultra</i>) to control what servers can be used to deliver content. If unspecified, \"standard\" is used.",
                            "enum": [
                              "standard",
                              "premium",
                              "premium+",
                              "ultra"
                            ],
                            "items": {
                              "type": "string"
                            }
                          },
                          "to": {
                            "type": "string",
                            "description": "This field is used if the action is of type \"redirect\". It indicates the hostname or IP address to redirect to. This is typically an origin server or another CDN provider.",
                            "example": "domain.com"
                          },
                          "enableIPv6": {
                            "type": "boolean",
                            "description": "Indicates whether an IPv6 address can be used. This value is used only if the client zone rule's action type is \"deliver\".",
                            "default": "true"
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "isp": {
                        "type": "string",
                        "description": "Specify the code representing an ISP (Internet Service Provider) if the rule only applies to requests from a particular ISP. Call our <a href=\"#operation/get-cdn-edgeHostnames-isps\">API to get a list of supported ISPs</a>. Specify 'all' to indicate all ISPs rather than a particular one. Specify a comma separated list of ISP codes if you want your rule to apply to more than one ISP."
                      }
                    },
                    "required": [
                      "region"
                    ]
                  },
                  "estimatedBandwidth": {
                    "type": "string",
                    "description": "An estimate of the bandwidth required to serve content using this edge hostname. Units of measurement should be in Tbps, Gbps, Mbps, or kbps. Example: 100Gbps"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "description": "This is a new edge hostname for use with our property."
                  }
                }
              }
            }
          },
          "description": "The request body contains the fields you wish to modify."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/properties/{propertyID}/versions": {
      "get": {
        "description": "Get a list of all property versions. A summary of each version including its status and associated hostnames is returned.",
        "operationId": "getPropertyVersions",
        "summary": "Query property version list",
        "tags": [
          "Property Management"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of property versions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "propertyVersions": {
                      "type": "array",
                      "description": "A summary of each version of the property.",
                      "items": {
                        "type": "object",
                        "description": "Describe a particular property version.",
                        "properties": {
                          "version": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "A version number."
                          },
                          "description": {
                            "type": "string",
                            "description": "A description of the property version."
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "RFC 3339 format date indicating when the property version was created. Example: 2016-12-28T23:10:42Z"
                          },
                          "hostnames": {
                            "type": "array",
                            "description": "Hostnames associated with the property.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "frozen": {
                            "type": "boolean",
                            "default": false,
                            "description": "Indicates whether the property version is frozen or can still be updated. A property version is frozen once it has been deployed."
                          },
                          "lastUpdateTime": {
                            "type": "string",
                            "description": "RFC 3339 format date indicating when the property version was last updated. Example: 2016-12-28T23:10:42Z"
                          },
                          "lastValidationStatus": {
                            "type": "string",
                            "enum": [
                              "NotValidated",
                              "InProgress",
                              "Validated",
                              "Failed"
                            ],
                            "description": "Indicates the status of the most recent validation of the property version."
                          }
                        },
                        "required": [
                          "version",
                          "hostnames"
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Indicates the number of versions of the property.",
                      "minimum": 0
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "propertyVersions": [
                        {
                          "version": 1,
                          "description": "validProperty_GetPropertyVersionListTestSteps",
                          "creationTime": "2019-10-30T02:33:45Z",
                          "hostnames": [
                            "domain.info"
                          ],
                          "frozen": false,
                          "lastUpdateTime": "2019-10-30T02:33:45Z",
                          "lastValidationStatus": "NotValidated"
                        },
                        {
                          "version": 2,
                          "description": "validPropertyVersionWithoutCertificate_PropertySteps",
                          "creationTime": "2019-10-30T02:33:46Z",
                          "hostnames": [
                            "domain.info"
                          ],
                          "frozen": true,
                          "lastUpdateTime": "2019-10-30T02:33:46Z",
                          "lastValidationStatus": "Validated"
                        },
                        {
                          "version": 3,
                          "description": "validPropertyVersionWithoutCertificate_PropertySteps",
                          "creationTime": "2019-10-30T02:33:47Z",
                          "hostnames": [
                            "domain.info"
                          ],
                          "frozen": false,
                          "lastUpdateTime": "2019-10-30T02:33:47Z",
                          "lastValidationStatus": "NotValidated"
                        }
                      ],
                      "count": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be between 1 and 200, inclusive."
                    }
                  },
                  "example-2": {
                    "value": {
                      "code": "InvalidListOffset",
                      "message": "The offset must be a valid non-negative integer."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The property could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidPropertyId",
                      "message": "The specified property ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "The search parameter is used to match against the description field to filter the results."
          },
          {
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": "100"
            },
            "in": "query",
            "name": "limit",
            "description": "Controls the number of versions to return."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": "0"
            },
            "in": "query",
            "name": "offset",
            "description": "Returns property versions beginning with this index instead of the default first one."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "propertyID",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Create a property version",
        "responses": {
          "201": {
            "description": "A new property version was successfully created. The <b>Location</b> HTTP header indicates the version number. Example:  <code>Location: http://ngapi.cdnetworks.com/cdn/properties/e0d1819863b856c42635ae17/versions/8</code>",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Refers to the new version",
                "required": true
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid origin": {
                    "value": {
                      "code": "InvalidOrigins",
                      "message": "The origin hostHeader 'invalid' is invalid. It must be a valid hostname or a variable name ($ + a string consists of lower case a-z and '_' with length 3-60)."
                    }
                  },
                  "OriginHostnameConflict": {
                    "value": {
                      "code": "OriginHostnameConflict",
                      "message": "At least one of the hostnames is equal to an origin's server name."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The property could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "messasge": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidPropertyId",
                      "message": "The specified property ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a new version of a property.",
        "operationId": "createPropertyVersion",
        "tags": [
          "Property Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "propertyConfiguration",
                "type": "object",
                "description": "Describes a property configuration. This contains all the settings.",
                "x-examples": {
                  "example-1": {
                    "value": {
                      "syntaxVersion": 1,
                      "edgeLogic": "location / {origin_pass my_origin_1572420965460;}",
                      "tlsMaxVersion": "1.2",
                      "tlsMinVersion": "1.1",
                      "tlsCertificateId": "8961b13c87cd30a7687edc8c",
                      "origins": [
                        {
                          "hostHeader": "testcustomer.g.qtlcdn.com",
                          "servers": [
                            "edgetools.theoriginserver.com"
                          ],
                          "name": "my_origin_1572420965460",
                          "directConnection": "noDirect"
                        }
                      ],
                      "hostnames": [
                        "testcustomer1572420596536.g.qtlcdn.com"
                      ]
                    }
                  }
                },
                "x-tags": [
                  "Property Management"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A description of the version.\n"
                  },
                  "cacheKeyHostname": {
                    "type": "string",
                    "description": "The cachekey hostname must be a string made of lowercase letters, digits, dot, dash, and underscore. If not specified, the incoming Host header value will be used and the cache will not be shared across different hostnames in this property.\n",
                    "maxLength": 80,
                    "pattern": "^[a-z.-_]+"
                  },
                  "hostnames": {
                    "type": "array",
                    "description": "Hostnames associated with the property.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "realTimeLog": {
                    "type": "object",
                    "description": "This optional field allows you to configure notifications about client requests to be sent to a remote server. It can be used only if you have access to our <i>realtime_log_switch</i> directive. Please contact our support team if you require this feature.",
                    "properties": {
                      "logUrl": {
                        "type": "string",
                        "description": "The URL that receives the notifications. It must begin with “http” or \"https\". The server should support the POST method. This is a required field."
                      },
                      "sampleRate": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 1,
                        "maximum": 65536,
                        "description": "An integer between [1, 65536]. n means one notification for every n edge requests. 1 means every edge request will generate a notification. This is optional. Default is 1."
                      },
                      "escape": {
                        "type": "string",
                        "enum": [
                          "json",
                          "none"
                        ],
                        "description": "Specify <i>json</i> to enable JSON character escaping in variables or <i>none</i> to disable escaping."
                      },
                      "format": {
                        "type": "string",
                        "description": "This is a required field to specify the notification body to be sent to the remote server. It can be any printable text that can be sent in the body of an HTTP POST request. \n\nThe following built-in variables can be used within the format field. They will be replaced with the actual values in the notifications.\n<table>\n<tr><th>Name</th><th>Description</th></tr>\n<tr><td>$body_bytes_sent</td><td>Size of the response body.</td></tr>\n<tr><td>$bytes_sent</td><td>Size of the response, including body, headers and response line.</td></tr>\n<tr><td>$client_country_code</td><td>An ISO 3166-1 country code representing the country of the client request, for example, \"US\". \"ZZ\" is returned if the country is unknown.</td></tr>\n<tr><td>$client_real_ip</td><td>IP address of the client request.</td></tr>\n<tr><td>$cookie_x</td><td>This lets you obtain any cookie named x.  For example, $cookie_account would retrieve the value of a cookie named 'account'.</td></tr>\n<tr><td>$http_x</td><td>Obtain any HTTP header named x from the original request. The header name is converted to lower case with dashes replaced by underscores. For example, specify $http_user_agent to get the value of User-Agent.</td></tr>\n<tr><td>$msec</td><td>Current unix time in seconds with millisecond precision.</td></tr>\n<tr><td>$qtl_req_id</td><td>Unique identifier representing the request.</td></tr>\n<tr><td>$request_uri</td><td>HTTP request URI</td></tr>\n<tr><td>$request_method</td><td>The HTTP request method used to access the origin.</td></tr>\n<tr><td>$request_time</td><td>Response time in milliseconds. It is the time between receiving the request's  first byte and serving the last byte of the response.</td></tr>\n<tr><td>$sc_completed</td><td>1 to indicate the last byte of the object was served to the user, 0 otherwise.\n</td></tr>\n<tr><td>$sc_initial</td><td>1 to indicate the first byte of the object was served to the user, 0 otherwise.</td></tr>\n<tr><td>$scheme</td><td>Indicates the protocol of the user's request (\"http\" or https\").</td></tr>\n<tr><td>$sent_http_content_length</td><td>the original file size.</td></tr>\n<tr><td>$sent_http_x</td><td>Obtain the value of an HTTP header named x that is returned in the response to the client. The header name should be converted to lower case with dashes replaced by underscores. For example, $sent_http_etag would give you the value of the ETag header.</td></tr>\n<tr><td>$server_addr</td><td>IP address of the edge node serving the user's request.</td></tr>\n<tr><td>$server_protocol</td><td>Indicates the version of HTTP used in the user's request, either \"HTTP/1.0\", \"HTTP/1.1\", or \"HTTP/2.0\".</td></tr>\n<tr><td>$ssl_cipher</td><td>Indicates the cipher suite used for the TLS (SSL) connection.</td></tr>\n<tr><td>$ssl_server_name</td><td>The hostname that a client initiating a TLS (SSL) connection is attempting to connect to. It is only sent by clients supporting SNI (Server Name Indication).</td></tr>\n<tr><td>$ssl_protocol</td><td>Indicates the TLS version used for the TLS (SSL) connection. Example versions include \"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\", and \"unknown\".</td></tr>\n<tr><td>$status</td><td>An HTTP response code for the user's request.</td></tr>\n<tr><td>$tcpinfo_rtt</td><td>The time in microseconds taken by a packet to travel to the destination and back.</td></tr>\n</table>"
                      },
                      "headers": {
                        "type": "array",
                        "description": "HTTP header names and values to be sent to the notification server. A header name can contain any alphanumeric character or hyphen, \"-\". A header value can contain any printable characters. It can also include any of the built-in variables supported in the <i>format</i> field of the realTimeLog object.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of an HTTP header."
                            },
                            "value": {
                              "type": "string",
                              "description": "Value of an HTTP header."
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "logUrl"
                    ]
                  },
                  "edgeLogic": {
                    "type": "string",
                    "maxLength": 200000,
                    "description": "Refer to https://docs.cdnetworks.com/cdn/docs/edge-logic/intro"
                  },
                  "hasBeian": {
                    "type": "boolean",
                    "default": false,
                    "description": "The value indicates whether all the hostnames in this property have Beian license on file with the Chinese government. This is required to serve this property from servers in mainland China. A value of <i>false</i> means servers outside of mainland China will be used to distribute content to visitors in China. If set to <i>true</i> you must also specify the content type in the <i>beianContentType</i> field."
                  },
                  "redirectHttpToHttps": {
                    "type": [
                      "boolean",
                      "string"
                    ],
                    "default": false,
                    "description": "This field can be set to either a boolean value or a string. When the value is set to <i>true</i>, the server will redirect all HTTP requests to HTTPS using status code 301. You can also specify string values \"302\", \"307\", or \"308\" instead if you wish to return a different status code when a request is redirected."
                  },
                  "origins": {
                    "type": "array",
                    "description": "Describes the origin servers for the property's content.",
                    "items": {
                      "type": "object",
                      "description": "Describes an origin server.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of an origin. It must be unique within this property.\n",
                          "pattern": "^[a-zA-z0-9_]"
                        },
                        "servers": {
                          "type": "array",
                          "description": "Each entry should be a string consisting of an address optionally followed by one or more parameters, separated by space characters. The address can take one of the following three forms:\n<ul>\n<li>{hostname or IP address}</li>\n<li>{hostname or IP address}:{http port}</li>\n<li>{hostname or IP address}:{http port},{https port}</li>\n</ul>\nValues for the HTTP and HTTPS ports should be integers in the range [1,65535]. \nEven when the value of <i>supportedProtocol</i> is “https”, the HTTPS port has to be specified after the comma.\nIn the third form, one of the two ports can be empty.\n\nSupported parameters are \"backup\" and \"weight\".\n\n\"backup\" is used to indicate the server is a backup server. It will be used when the primary servers are unavailable.\n\n\"weight\" is a value in the range [1, 100]. The default value is 1. It lets you control the likelihood that one origin server will be used relative to another.\n\nThere should be at least one primary server defined; it does not have the \"backup\" parameter.\n\nExample:\n<code>[\"www.abc.com weight=1\", \"www1.abc.com:8080 weight=4\", \"www2.abc.com:880,4443 backup\"]</code>\n\nThis example specifies two primary servers which are used in a 1:4 ratio meaning one gets about 20% of the requests to origin while the other gets 80% of the requests. In addition, a backup server is specified.\n",
                          "example": "[“www.abc.com”, “www1.abc.com:8080”, “www2.abc.com:880,4443 backup”]",
                          "items": {
                            "type": "string"
                          }
                        },
                        "supportedProtocol": {
                          "type": "string",
                          "description": "This optional field indicates the protocol supported by the origin server. If this property has a certificate attached to it, the value can be set to <i>http</i> if the <i>allowProtocolDowngrade</i> field is also set to <i>true</i>.",
                          "enum": [
                            "http",
                            "https",
                            "both"
                          ]
                        },
                        "directConnection": {
                          "type": "string",
                          "default": "auto",
                          "description": "Optional. This parameter tells us how important it is to directly go to this origin without going through any intermediate cache to fetch content. The values can be “noDirect”, “auto”, “alwaysDirect”. \n\n“noDirect” means we always go through at least one intermediate cache. Customers who care particularly about the origin's workload can use this option. Our cache scheduler will dynamically pick the intermediate cache based on performance and resource availability.\n\n“auto” means the cache scheduler will make the choice dynamically based on performance and resource availability. This is the default behavior if not specified.\n\n“alwaysDirect” means we always directly connect to this origin.\n"
                        },
                        "hostHeader": {
                          "type": "string",
                          "description": "Optional. It should be a valid hostname. It will also be used as the SNI servername when contacting the HTTPS origin. We also allow it to be an nginx variable that begins with ‘$’ followed by [a-z_]{3,60}. Nginx variable names are case insensitive, so we only allow lowercase characters.\nIf not specified, the value of the HOST header in the request will be used. \n\nOne constraint is that if “aswS3” is specified for origin authentication, the value of <i>hostHeader</i> cannot be a variable or empty. It has to be a valid Amazon S3 hostname. Refer to https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html",
                          "format": "hostname"
                        },
                        "supportSni": {
                          "type": "boolean",
                          "default": true,
                          "description": "Optional. If set to <i>true</i>, the SNI extension will be enabled in the TLS handshake with the origin server."
                        },
                        "verifyOrigin": {
                          "type": "boolean",
                          "default": false,
                          "description": "Optional. It controls whether the cache will validate the certificate of the origin."
                        },
                        "authentication": {
                          "type": "object",
                          "description": "Optional. It is a structure to specify the parameters, such as password, for authentication with the origin servers. It should have at least one field: ”methodName”, which should be a string indicating one of the predefined authentication methods. The only valid value at this time is “awsS3”. When “awsS3” is used, the following parameters are required:\n<ul>\n<li>awsS3.region</li>\n<li>awsS3.accessKey</li>\n<li>awsS3.secretKey</li>\n</ul>\nAlso, the value of the <i>hostHeader</i> field cannot be a variable or empty. It must be a valid Amazon S3 hostname.\n\nExample:\n<code>\n{\"methodName\":\"awsS3\",\n\"awsS3\":{\n\"region\":\"us-west-1\",\n\"accessKey\":\"sdnu2932\",\n\"secretKey\":\"d12345678abcdefghi\"\n}}\n</code>",
                          "example": "{“methodName”:”awsS3”, ”awsS3”:{ ”region”:”us-west-1”, ”accessKey”:”sdnu2932”, ”secretKey”:”d12133424fvregvrew” }}",
                          "properties": {
                            "methodName": {
                              "type": "string",
                              "description": "Authentication method."
                            }
                          }
                        }
                      }
                    }
                  },
                  "syntaxVersion": {
                    "type": "number",
                    "default": 1,
                    "description": "The value must be set to 1 at this time."
                  },
                  "disableHttp2": {
                    "type": "boolean",
                    "default": false,
                    "description": "When set to <i>true</i>, the server will not support HTTP/2. Only HTTP/1.1 will be supported.\n"
                  },
                  "schemeInCacheKey": {
                    "type": "boolean",
                    "default": false,
                    "description": "Specifies whether the scheme (“http” or “https”) should be included in the cache key. Default behavior is </i>false</i>. Set to <i>true</i> if the content is known to be different for different schemes.\n"
                  },
                  "tlsMaxVersion": {
                    "type": "string",
                    "default": 1.3,
                    "enum": [
                      "1.1",
                      "1.2",
                      "1.3"
                    ],
                    "description": "Maximum supported TLS version."
                  },
                  "loadBalancerHashKey": {
                    "type": "string",
                    "description": "Multiple tiers of load balancing are used in our CDN pops to distribute the client requests to different servers. We are using consistent hashing in many of those places. By default, the URL is used as the hash key, which should be good enough in most cases. Here you can define additional variables to be added to the hash key to distribute the requests more evenly. One typical use case is when all requests carry the same URL, but use a particular header to indicate the resources. \n\nThis is an optional field. The default value is an empty string. A valid value is a string meeting the following criteria:\n<ol>\n<li>Consists of alphanumeric characters, underscore _, equal sign =, dollar sign $, and ampersand sign &.</li>\n<li>The variable names can only be in one of the following formats: $http_name, $cookie_name, or $arg_name.</li>\n<li>At least one variable must be specified. No more than three are permitted.</li>\n<li>The total length should be no more than 100 characters.</li>\n</ol>\nThe validator will treat any dollar sign and the string after it (before any = or & or $) as a variable. \n\nHere are some examples of valid values:\n<table>\n<tr><td>$http_abc</td></tr>\n<tr><td>abc=$http_abc&def=$http_def&c_123=$cookie_123</td></tr>\n<tr><td>abc=$http_abc=$http_def</td></tr>\n<tr><td>$http_abc&$http_def</td></tr>\n<tr><td>=$http_abd&</td></tr>\n<tr><td>&&abc==$http_abc&&&===qwer</td></tr>\n</table>\n",
                    "maxLength": 100
                  },
                  "tlsCertificateId": {
                    "type": "number",
                    "description": "Refers to a <a href=\"#tag/Certificate-Management\">certificate</a>. It is invalid to only set the <i>tlsCertificateId1</i> field without setting the <i>tlsCertificateId</i> field. If <i>tlsCertificateId</i> is not set, HTTPS will not be enabled for this property. This is a feature to enable you to specify two certificates of different types, i.e. one RSA, one EC. If two certificates of the same type are specified, the one specified by <i>tlsCertificateId</i> will be ignored. "
                  },
                  "tlsMinVersion": {
                    "type": "string",
                    "default": 1,
                    "description": "Minimum required TLS version.",
                    "enum": [
                      "1.1",
                      "1.2",
                      "1.3",
                      "1"
                    ]
                  },
                  "tlsCiphers": {
                    "type": "string",
                    "description": "Any cipher list supported by \"openssl ciphers\". See https://www.openssl.org/docs/manmaster/man1/ciphers.html\n",
                    "maxLength": 2040
                  },
                  "allowProtocolDowngrade": {
                    "type": "boolean",
                    "default": false,
                    "description": "This setting only applies when the property has an attached certificate allowing client requests to use HTTPS. When the value of allowProtocolDowngrade is <i>false</i>, we require all the origin servers to support HTTPS. When the value is <i>true</i>, we allow origins that only support HTTP; this setting reduces security.\n"
                  },
                  "tlsCertificateId1": {
                    "type": "number",
                    "description": "Refers to a <a href=\"#tag/Certificate-Management\">certificate</a>. It is invalid to only set the <i>tlsCertificateId1</i> field without setting the <i>tlsCertificateId</i> field. If <i>tlsCertificateId</i> is not set, HTTPS will not be enabled for this property. This is a feature to enable you to specify two certificates of different types, i.e. one RSA, one EC. If two certificates of the same type are specified, the one specified by <i>tlsCertificateId</i> will be ignored. \n\n"
                  },
                  "videoSeek": {
                    "type": "object",
                    "description": "This object allows you to support video players requesting partial content through query string parameters. If you specify <i>videoSeek</i>, you must enter a value for <i>startParameter</i>.",
                    "properties": {
                      "startParameter": {
                        "type": "string",
                        "description": "Name of the query parameter indicating the starting offset in bytes of the content to fetch. The parameter name should begin with a letter (a-z, a-Z) and may be followed by up to 30 letters and numbers.",
                        "minLength": 1,
                        "maxLength": 31
                      },
                      "endParameter": {
                        "type": "string",
                        "description": "Name of the query parameter indicating the ending offset of the content to fetch. The parameter name should begin with a letter (a-z, a-Z) and may be followed by up to 30 letters and numbers.",
                        "minLength": 0,
                        "maxLength": 31
                      }
                    },
                    "required": [
                      "startParameter"
                    ]
                  },
                  "tlsSessionTimeout": {
                    "type": "integer",
                    "minimum": 300,
                    "maximum": 86400,
                    "default": 1800,
                    "description": "Lifespan of TLS session ticket in seconds."
                  },
                  "enableOcspStapling": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enables Online Certificate Status Protocol (OCSP) stapling to check the revocation status of digital certificates. (Refer to https://en.wikipedia.org/wiki/OCSP_stapling)"
                  },
                  "beianContentType": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 24,
                    "description": "If you are planning to distribute content through servers in mainland China, you will need to set the <i>hasBeian</i> field to <i>true</i> and also indicate the type of content you are distributing. Enter the value that best corresponds to your content:\n\n<table>\n<tr><th>Value</th><th>Content Type</th></tr>\n<tr><td>1</td><td>Instant Messaging</td></tr>\n<tr><td>2</td><td>Search Engine</td></tr>\n<tr><td>3</td><td>Web Portal</td></tr>\n<tr><td>4</td><td>Online Postal Service</td></tr>\n<tr><td>5</td><td>Online News</td></tr>\n<tr><td>6</td><td>Blog</td></tr>\n<tr><td>7</td><td>Advertisement</td></tr>\n<tr><td>8</td><td>Organization Web Portal</td></tr>\n<tr><td>9</td><td>Shopping</td></tr>\n<tr><td>10</td><td>Online Payment</td></tr>\n<tr><td>11</td><td>Online Bank</td></tr>\n<tr><td>12</td><td>Online Stock Market</td></tr>\n<tr><td>13</td><td>Online Gaming</td></tr>\n<tr><td>14</td><td>Online Music</td></tr>\n<tr><td>15</td><td>Online Movie</td></tr>\n<tr><td>16</td><td>Online Picture</td></tr>\n<tr><td>17</td><td>Software Download</td></tr>\n<tr><td>18</td><td>Job Hunting</td></tr>\n<tr><td>19</td><td>Online Dating</td></tr>\n<tr><td>20</td><td>Online Real Property</td></tr>\n<tr><td>21</td><td>Online Education</td></tr>\n<tr><td>22</td><td>Web Design</td></tr>\n<tr><td>23</td><td>WAP</td></tr>\n<tr><td>24</td><td>Others</td></tr>\n</table>"
                  },
                  "accessControlRules": {
                    "type": "array",
                    "description": "Specify one or more access control rules to restrict access to your content. More advanced configuration can be done using edge logic. These access control rules take precedence over edge logic if both are defined.",
                    "items": {
                      "title": "accessControlRule",
                      "type": "object",
                      "description": "This object defines a rule that can be used to restrict access to your content. More complex rules can be created using CDN360's Edge Logic.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "maxLength": 60,
                          "minLength": 0,
                          "description": "An optional ID for the access control rule."
                        },
                        "conditions": {
                          "type": "object",
                          "description": "Specify the conditions that the incoming request must match. At least one condition must be specified. If multiple are specified, all must match.",
                          "properties": {
                            "scheme": {
                              "type": "string",
                              "enum": [
                                "https",
                                "http"
                              ],
                              "description": "Indicates whether the incoming request uses HTTP or HTTPS."
                            },
                            "hostname": {
                              "type": "string",
                              "description": "Indicates the hostname requested. It must be one of the hostnames defined in the property."
                            },
                            "uri": {
                              "type": "string",
                              "description": "The URI begins with \"/ and can end with \"*\" for prefix matching. ",
                              "maxLength": 500
                            },
                            "serverRegions": {
                              "type": "array",
                              "description": "An array of <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">ISO-3166-1 alpha-2 codes</a> indicating the countries of the servers, for example, \"US\" to represent \"United States of America\".",
                              "items": {
                                "type": "string"
                              }
                            },
                            "clientRegions": {
                              "type": "array",
                              "description": "An array of <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">ISO-3166-1 alpha-2 codes</a> indicating one or more countries which are the source of the client requests, for example, \"CN\" to represent \"China\".",
                              "items": {
                                "type": "string"
                              }
                            },
                            "clientIpRange": {
                              "type": "array",
                              "description": "Indicates the starting and ending IP addresses of the client requests to match against. They must be in IPv4 or IPv6 format.",
                              "items": {
                                "type": "string",
                                "maxLength": 2
                              }
                            }
                          }
                        },
                        "action": {
                          "type": "object",
                          "description": "Indicates the action to take in response to a request that matches the conditions of the access control rule.",
                          "required": [
                            "status"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Indicates the HTTP status code to respond with. It must be in the range 300-309, 400-409, or 500-509 to indicate a redirection or error."
                            },
                            "message": {
                              "type": "string",
                              "maxLength": 200,
                              "description": "If the value of the <i>status</i> field is in the range 300-309, the <i>message</i> field's value will be placed in a Location HTTP header returned to the client. If the <i>status</i> is in the range 400-409 or 500-509, the value will be returned in the response body to the client."
                            }
                          }
                        }
                      },
                      "required": [
                        "conditions",
                        "action"
                      ]
                    }
                  },
                  "disableCertAutomation": {
                    "type": "boolean",
                    "description": "If you plan to allow CDNetworks to renew your TLS certificate through Let's Encrypt, set this to <i>false</i>. \n If you plan to handle certificate renewal yourself,  set this to <i>true</i>. For more information about our support for certificate auto-renewal, refer to the description of the <i>autoRenew</i> field in the <a href=\"#operation/createCertificate\">Create a certificate API</a>.",
                    "default": "false"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "syntaxVersion": 1,
                    "edgeLogic": "location / {origin_pass my_origin_1572402826736;} return 200;",
                    "origins": [
                      {
                        "servers": [
                          "mwtrial.info"
                        ],
                        "name": "my_origin_1572402826736"
                      }
                    ],
                    "description": "validPropertyVersionWithoutCertificate_PropertySteps",
                    "hostnames": [
                      "testdomain-t1572402826736.mwtrial.info"
                    ]
                  }
                }
              }
            }
          },
          "description": "Specify the property configuration in the request body."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/properties": {
      "parameters": [],
      "post": {
        "summary": "Create a property",
        "responses": {
          "201": {
            "description": "This response indicates the property was successfully created. A Location header containing the URL of the new property is returned. For example, <code>Location: http://ngapi.cdnetworks.com/cdn/properties/8fdc9c949e986564cc24b149</code>",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Refers to the new property URL.",
                "required": true
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid Edge Logic": {
                    "value": {
                      "code": "InvalidEdgeLogic",
                      "message": "Please check the edgeLogic configuration format. Make sure each 'location' block has an 'origin_pass' or a 'return' directive. A top-level 'if' block must have a 'return' directive and not contain an 'origin_pass' directive. A location directive for the default path '/' is also required."
                    }
                  },
                  "Invalid certificate ID": {
                    "value": {
                      "code": "InvalidCertId",
                      "message": "The specified tlsCertificateId does not exist."
                    }
                  },
                  "Invalid TLS session timeout": {
                    "value": {
                      "code": "InvalidTLSSessionTimeout",
                      "message": "The TLS session timeout value should be between 300 and 86400 inclusive."
                    }
                  },
                  "OriginHostnameConflict": {
                    "value": {
                      "code": "OriginHostnameConflict",
                      "message": "At least one of the hostnames is equal to an origin's server name."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "This error is returned if the API call is not permitted. Please check the response body for further details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Access denied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "Please enter valid credentials."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "This error is returned if you try to create a property that already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Duplicate property name": {
                    "value": {
                      "code": "DuplicatePropertyName",
                      "message": "A property with the same name already exists."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a property to define the configuration of one or more hostnames (domains) to deploy to the CDN360 servers.",
        "operationId": "createProperty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the property."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the property.",
                    "maxLength": 250
                  },
                  "version": {
                    "title": "propertyConfiguration",
                    "type": "object",
                    "description": "Describes a property configuration. This contains all the settings.",
                    "x-examples": {
                      "example-1": {
                        "value": {
                          "syntaxVersion": 1,
                          "edgeLogic": "location / {origin_pass my_origin_1572420965460;}",
                          "tlsMaxVersion": "1.2",
                          "tlsMinVersion": "1.1",
                          "tlsCertificateId": "8961b13c87cd30a7687edc8c",
                          "origins": [
                            {
                              "hostHeader": "testcustomer.g.qtlcdn.com",
                              "servers": [
                                "edgetools.theoriginserver.com"
                              ],
                              "name": "my_origin_1572420965460",
                              "directConnection": "noDirect"
                            }
                          ],
                          "hostnames": [
                            "testcustomer1572420596536.g.qtlcdn.com"
                          ]
                        }
                      }
                    },
                    "x-tags": [
                      "Property Management"
                    ],
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "A description of the version.\n"
                      },
                      "cacheKeyHostname": {
                        "type": "string",
                        "description": "The cachekey hostname must be a string made of lowercase letters, digits, dot, dash, and underscore. If not specified, the incoming Host header value will be used and the cache will not be shared across different hostnames in this property.\n",
                        "maxLength": 80,
                        "pattern": "^[a-z.-_]+"
                      },
                      "hostnames": {
                        "type": "array",
                        "description": "Hostnames associated with the property.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "realTimeLog": {
                        "type": "object",
                        "description": "This optional field allows you to configure notifications about client requests to be sent to a remote server. It can be used only if you have access to our <i>realtime_log_switch</i> directive. Please contact our support team if you require this feature.",
                        "properties": {
                          "logUrl": {
                            "type": "string",
                            "description": "The URL that receives the notifications. It must begin with “http” or \"https\". The server should support the POST method. This is a required field."
                          },
                          "sampleRate": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1,
                            "maximum": 65536,
                            "description": "An integer between [1, 65536]. n means one notification for every n edge requests. 1 means every edge request will generate a notification. This is optional. Default is 1."
                          },
                          "escape": {
                            "type": "string",
                            "enum": [
                              "json",
                              "none"
                            ],
                            "description": "Specify <i>json</i> to enable JSON character escaping in variables or <i>none</i> to disable escaping."
                          },
                          "format": {
                            "type": "string",
                            "description": "This is a required field to specify the notification body to be sent to the remote server. It can be any printable text that can be sent in the body of an HTTP POST request. \n\nThe following built-in variables can be used within the format field. They will be replaced with the actual values in the notifications.\n<table>\n<tr><th>Name</th><th>Description</th></tr>\n<tr><td>$body_bytes_sent</td><td>Size of the response body.</td></tr>\n<tr><td>$bytes_sent</td><td>Size of the response, including body, headers and response line.</td></tr>\n<tr><td>$client_country_code</td><td>An ISO 3166-1 country code representing the country of the client request, for example, \"US\". \"ZZ\" is returned if the country is unknown.</td></tr>\n<tr><td>$client_real_ip</td><td>IP address of the client request.</td></tr>\n<tr><td>$cookie_x</td><td>This lets you obtain any cookie named x.  For example, $cookie_account would retrieve the value of a cookie named 'account'.</td></tr>\n<tr><td>$http_x</td><td>Obtain any HTTP header named x from the original request. The header name is converted to lower case with dashes replaced by underscores. For example, specify $http_user_agent to get the value of User-Agent.</td></tr>\n<tr><td>$msec</td><td>Current unix time in seconds with millisecond precision.</td></tr>\n<tr><td>$qtl_req_id</td><td>Unique identifier representing the request.</td></tr>\n<tr><td>$request_uri</td><td>HTTP request URI</td></tr>\n<tr><td>$request_method</td><td>The HTTP request method used to access the origin.</td></tr>\n<tr><td>$request_time</td><td>Response time in milliseconds. It is the time between receiving the request's  first byte and serving the last byte of the response.</td></tr>\n<tr><td>$sc_completed</td><td>1 to indicate the last byte of the object was served to the user, 0 otherwise.\n</td></tr>\n<tr><td>$sc_initial</td><td>1 to indicate the first byte of the object was served to the user, 0 otherwise.</td></tr>\n<tr><td>$scheme</td><td>Indicates the protocol of the user's request (\"http\" or https\").</td></tr>\n<tr><td>$sent_http_content_length</td><td>the original file size.</td></tr>\n<tr><td>$sent_http_x</td><td>Obtain the value of an HTTP header named x that is returned in the response to the client. The header name should be converted to lower case with dashes replaced by underscores. For example, $sent_http_etag would give you the value of the ETag header.</td></tr>\n<tr><td>$server_addr</td><td>IP address of the edge node serving the user's request.</td></tr>\n<tr><td>$server_protocol</td><td>Indicates the version of HTTP used in the user's request, either \"HTTP/1.0\", \"HTTP/1.1\", or \"HTTP/2.0\".</td></tr>\n<tr><td>$ssl_cipher</td><td>Indicates the cipher suite used for the TLS (SSL) connection.</td></tr>\n<tr><td>$ssl_server_name</td><td>The hostname that a client initiating a TLS (SSL) connection is attempting to connect to. It is only sent by clients supporting SNI (Server Name Indication).</td></tr>\n<tr><td>$ssl_protocol</td><td>Indicates the TLS version used for the TLS (SSL) connection. Example versions include \"SSLv3\", \"TLSv1\", \"TLSv1.1\", \"TLSv1.2\", and \"unknown\".</td></tr>\n<tr><td>$status</td><td>An HTTP response code for the user's request.</td></tr>\n<tr><td>$tcpinfo_rtt</td><td>The time in microseconds taken by a packet to travel to the destination and back.</td></tr>\n</table>"
                          },
                          "headers": {
                            "type": "array",
                            "description": "HTTP header names and values to be sent to the notification server. A header name can contain any alphanumeric character or hyphen, \"-\". A header value can contain any printable characters. It can also include any of the built-in variables supported in the <i>format</i> field of the realTimeLog object.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of an HTTP header."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value of an HTTP header."
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "logUrl"
                        ]
                      },
                      "edgeLogic": {
                        "type": "string",
                        "maxLength": 200000,
                        "description": "Refer to https://docs.cdnetworks.com/cdn/docs/edge-logic/intro"
                      },
                      "hasBeian": {
                        "type": "boolean",
                        "default": false,
                        "description": "The value indicates whether all the hostnames in this property have Beian license on file with the Chinese government. This is required to serve this property from servers in mainland China. A value of <i>false</i> means servers outside of mainland China will be used to distribute content to visitors in China. If set to <i>true</i> you must also specify the content type in the <i>beianContentType</i> field."
                      },
                      "redirectHttpToHttps": {
                        "type": [
                          "boolean",
                          "string"
                        ],
                        "default": false,
                        "description": "This field can be set to either a boolean value or a string. When the value is set to <i>true</i>, the server will redirect all HTTP requests to HTTPS using status code 301. You can also specify string values \"302\", \"307\", or \"308\" instead if you wish to return a different status code when a request is redirected."
                      },
                      "origins": {
                        "type": "array",
                        "description": "Describes the origin servers for the property's content.",
                        "items": {
                          "type": "object",
                          "description": "Describes an origin server.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of an origin. It must be unique within this property.\n",
                              "pattern": "^[a-zA-z0-9_]"
                            },
                            "servers": {
                              "type": "array",
                              "description": "Each entry should be a string consisting of an address optionally followed by one or more parameters, separated by space characters. The address can take one of the following three forms:\n<ul>\n<li>{hostname or IP address}</li>\n<li>{hostname or IP address}:{http port}</li>\n<li>{hostname or IP address}:{http port},{https port}</li>\n</ul>\nValues for the HTTP and HTTPS ports should be integers in the range [1,65535]. \nEven when the value of <i>supportedProtocol</i> is “https”, the HTTPS port has to be specified after the comma.\nIn the third form, one of the two ports can be empty.\n\nSupported parameters are \"backup\" and \"weight\".\n\n\"backup\" is used to indicate the server is a backup server. It will be used when the primary servers are unavailable.\n\n\"weight\" is a value in the range [1, 100]. The default value is 1. It lets you control the likelihood that one origin server will be used relative to another.\n\nThere should be at least one primary server defined; it does not have the \"backup\" parameter.\n\nExample:\n<code>[\"www.abc.com weight=1\", \"www1.abc.com:8080 weight=4\", \"www2.abc.com:880,4443 backup\"]</code>\n\nThis example specifies two primary servers which are used in a 1:4 ratio meaning one gets about 20% of the requests to origin while the other gets 80% of the requests. In addition, a backup server is specified.\n",
                              "example": "[“www.abc.com”, “www1.abc.com:8080”, “www2.abc.com:880,4443 backup”]",
                              "items": {
                                "type": "string"
                              }
                            },
                            "supportedProtocol": {
                              "type": "string",
                              "description": "This optional field indicates the protocol supported by the origin server. If this property has a certificate attached to it, the value can be set to <i>http</i> if the <i>allowProtocolDowngrade</i> field is also set to <i>true</i>.",
                              "enum": [
                                "http",
                                "https",
                                "both"
                              ]
                            },
                            "directConnection": {
                              "type": "string",
                              "default": "auto",
                              "description": "Optional. This parameter tells us how important it is to directly go to this origin without going through any intermediate cache to fetch content. The values can be “noDirect”, “auto”, “alwaysDirect”. \n\n“noDirect” means we always go through at least one intermediate cache. Customers who care particularly about the origin's workload can use this option. Our cache scheduler will dynamically pick the intermediate cache based on performance and resource availability.\n\n“auto” means the cache scheduler will make the choice dynamically based on performance and resource availability. This is the default behavior if not specified.\n\n“alwaysDirect” means we always directly connect to this origin.\n"
                            },
                            "hostHeader": {
                              "type": "string",
                              "description": "Optional. It should be a valid hostname. It will also be used as the SNI servername when contacting the HTTPS origin. We also allow it to be an nginx variable that begins with ‘$’ followed by [a-z_]{3,60}. Nginx variable names are case insensitive, so we only allow lowercase characters.\nIf not specified, the value of the HOST header in the request will be used. \n\nOne constraint is that if “aswS3” is specified for origin authentication, the value of <i>hostHeader</i> cannot be a variable or empty. It has to be a valid Amazon S3 hostname. Refer to https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html",
                              "format": "hostname"
                            },
                            "supportSni": {
                              "type": "boolean",
                              "default": true,
                              "description": "Optional. If set to <i>true</i>, the SNI extension will be enabled in the TLS handshake with the origin server."
                            },
                            "verifyOrigin": {
                              "type": "boolean",
                              "default": false,
                              "description": "Optional. It controls whether the cache will validate the certificate of the origin."
                            },
                            "authentication": {
                              "type": "object",
                              "description": "Optional. It is a structure to specify the parameters, such as password, for authentication with the origin servers. It should have at least one field: ”methodName”, which should be a string indicating one of the predefined authentication methods. The only valid value at this time is “awsS3”. When “awsS3” is used, the following parameters are required:\n<ul>\n<li>awsS3.region</li>\n<li>awsS3.accessKey</li>\n<li>awsS3.secretKey</li>\n</ul>\nAlso, the value of the <i>hostHeader</i> field cannot be a variable or empty. It must be a valid Amazon S3 hostname.\n\nExample:\n<code>\n{\"methodName\":\"awsS3\",\n\"awsS3\":{\n\"region\":\"us-west-1\",\n\"accessKey\":\"sdnu2932\",\n\"secretKey\":\"d12345678abcdefghi\"\n}}\n</code>",
                              "example": "{“methodName”:”awsS3”, ”awsS3”:{ ”region”:”us-west-1”, ”accessKey”:”sdnu2932”, ”secretKey”:”d12133424fvregvrew” }}",
                              "properties": {
                                "methodName": {
                                  "type": "string",
                                  "description": "Authentication method."
                                }
                              }
                            }
                          }
                        }
                      },
                      "syntaxVersion": {
                        "type": "number",
                        "default": 1,
                        "description": "The value must be set to 1 at this time."
                      },
                      "disableHttp2": {
                        "type": "boolean",
                        "default": false,
                        "description": "When set to <i>true</i>, the server will not support HTTP/2. Only HTTP/1.1 will be supported.\n"
                      },
                      "schemeInCacheKey": {
                        "type": "boolean",
                        "default": false,
                        "description": "Specifies whether the scheme (“http” or “https”) should be included in the cache key. Default behavior is </i>false</i>. Set to <i>true</i> if the content is known to be different for different schemes.\n"
                      },
                      "tlsMaxVersion": {
                        "type": "string",
                        "default": 1.3,
                        "enum": [
                          "1.1",
                          "1.2",
                          "1.3"
                        ],
                        "description": "Maximum supported TLS version."
                      },
                      "loadBalancerHashKey": {
                        "type": "string",
                        "description": "Multiple tiers of load balancing are used in our CDN pops to distribute the client requests to different servers. We are using consistent hashing in many of those places. By default, the URL is used as the hash key, which should be good enough in most cases. Here you can define additional variables to be added to the hash key to distribute the requests more evenly. One typical use case is when all requests carry the same URL, but use a particular header to indicate the resources. \n\nThis is an optional field. The default value is an empty string. A valid value is a string meeting the following criteria:\n<ol>\n<li>Consists of alphanumeric characters, underscore _, equal sign =, dollar sign $, and ampersand sign &.</li>\n<li>The variable names can only be in one of the following formats: $http_name, $cookie_name, or $arg_name.</li>\n<li>At least one variable must be specified. No more than three are permitted.</li>\n<li>The total length should be no more than 100 characters.</li>\n</ol>\nThe validator will treat any dollar sign and the string after it (before any = or & or $) as a variable. \n\nHere are some examples of valid values:\n<table>\n<tr><td>$http_abc</td></tr>\n<tr><td>abc=$http_abc&def=$http_def&c_123=$cookie_123</td></tr>\n<tr><td>abc=$http_abc=$http_def</td></tr>\n<tr><td>$http_abc&$http_def</td></tr>\n<tr><td>=$http_abd&</td></tr>\n<tr><td>&&abc==$http_abc&&&===qwer</td></tr>\n</table>\n",
                        "maxLength": 100
                      },
                      "tlsCertificateId": {
                        "type": "number",
                        "description": "Refers to a <a href=\"#tag/Certificate-Management\">certificate</a>. It is invalid to only set the <i>tlsCertificateId1</i> field without setting the <i>tlsCertificateId</i> field. If <i>tlsCertificateId</i> is not set, HTTPS will not be enabled for this property. This is a feature to enable you to specify two certificates of different types, i.e. one RSA, one EC. If two certificates of the same type are specified, the one specified by <i>tlsCertificateId</i> will be ignored. "
                      },
                      "tlsMinVersion": {
                        "type": "string",
                        "default": 1,
                        "description": "Minimum required TLS version.",
                        "enum": [
                          "1.1",
                          "1.2",
                          "1.3",
                          "1"
                        ]
                      },
                      "tlsCiphers": {
                        "type": "string",
                        "description": "Any cipher list supported by \"openssl ciphers\". See https://www.openssl.org/docs/manmaster/man1/ciphers.html\n",
                        "maxLength": 2040
                      },
                      "allowProtocolDowngrade": {
                        "type": "boolean",
                        "default": false,
                        "description": "This setting only applies when the property has an attached certificate allowing client requests to use HTTPS. When the value of allowProtocolDowngrade is <i>false</i>, we require all the origin servers to support HTTPS. When the value is <i>true</i>, we allow origins that only support HTTP; this setting reduces security.\n"
                      },
                      "tlsCertificateId1": {
                        "type": "number",
                        "description": "Refers to a <a href=\"#tag/Certificate-Management\">certificate</a>. It is invalid to only set the <i>tlsCertificateId1</i> field without setting the <i>tlsCertificateId</i> field. If <i>tlsCertificateId</i> is not set, HTTPS will not be enabled for this property. This is a feature to enable you to specify two certificates of different types, i.e. one RSA, one EC. If two certificates of the same type are specified, the one specified by <i>tlsCertificateId</i> will be ignored. \n\n"
                      },
                      "videoSeek": {
                        "type": "object",
                        "description": "This object allows you to support video players requesting partial content through query string parameters. If you specify <i>videoSeek</i>, you must enter a value for <i>startParameter</i>.",
                        "properties": {
                          "startParameter": {
                            "type": "string",
                            "description": "Name of the query parameter indicating the starting offset in bytes of the content to fetch. The parameter name should begin with a letter (a-z, a-Z) and may be followed by up to 30 letters and numbers.",
                            "minLength": 1,
                            "maxLength": 31
                          },
                          "endParameter": {
                            "type": "string",
                            "description": "Name of the query parameter indicating the ending offset of the content to fetch. The parameter name should begin with a letter (a-z, a-Z) and may be followed by up to 30 letters and numbers.",
                            "minLength": 0,
                            "maxLength": 31
                          }
                        },
                        "required": [
                          "startParameter"
                        ]
                      },
                      "tlsSessionTimeout": {
                        "type": "integer",
                        "minimum": 300,
                        "maximum": 86400,
                        "default": 1800,
                        "description": "Lifespan of TLS session ticket in seconds."
                      },
                      "enableOcspStapling": {
                        "type": "boolean",
                        "default": false,
                        "description": "Enables Online Certificate Status Protocol (OCSP) stapling to check the revocation status of digital certificates. (Refer to https://en.wikipedia.org/wiki/OCSP_stapling)"
                      },
                      "beianContentType": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 24,
                        "description": "If you are planning to distribute content through servers in mainland China, you will need to set the <i>hasBeian</i> field to <i>true</i> and also indicate the type of content you are distributing. Enter the value that best corresponds to your content:\n\n<table>\n<tr><th>Value</th><th>Content Type</th></tr>\n<tr><td>1</td><td>Instant Messaging</td></tr>\n<tr><td>2</td><td>Search Engine</td></tr>\n<tr><td>3</td><td>Web Portal</td></tr>\n<tr><td>4</td><td>Online Postal Service</td></tr>\n<tr><td>5</td><td>Online News</td></tr>\n<tr><td>6</td><td>Blog</td></tr>\n<tr><td>7</td><td>Advertisement</td></tr>\n<tr><td>8</td><td>Organization Web Portal</td></tr>\n<tr><td>9</td><td>Shopping</td></tr>\n<tr><td>10</td><td>Online Payment</td></tr>\n<tr><td>11</td><td>Online Bank</td></tr>\n<tr><td>12</td><td>Online Stock Market</td></tr>\n<tr><td>13</td><td>Online Gaming</td></tr>\n<tr><td>14</td><td>Online Music</td></tr>\n<tr><td>15</td><td>Online Movie</td></tr>\n<tr><td>16</td><td>Online Picture</td></tr>\n<tr><td>17</td><td>Software Download</td></tr>\n<tr><td>18</td><td>Job Hunting</td></tr>\n<tr><td>19</td><td>Online Dating</td></tr>\n<tr><td>20</td><td>Online Real Property</td></tr>\n<tr><td>21</td><td>Online Education</td></tr>\n<tr><td>22</td><td>Web Design</td></tr>\n<tr><td>23</td><td>WAP</td></tr>\n<tr><td>24</td><td>Others</td></tr>\n</table>"
                      },
                      "accessControlRules": {
                        "type": "array",
                        "description": "Specify one or more access control rules to restrict access to your content. More advanced configuration can be done using edge logic. These access control rules take precedence over edge logic if both are defined.",
                        "items": {
                          "title": "accessControlRule",
                          "type": "object",
                          "description": "This object defines a rule that can be used to restrict access to your content. More complex rules can be created using CDN360's Edge Logic.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "maxLength": 60,
                              "minLength": 0,
                              "description": "An optional ID for the access control rule."
                            },
                            "conditions": {
                              "type": "object",
                              "description": "Specify the conditions that the incoming request must match. At least one condition must be specified. If multiple are specified, all must match.",
                              "properties": {
                                "scheme": {
                                  "type": "string",
                                  "enum": [
                                    "https",
                                    "http"
                                  ],
                                  "description": "Indicates whether the incoming request uses HTTP or HTTPS."
                                },
                                "hostname": {
                                  "type": "string",
                                  "description": "Indicates the hostname requested. It must be one of the hostnames defined in the property."
                                },
                                "uri": {
                                  "type": "string",
                                  "description": "The URI begins with \"/ and can end with \"*\" for prefix matching. ",
                                  "maxLength": 500
                                },
                                "serverRegions": {
                                  "type": "array",
                                  "description": "An array of <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">ISO-3166-1 alpha-2 codes</a> indicating the countries of the servers, for example, \"US\" to represent \"United States of America\".",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "clientRegions": {
                                  "type": "array",
                                  "description": "An array of <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">ISO-3166-1 alpha-2 codes</a> indicating one or more countries which are the source of the client requests, for example, \"CN\" to represent \"China\".",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "clientIpRange": {
                                  "type": "array",
                                  "description": "Indicates the starting and ending IP addresses of the client requests to match against. They must be in IPv4 or IPv6 format.",
                                  "items": {
                                    "type": "string",
                                    "maxLength": 2
                                  }
                                }
                              }
                            },
                            "action": {
                              "type": "object",
                              "description": "Indicates the action to take in response to a request that matches the conditions of the access control rule.",
                              "required": [
                                "status"
                              ],
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "Indicates the HTTP status code to respond with. It must be in the range 300-309, 400-409, or 500-509 to indicate a redirection or error."
                                },
                                "message": {
                                  "type": "string",
                                  "maxLength": 200,
                                  "description": "If the value of the <i>status</i> field is in the range 300-309, the <i>message</i> field's value will be placed in a Location HTTP header returned to the client. If the <i>status</i> is in the range 400-409 or 500-509, the value will be returned in the response body to the client."
                                }
                              }
                            }
                          },
                          "required": [
                            "conditions",
                            "action"
                          ]
                        }
                      },
                      "disableCertAutomation": {
                        "type": "boolean",
                        "description": "If you plan to allow CDNetworks to renew your TLS certificate through Let's Encrypt, set this to <i>false</i>. \n If you plan to handle certificate renewal yourself,  set this to <i>true</i>. For more information about our support for certificate auto-renewal, refer to the description of the <i>autoRenew</i> field in the <a href=\"#operation/createCertificate\">Create a certificate API</a>.",
                        "default": "false"
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "version"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "name": "TestProperty1572420065294",
                    "description": "a new property",
                    "version": {
                      "syntaxVersion": 1,
                      "edgeLogic": "location / {origin_pass my_origin_1572420065294;}",
                      "origins": [
                        {
                          "hostHeader": "testcustomer.g.qtlcdn.com",
                          "servers": [
                            "edgetools.theoriginserver.com"
                          ],
                          "name": "my_origin_1572420065294",
                          "directConnection": "auto"
                        }
                      ],
                      "hostnames": [
                        "testcustomer1572420065294.g.qtlcdn.com"
                      ]
                    }
                  }
                },
                "example-2": {
                  "value": {
                    "name": "TestProperty1572420065294",
                    "description": "validPropertyNoCertificate_PropertyEndToEndTestSteps",
                    "version": {
                      "syntaxVersion": 1,
                      "edgeLogic": "location / {origin_pass my_origin_1572420065294;}",
                      "origins": [
                        {
                          "hostHeader": "testcustomer.g.qtlcdn.com",
                          "servers": [
                            "edgetools.theoriginserver.com"
                          ],
                          "name": "my_origin_1572420065294",
                          "directConnection": "auto"
                        }
                      ],
                      "hostnames": [
                        "testcustomer1572420065294.g.qtlcdn.com"
                      ],
                      "realTimeLog": {
                        "logUrl": "https://mynotification.info/downloadNotify/index.php",
                        "sampleRate": 2,
                        "escape": "json",
                        "format": "$server_addr",
                        "headers": [
                          {
                            "name": "X-My-Header",
                            "value": "123abc"
                          }
                        ],
                        "redirectHttpToHttps": true,
                        "loadBalancerHashKey": "$http_hashvalue",
                        "videoSeek": {
                          "startParameter": "start",
                          "endParameter": "end"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "The request body includes the name of the property and all configurations that must be deployed to the CDN360 cache servers."
        },
        "tags": [
          "Property Management"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "get": {
        "summary": "Query property list",
        "tags": [
          "Property Management"
        ],
        "responses": {
          "200": {
            "description": "A summary of the properties is returned including the ID and latest version of each one.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "properties": {
                      "type": "array",
                      "items": {
                        "title": "propertyListEntry",
                        "type": "object",
                        "description": "Represents a property returned from the Query Property List API.",
                        "x-examples": {
                          "example-1": {
                            "value": {
                              "id": "5c9326965efbb0000149b05c",
                              "name": "Testproperty20190320",
                              "description": "this is a test",
                              "latestVersion": 4,
                              "stagingVersion": {
                                "version": 2,
                                "hostnames": [
                                  "mydomain2.com"
                                ]
                              },
                              "productionVersion": {
                                "version": 2,
                                "hostnames": [
                                  "mydomain2.com"
                                ]
                              },
                              "lastUpdateTime": "2019-04-16T16:24:07Z",
                              "creationTime": "2019-03-21T05:52:22Z"
                            }
                          }
                        },
                        "x-tags": [
                          "Property Management"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the property."
                          },
                          "description": {
                            "type": "string",
                            "description": "A description of the property.\n"
                          },
                          "name": {
                            "type": "string"
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "RFC3339 format date indicating when the property was created."
                          },
                          "lastUpdateTime": {
                            "type": "string",
                            "description": "RFC3339 date indicating when the property was last updated.\n"
                          },
                          "latestVersion": {
                            "type": "integer",
                            "description": "Latest version of the property."
                          },
                          "stagingVersion": {
                            "type": "object",
                            "description": "Describes the version of the property deployed to staging.",
                            "properties": {
                              "version": {
                                "type": "integer",
                                "description": "Property version deployed to staging."
                              },
                              "hostnames": {
                                "type": "array",
                                "description": "Hostnames of the property deployed to staging.",
                                "uniqueItems": true,
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "productionVersion": {
                            "type": "object",
                            "description": "Describes the version of the property deployed to production.",
                            "properties": {
                              "version": {
                                "type": "integer",
                                "description": "Property version deployed to production."
                              },
                              "hostnames": {
                                "type": "array",
                                "description": "Hostnames of the property deployed to production.",
                                "uniqueItems": true,
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "number",
                      "description": "number of properties\n"
                    }
                  },
                  "required": [
                    "properties",
                    "count"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "count": 2,
                      "properties": [
                        {
                          "id": "8fdc9c949e986564cc24b149",
                          "name": "TestProperty1572488767058",
                          "description": "validPropertyNoCertificate_PropertySteps",
                          "latestVersion": 1,
                          "lastUpdateTime": "2019-10-31T02:26:07Z",
                          "creationTime": "2019-10-31T02:26:07Z"
                        },
                        {
                          "id": "59ebc3af71985328ded56857",
                          "name": "TestProperty1572488525164",
                          "description": "1572488525164unique description property",
                          "latestVersion": 1,
                          "productionVersion": {
                            "version": 1,
                            "hostnames": [
                              "testdomain-t1572488525164.mwtrial.info"
                            ]
                          },
                          "lastUpdateTime": "2019-10-31T02:22:05Z",
                          "creationTime": "2019-10-31T02:22:05Z"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Qtl-Request-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "A unique ID representing the request.",
                "required": true
              }
            }
          },
          "400": {
            "description": "This response is returned if there are errors in the API call.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Indicates the error",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "An error code",
                      "enum": [
                        "InvalidListOffset",
                        "InvalidListLimit"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "An error message",
                      "example": "The offset must be a valid non-negative integer."
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidListOffset",
                      "message": "The offset must be a valid non-negative integer."
                    }
                  },
                  "example-2": {
                    "value": {
                      "code": "InvalidTarget",
                      "message": "Invalid target query parameter. Only \"all\", \"staging\", or \"production\" are allowed."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "The API returns a summary of all properties including the ID, latest version number, comments, staging version number, production version number, and last update time of each one.",
        "operationId": "getPropertyList",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "The value of the search parameter is matched on the <i>id</i>, <i>name</i>, <i>description</i>, and <i>hostnames</i> fields of each property."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "hasConfig",
            "description": "The value of <i>hasConfig</i> is used to filter the results. It can be any field name of a property version, optionally followed by a colon and a value. For example: \n<code>\nhasConfig=hasBeian:true&hasConfig=realTimeLog</code> \n\nWhen a colon and value are specified, only properties whose configurations have that value of the field will be returned. Partial matches are supported.  For example: <code>hasConfig=hostnames:domain</code>\nIn this case, the API will return all properties with a hostname containing the string 'domain' such as 'mydomain.com' and 'thedomains.com'. \n\nIf a colon and value are omitted, all properties with a nonempty value for the field will be returned.\n\nIf there is more than one <i>hasConfig</i> query parameter, they will be combined together. Only properties matching all the parameters will be returned.\n\nIf a property has multiple versions, the property will be included in the API response if any of its versions matches the <i>hasConfig</i> parameter.\n\n"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "staging",
                "production"
              ],
              "default": "all"
            },
            "in": "query",
            "name": "target",
            "description": "The value can be \"all\", \"staging\", or \"production\" to filter the results based on where the property has been deployed. \n"
          },
          {
            "schema": {
              "type": "number",
              "default": "0"
            },
            "in": "query",
            "name": "offset",
            "description": "Indicates the first item to return. The default is \"0\"."
          },
          {
            "schema": {
              "type": "number",
              "default": "100",
              "maximum": 200
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of properties to return. The default is to return a summary of all properties."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "in": "query",
            "name": "sortOrder",
            "description": "Order of properties to return. The default is to return the last one updated first."
          },
          {
            "schema": {
              "type": "string",
              "default": "lastUpdateTime",
              "maxLength": 0,
              "enum": [
                "creationTime",
                "lastUpdateTime"
              ]
            },
            "in": "query",
            "name": "sortBy",
            "description": "Returns results in sorted order."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/edgeHostnames": {
      "post": {
        "summary": "Create an edge hostname",
        "tags": [
          "Edge Hostname Management"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The value is a URL to the new edge hostname.",
                "required": true
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid client region": {
                    "value": {
                      "code": "InvalidClientRegion",
                      "message": "Invalid client region 'aaabcde'."
                    }
                  },
                  "Invalid edge hostname suffix": {
                    "value": {
                      "code": "InvalidEdgeHostnameSuffix",
                      "message": "Invalid edge hostname 'testdomain-.mydomain.info'. The edge hostname can end with these values:  .qtlgslb.com."
                    }
                  },
                  "Invalid weight code": {
                    "value": {
                      "code": "InvalidWeightCode",
                      "message": "Invalid weight 'test'. The weight should be an integer between 0 and 100."
                    }
                  },
                  "Invalid Edge Hostname": {
                    "value": {
                      "code": "InvalidEdgeHostname",
                      "message": "Invalid edge hostname 'abcdef'. The edge hostname must be a valid domain name string."
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Too many edge hostnames have been created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Too many edge hostnames": {
                    "value": {
                      "code": "TooManyEdgeHostnames",
                      "message": "The number of edge hostnames exceeds the account maximum."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The edge hostname could not be created due to a conflict. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Edge hostname already exists": {
                    "value": {
                      "code": "EdgeHostnameAlreadyExists",
                      "message": "The proposed edge hostname cannot be created because it already exists."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API enables you to create edge hostnames to control how requests from different client zones are handled. You must modify your DNS records to point your properties' hostnames to an edge hostname created using this API in order for CDN360 to handle your content.",
        "operationId": "createEdgeHostname",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "edgeHostname": {
                    "type": "string",
                    "description": "An edge hostname you wish to use. It should end with \".qtlgslb.com\".",
                    "example": "test.123.qtlgslb.com"
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the edge hostname."
                  },
                  "pciRequired": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indicates whether PCI compliance is required.  <i>true</i> means content will only be served by PCI certified PoPs."
                  },
                  "hasBeian": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indicate whether you have a Beian license for service in China. If you do, content can be served by servers located within mainland China.\n"
                  },
                  "gdprCompliant": {
                    "type": "boolean",
                    "default": false,
                    "description": "If set to 'true', clients from European Economic Area (EEA) countries will only be served by IP addresses in EEA countries."
                  },
                  "clientZones": {
                    "type": "array",
                    "description": "Specify rules to control how requests from client zones are handled. If unspecified, a default rule will be created which uses our 'standard' server group to handle all requests:  \n<code>{\"region\":\"all\", \"isp\":\"all\", \"action\":{\"type\":\"deliver\",\"by\":[\"standard\"]}}</code>",
                    "items": {
                      "title": "Edge Hostname Client Zone Rule",
                      "type": "object",
                      "description": "This object describes how client requests from a zone are handled. A zone is a combination of a geographic region and an ISP.",
                      "x-examples": {
                        "example-1": {
                          "region": "all",
                          "action": {
                            "type": "deliver",
                            "by": [
                              "standard"
                            ]
                          }
                        },
                        "example-2": {
                          "region": "as.cn",
                          "action": {
                            "type": "deliver",
                            "by": [
                              "standard",
                              "premium",
                              "premium+"
                            ]
                          }
                        },
                        "example-3": {
                          "region": "apac",
                          "action": {
                            "type": "reject"
                          }
                        },
                        "example-4": {
                          "region": "as.cn",
                          "action": {
                            "type": "redirect",
                            "to": [
                              "redirect.cname.com"
                            ]
                          },
                          "weight": 10
                        }
                      },
                      "x-tags": [
                        "Edge Hostname Management"
                      ],
                      "properties": {
                        "region": {
                          "type": "string",
                          "description": "This field indicates the region in which the rule applies. Refer to our <a href=\"#operation/get-cdn-edgeHostnames-clientRegions\">API to get client regions</a> to get valid region codes. For example, if you wish to create a rule that covers all of Europe, simply specify \"eu\" as the region. You can indicate specific countries. For example, \"na.us\" represents the \"United States of America\", and \"eu.fr\" represents \"France\".  \n\nA special client region “all” can be used to specify that the rule applies to the entire world. If overlapping regions are specified, the more specific one takes precedence. For example, if you specify \"as\" in one rule and \"as.cn\" in another, then a request from China will follow the rule for \"as.cn\"."
                        },
                        "weight": {
                          "type": "integer",
                          "default": 100,
                          "description": "When multiple actions are specified for a client zone, the weight is used to adjust the probability of a client zone rule applying to a client request.\nConsider two rules that apply to \"as.cn\": <code>{\"region\":\"as.cn\", \"isp\":\"all\", \"action\":{\"type\":\"deliver\", \"by\":[\"standard\", \"premium\", \"premium+\"]}},\n    {\"region\":\"as.cn\", \"isp\":\"all\", \"action\":{\"type\":\"redirect\", \"to\":[\"akamai.cname.com\"]}, \"weight\":10}</code>\n\n The probability of \"deliver\" will be 100/(100+10) or 0.909 while the probability of \"redirect\" will be 10/(100+10) or 0.091.\n \n",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "action": {
                          "type": "object",
                          "description": "This object describes the action to take for requests matching the rule.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "deliver",
                                "redirect",
                                "reject"
                              ],
                              "description": "Defines the action to take for requests to the zone. Options are to <i>deliver</i> using one or more server groups, to <i>reject</i> the request altogether, or to <i>redirect</i> to another domain. If \"reject\" is specified, the client request will be redirected to a server that always responds with HTTP response code 403 representing \"Forbidden\". Up to one \"reject\" action is allowed for each client zone.\n"
                            },
                            "by": {
                              "type": "array",
                              "default": "standard",
                              "description": "This field is used if the action is of type \"deliver\". Specify one or more of the server groups (<i>standard</i>, <i>premium</i>, <i>premium+</i>, and <i>ultra</i>) to control what servers can be used to deliver content. If unspecified, \"standard\" is used.",
                              "enum": [
                                "standard",
                                "premium",
                                "premium+",
                                "ultra"
                              ],
                              "items": {
                                "type": "string"
                              }
                            },
                            "to": {
                              "type": "string",
                              "description": "This field is used if the action is of type \"redirect\". It indicates the hostname or IP address to redirect to. This is typically an origin server or another CDN provider.",
                              "example": "domain.com"
                            },
                            "enableIPv6": {
                              "type": "boolean",
                              "description": "Indicates whether an IPv6 address can be used. This value is used only if the client zone rule's action type is \"deliver\".",
                              "default": "true"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        "isp": {
                          "type": "string",
                          "description": "Specify the code representing an ISP (Internet Service Provider) if the rule only applies to requests from a particular ISP. Call our <a href=\"#operation/get-cdn-edgeHostnames-isps\">API to get a list of supported ISPs</a>. Specify 'all' to indicate all ISPs rather than a particular one. Specify a comma separated list of ISP codes if you want your rule to apply to more than one ISP."
                        }
                      },
                      "required": [
                        "region"
                      ]
                    }
                  },
                  "estimatedBandwiidth": {
                    "type": "string",
                    "description": "An estimate of the bandwidth required to serve content using this edge hostname. Units of measurement should be in Tbps, Gbps, Mbps, or kbps. Example: 100Gbps"
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "edgeHostname": "test.t1573428787161.qtlcdn.com"
                  }
                },
                "example-2": {
                  "value": {
                    "edgeHostname": "test.123.qtlgslb.com",
                    "clientZones": [
                      {
                        "region": "eu",
                        "isp": "all",
                        "action": {
                          "type": "deliver",
                          "by": [
                            "standard"
                          ],
                          "enableIPv6": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "The request body contains rules for your edge hostname."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "get": {
        "summary": "Get a list of edge hostnames",
        "tags": [
          "Edge Hostname Management"
        ],
        "responses": {
          "200": {
            "description": "The response contains edge hostnames matching the criteria.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "edgeHostnames": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "edgeHostname": {
                            "type": "string",
                            "description": "An edge hostname."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the edge hostname."
                          },
                          "lastUpdateTime": {
                            "type": "string",
                            "description": "RFC3339 format string indicating when the edge hostname was last updated."
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "RFC3339 format string indicating when the edge hostname was created."
                          },
                          "hasBeian": {
                            "type": "boolean",
                            "description": "<i>true</i> indicates that domains being accelerated have a Beian license allowing content to be served by servers in mainland China."
                          },
                          "highestServerGroup": {
                            "type": "string",
                            "description": "Indicates the highest server group that can be used to serve this edge hostname. The server groups are specified when you create a client zone rule for a <a href=\"#operation/createEdgeHostname\">new edge hostname</a>. ",
                            "enum": [
                              "standard",
                              "premium",
                              "premium+",
                              "ultra"
                            ]
                          }
                        },
                        "required": [
                          "edgeHostname",
                          "description",
                          "lastUpdateTime",
                          "creationTime",
                          "hasBeian",
                          "highestServerGroup"
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Total number of edge hostnames in the account. The actual number of edge hostnames returned in the <i>edgehostnames</i> field may be smaller if query parameters are specified."
                    }
                  },
                  "required": [
                    "count"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "count": 2,
                      "edgeHostnames": [
                        {
                          "edgeHostname": "ekgggzcmswu4vc.qtlcdn.com",
                          "description": "my edge hostname",
                          "hasBeian": false,
                          "highestServerGroup": "standard",
                          "lastUpdateTime": "2019-12-04T19:44:12Z",
                          "creationTime": "2019-12-04T19:44:12Z"
                        },
                        {
                          "edgeHostname": "cdn.admtl.com.qtlcdn.com",
                          "description": "",
                          "hasBeian": false,
                          "highestServerGroup": "standard",
                          "lastUpdateTime": "2019-11-21T00:15:35Z",
                          "creationTime": "2019-11-21T00:15:35Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid List Limit": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be between 1 and 200, inclusive."
                    }
                  },
                  "Invalid List Limit 2": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The limit value should be an integer."
                    }
                  },
                  "Invalid Sort Order": {
                    "value": {
                      "code": "InvalidSortOrder",
                      "message": "The valid sort order values are asc and desc."
                    }
                  },
                  "Invalid hasBeian parameter": {
                    "value": {
                      "code": "InvalidHasBeian",
                      "message": "Invalid hasBeian parameter. Only true and false are allowed."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getEdgeHostnames",
        "description": "Get a list of edge hostnames. Specify search, offset, and limit parameters to filter your results. The default is to return the most recently updated edge hostname first.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "The value is matched against the 'description' and 'edgeHostname' fields of each edge hostname."
          },
          {
            "schema": {
              "type": "integer",
              "default": "0",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Indicates the first edge hostname to return. The first has an offset of 0."
          },
          {
            "schema": {
              "type": "integer",
              "default": "100",
              "maximum": 200
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of edge hostnames to return."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "creationTime",
                "lastUpdateTime"
              ],
              "default": "lastUpdateTime"
            },
            "in": "query",
            "name": "sortBy",
            "description": "Order the list of edge hostnames."
          },
          {
            "schema": {
              "type": "string",
              "default": "desc",
              "minLength": 0,
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "sortOrder",
            "description": "Indicates the order of edge hostnames returned. Use 'asc' for ascending order or 'desc' for descending order."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "hasBeian",
            "description": "Specify <i>true</i> to obtain a list of edge hostnames flagged for use with hostnames that have a Beian license allowing them to be served by servers in mainland China. Specify <i>false</i> to only retrieve those edge hostnames without the Beian flag. By default, all edge hostnames are returned."
          }
        ]
      }
    },
    "/cdn/certificates": {
      "post": {
        "summary": "Create a certificate",
        "tags": [
          "Certificate Management"
        ],
        "responses": {
          "201": {
            "description": "The certificate was created. The <i>Location</i> header contains a URL to the new certificate.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The Location header's value will be a URL allowing you to get details about the new certificate.  Example: <code>Location: http://ngapi.cdnetworks.com/cdn/certificates/d60b730d9a586425677940cc</code>",
                "required": true
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Example of creating a certificate without a proper private key.": {
                    "value": {
                      "code": "InvalidKey",
                      "message": "Invalid private key cipher. To protect the private key, it must be encrypted with your API key and the timestamp before you upload."
                    }
                  },
                  "Example of passing an invalid value to the autoRenew field": {
                    "value": {
                      "code": "InvalidAutoRenew",
                      "message": "The value 'yes' of autoRenew is invalid. Only 'LE' and 'Off' are allowed."
                    }
                  },
                  "Response when trying to create a self-signed certificate without specifying the identificationInfo field.": {
                    "value": {
                      "code": "InvalidIdentificationInfo",
                      "message": "IdentificationInfo can't be empty for self-signed certificate."
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Your account already has too many certificates.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Response when attempting to create a certificate if you have already reached the maximum number permitted.": {
                    "value": {
                      "code": "TooManyCerts",
                      "message": "The number of certificates exceeds the account maximum."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The certificate already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "DuplicateName",
                      "message": "A certificate with the same name already exists for the customer."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "createCertificate",
        "description": "Create a certificate along with its first version. You can choose to upload the key/certificate pair or generate a self-signed one.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the certificate."
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the new certificate.\n"
                  },
                  "sharingMethod": {
                    "type": "string",
                    "default": "none",
                    "description": "This field can be used only if you are a reseller.\nA value of \"all\" indicates all child customers can use the certificate. A value of \"none\" indicates no child customers can use it.\nIf the value \"some\" is given, specify the IDs of your customers to share the certificate within the <i>shareWith</i> field.",
                    "enum": [
                      "all",
                      "none",
                      "some"
                    ]
                  },
                  "shareWith": {
                    "type": "array",
                    "description": "This field is available to resellers only. It is associated with the <i>sharingMethod</i> field and is used only if the value of <i>sharingMethod</i> is \"some\".  Enter a list of customer IDs.",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "autoRenew": {
                    "type": "string",
                    "enum": [
                      "LE",
                      "Off"
                    ],
                    "description": "Specifying \"LE\" requests that we automatically renew your certificate through Let's Encrypt (https://letsencrypt.org/docs/challenge-types/) when it is close to expiring. "
                  },
                  "newVersion": {
                    "type": "object",
                    "description": "This object is used to specify the initial version of the certificate.",
                    "properties": {
                      "comments": {
                        "type": "string",
                        "description": "Comments about the certificate version."
                      },
                      "privateKey": {
                        "type": "string",
                        "description": "The value must be either the private key in PEM format and encrypted with the API key and timestamp OR the literal string \"RSA2048\" or \"ECC256\" if you opt to generate a self-signed certificate. The key must be encrypted with AES-128-CBC and base64-encoded. This helps protect your key when you upload it to CDN360. The following Bash script demonstrates the required encryption when passing us the private key:\n<pre><code>\n#!/bin/bash\n\nAPI_SERVER=https://ngapi.cdnetworks.com\n\n\nUSER=YourAPILogin\nAPI_KEY=YourAPIKey\n\n\nDATE=`date \"+%a, %d %b %Y %H:%M:%S %Z\"`\necho $DATE\n\n#Generates password\npassw=$(echo -n \"$DATE\" | openssl dgst -sha1 -hmac \"$API_KEY\" -binary | base64)\necho \" \"\n\n# Generates IV and Key private key encryption\naesivkey=$(echo -n \"$DATE\" | openssl dgst -sha256 -hmac \"$API_KEY\" -r)\naes128cbciv=${aesivkey:0:32}\naes128cbckey=${aesivkey:32:32}\necho $aes128cbciv\necho $aes128cbckey\n\n# Encrypts the private key in certificate.\nprivate_key='-----BEGIN RSA PRIVATE KEY-----\\nMIIEpAIBAACavS...bw==\\n-----END RSA PRIVATE KEY-----'\nencrypted_private_key=`echo -e $private_key | openssl aes-128-cbc -base64 -nosalt -K $aes128cbckey -iv $aes128cbciv`\n\n# Create certificate\napiCall=\"curl -i --url\n '${API_SERVER}/cdnapi/certificates'\n\t\t\t-X POST \\\n\t\t\t-u $USER:$passw \\\n\t\t\t-H 'Date: $DATE' \\\n            -H 'Content-Type: application/json' \\\n\t\t\t-H 'Accept: application/json'\\\n            -H 'On-Behalf-Of:126' \\\n            -d '{\n                \\\"name\\\":\\\"testncas728\\\", \\\n                \\\"description\\\":\\\"\\\", \\\n                \\\"sharingMethod\\\": \\\"some\\\", \\\n                \\\"shareWith\\\":[123,456,789], \\\n                \\\"newVersion\\\":{ \\\n                    \\\"comments\\\":\\\"some comments\\\", \\\n                    \\\"privateKey\\\":\\\"$encrypted_private_key\\\", \\\n                    \\\"certificate\\\":\\\"-----BEGIN CERTIFICATE-----\\nMIIDnD...s\\nsbg==\\n-----END CERTIFICATE-----\\\", \\\n                    \\\"chainCert\\\":\\\"-----BEGIN CERTIFICATE-----\\nMIIDpj...FeK+28=\\n-----END CERTIFICATE-----\\\" \\\n                } \\\n            }' \\\n            \"\neval $apiCall\n</code></pre>"
                      },
                      "certificate": {
                        "type": "string",
                        "description": "Enter the certificate in PEM format or the literal string \"GENERATE\" if you wish that we create a self-signed certificate valid for ten days for test purposes. If you enter \"GENERATE\", then you must also <li>specify either \"RSA2048\" or \"ECC256\" as the value of the privateKey field to choose the encryption for the self-signed certificate.</li>\n<li>fill in the <i>identificationInfo</i> field</li>"
                      },
                      "chainCert": {
                        "type": "string",
                        "description": "The chain certificate in PEM format."
                      },
                      "identificationInfo": {
                        "title": "certificateIdentificationInfo",
                        "type": "object",
                        "description": "Information submitted when generating a self-signed certificate.",
                        "x-examples": {
                          "example-1": {}
                        },
                        "x-tags": [
                          "Certificate Management"
                        ],
                        "properties": {
                          "country": {
                            "type": "string",
                            "description": "An ISO-3166 country code.",
                            "minLength": 2,
                            "maxLength": 2
                          },
                          "state": {
                            "type": "string",
                            "description": "A state or province."
                          },
                          "city": {
                            "type": "string",
                            "description": "A city."
                          },
                          "company": {
                            "type": "string",
                            "description": "A company name."
                          },
                          "department": {
                            "type": "string",
                            "description": "The department associated with the certificate."
                          },
                          "commonName": {
                            "type": "string",
                            "description": "A common name for the certificate."
                          },
                          "email": {
                            "type": "string",
                            "description": "An email address.",
                            "format": "email"
                          },
                          "subjectAlternativeNames": {
                            "type": "array",
                            "description": "Hostnames that this certificate will serve. Each entry must be a valid hostname such as <i>domain.com</i> or a wildcard hostname beginning with '*' such as <i>*.domain.com</i>.",
                            "example": "domain.com, *.domain.com",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "commonName",
                          "subjectAlternativeNames"
                        ]
                      }
                    }
                  },
                  "forceRenew": {
                    "type": "boolean",
                    "default": false,
                    "description": "A value of <i>true</i> requests the certificate to be auto-renewed as soon as possible instead of waiting for the certificate to expire in 15 days. The value will be set to false after a successful renewal."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "Example of uploading a certificate": {
                  "value": {
                    "name": "testCertificate2019101201254",
                    "description": "a description",
                    "newVersion": {
                      "comments": "certificate comments",
                      "privateKey": "I5/2qKmPCf6ITq4kQIujhjerwDoin9aJquu1oGGO312SC/a2rGrSBls90AuxZuFLcfltz4r+u31AlLNRrcNbW5+4gLxsU6OPw3Hv9ta165rnoeDlRyyQPJX0c4dHb1EcvTF/5RkzbHjpDVTvYio9nFfd+Gjk1spHQzGcMbs151CrndlYM6QrmrVLTnYKTxAlunFXOVRxHGEEvAtFege7ozBxkLph0L3ZarfDJ4Zwxn61q9PXaHPUVqBPVKFgKpPy6bpETidgg/sTodb9dFogCK9vl60vZtRrwXmRvpOBkwhwMcfvpXCSXiOjxBbAFhTc6KeC50LwneGPhucogUByqTub8go1SSGdqWRb/kSJva7Zb8R6C3n1/p5YswNv3N84SmGKrGnZy08CC6zzptU4jsYKsRByAz1uW3A/89LT7QTr3o5uDN9lLiKpzLSafhqZHz+r+8hO44Sr2sdz2uYY6RIShPHuoB7GzhjO5ObHCmDL7+IZScpBnKE3762XHV9CDCxcvGADwdzzC05ZpdSh8mYBUbrN1jqriVxQ4Klh5XEc33kW7xAexb89AaVK0Nfj3V2rFomjnw1aAKRrz+el3WvtIb9lMp4D4kIFzEcLKLME/6kejTj6MNFKf32hB0nFvSKq9D5i2V4AgQFC0HA75q79ZM+o5Daf1/yex4nFSvBZLdlAfSWJykLYmsVTreVAoCOaci0Vo64LjJMivF5M6YEO+j/xIFUPpNbs81dT5p2vqVJEFCLeymyHW3hcHShClo0ThDeMG41JmJ7W3i/nIcUpY6WgdEErrDTJdQsh0y+/XdA1c8f3L3tNbX1SDMZFZh9BoE8epdcHKGo2qF8DvzSSaMiwYTtOatm7lKYyf0e10poDCXYsVpoUj31f+e2noYwZzwoB+jetzcG5CYK2t5VSj5sFqozbGn5jV6rnOtYRmYG2pmxeIyNXiNfwVD+h0zudaZhBQcgUFHUApkt6KlcmDDM+16nY6rTqyP1fDqdIQsrpztspbbh+l68lxz2mGW6S8L/TrQfN8eoEB/xT1G3r2lBI1XrcDP5q+uO1RZvYn+As5xQG0l+nG6AxWhRaYb06leC8teCHaVRzjupzsXaQDOB8TylFmFcHajpXQ4O/ssjNw22LEMyj5Tr2Z5Kh5QNwpZQ6JJla92dTEwP4hRIvpVZcZJExxO4OnVgc+Mvtw+lK/V1iCqGBCd9nHCYFU38EkIf4M4FUEyitL4Vwofi5LZKHdP/NAYTmwQnkvkyiPzGlGDlhIlAwF2flB6k72bXBVVdC4BhhtI5X4COHHrwzORskMSRhWKv+J5L1sQD2RjrjoGt+gSiXiNOE5D174Gy0yQFT+ECA9OaFQxiPGnBO2+2io15HZTgRnLRde3gzvLIvL5HjqHHkjlMYMUgMhVrTvWxzwD8pO9VWIRfD3lJvhRrkc77gqHGfBP/rY7VXyxZyj0OOwfJlq3Nj8rt8wXFX0SBNbN6CgYCEo8tjQgTUU+vjBv13bfXPUVeCr9sHiHV4s5NubukMZ8PgjrnH9ckCILn3lyqq51wW7+sFtJ4d9H37vuAL4u6I0ncB+C5TC/JLBI4NmXJxkBpCInoCwfDMl7KJDWqifYdO4BUOD5Tc2rbror+5t1XwzKrRHGUf/gy/VPGfnt6hfvD7RsGAKiDX4YHpQCo1nfASj/63xXGc6WaCjoQiZHV+VVNhT3sVXBvJMqV381rttzo4kHp8HzmtE0yTa/UbKTFHz9q0ux4kzbMrivVauW177EXBKDADNiVPzKanCksCUwtAbIuEwdhCo8aGtZ4Yts1Fgy2W2pMwm447x0a9I3EJQ/qptoguIwf35T2AFSIyXSUYTHUTBobKn5CTym2Q6IGn+OdHhHiS5eWcMw4gc86l47iyxL4A++pnddUDa8QZ2CmcWSoJH6s7iZpICsawjk5Zv9pIpqTlJiqx0X55M9RgolYphzPneN6OLRq8gRdKiEHeySbwLMRzuqza8Jic/8gNrU1JtiHVIKIsHq8fA8jAVOLPytNXHDY/BqC34WNaTtAMobyE/4cWT2ztLZe55YosDsijvFOlLBKVSxy8t6MA7xkQP04BRxP0WQILGYlhZlMIvybTXo8ufMjf8CdqIg/C9OO3iLddGROcTXv6s65Qccg69gSL8wiHNYAGWHrlOTWXyNyc/Ktnm6LAqBgS3oGDmRWjFDQMA85Zg5lEVH7onQ7hs//MN/L83s/IN254L1guzTDSO3B434UMa497A0q7bMxpdYPSUdmbocmgEoav9a24LL4=",
                      "certificate": "-----BEGIN CERTIFICATE-----\r\nMIIFhDCCA2ygAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgYUxCzAJBgNVBAYTAkdC\r\nMRAwDgYDVQQIDAdFbmdsYW5kMRIwEAYDVQQKDAlBbGljZSBMdGQxLDAqBgNVBAsM\r\nI0FsaWNlIEx0ZCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkbWzN+MSIwIAYDVQQDDBlBbGljZSBMdGQgSW50ZXJtZWRpYXRlIENBMB4XDTE5MDkyNDA5MzMzOFoXDTI5MTIz\r\nMDA5MzMzOFowgYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRYw\r\nFAYDVQQHDA1Nb3VudGFpbiBWaWV3MRIwEAYDVQQKDAlBbGljZSBMdGQxHzAdBgNV\r\nBAsMFkFsaWNlIEx0ZCBXZWIgU2VydmljZXMxFzAVBgNVBAMMDioubXd0cmlhbC5p\r\nbmZvMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuiMxFcNZc27GUlJZ\r\njgfTM83BkrVBDFDG0WjTQtYtc4qaRzEKsfGLYfa2CnF3FYdgTVpTuNdgMKY5rL4s\r\nUbq55+0HNtIw5iYkqhzkFldYQITqSbF3nF0Kj/v38W+T/qn/0p96rKF2TBeNHQHn\r\nJjFdz5/UkoEyqVjt0GEWcNF2M6+qeTxFjySvf+v8yLB5innjjYIYBYaqq4OYPbXi\r\ntce4LD/++pHEblOtadohZzZih/zVEKpdDE2DB+IhJL2OB+s8rGb6LSNm2si1MSps\r\nLrtvTup/4OtmZ0qEIpf+He40uAsg/xBpBurPgYnYExbjTPDignWj3CTWMEK5uZYn\r\nV/e9BwIDAQABo4H4MIH1MAkGA1UdEwQCMAAwEQYJYIZIAYb4QgEBBAQDAgZAMDMG\r\nCWCGSAGG+EIBDQQmFiRPcGVuU1NMIEdlbmVyYXRlZCBTZXJ2ZXIgQ2VydGlmaWNh\r\ndGUwHQYDVR0OBBYEFCHUj0nwBzmdBxQRHpjMVSmdJXSxMFwGA1UdIwRVMFOAFBGc\r\nFBxeLtyzA/PsIOuD+j5Y4ONPoTekNTAzMQswCQYDVQQGEwJHQjEQMA4GA1UECAwH\r\nRW5nbGFuZDESMBAGA1UECgwJQWxpY2UgTHRkggIQADAOBgNVHQ8BAf8EBAMCBaAw\r\nEwYDVR0lBAwwCgYIKwYBBQUHAwEwDQYJKoZIhvcNAQELBQADggIBAJvcF42qjfCE\r\nLDZaAsnMK/y2DXz3hN0feVkg1Dfam1WgzKJt+8Py7s1EnB13crEoRNZFgfQexsSv\r\nHHWFad19X1qb/wCdmgqeIVm5NSEvTTBaUHjKFsVJ7wdtxSi9yGj9tBHb2bA4lhxG\r\nmL8m4HKPsDurJQstfOLWgKunLW4DAsgzhyleg5meeS7tT4Gzoyo1DuFqInzHVfuQ\r\neM5ABBE/lZTpL6348booqkLb2uxXUavtRY0/ePYA7QkuVoISby+OA9Gvhp2UUEr1\r\nNPQplZLE5nrEzm/DzVW5vK2GnVfsY47YT9q35Ccrte0PL4xrwlx+a5OT0G+38JLx\r\n6PMwfJBhUkOrBHiwQem17l9ZITt4dXd9RTjg6uew85xXvkJfftIVrXa8WW+Tjz53\r\nsZAzZgE+Jb8C3FKJEwX6Cp6U8XKlKhiMU7OvjN8HSNnlvwDmxm2ze8czp/Pj+44Q\r\nXlU+hjKnTmNDZFTOCCuNk0faxpNCRKQFPfCMUM25WieAEJ2NfcmazjaFmSSYvITV\r\nlsl8UJ6Xx2iwl+2iagnYdXmwyt0XIEWhx4Tm7QaVJdE8PBjnFS6E1Al+HZYQ1DFu\r\no+RCOskDPTRTaw7YjU5MvxwaUtX0+dQl6niB1/Mwb0OUlQ3zhBmSQpA+ME4Tkz38\r\nv1PEmut2OHYOhGqr4zMXggzoNGSpEV+I\r\n-----END CERTIFICATE-----",
                      "chainCert": "-----BEGIN CERTIFICATE-----\r\nMIIFmzCCA4OgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwMzELMAkGA1UEBhMCR0Ix\r\nEDAOBgNVBAgMB0VuZ2xhbmQxEjAQBgNVBAoMCUFsaWNlIEx0ZDAeFw0xOTA5MjQw\r\nOTIxMDNaFw0yOTA5MjEwOTIxMDNaMIGFMQswCQYDVQQGEwJHQjEQMA4GA1UECAwH\r\nRW5nbGFuZDESMBAGA1UECgwJQWxpY2UgTHRkMSwwKgYDVQQLDCNBbGljZSBMdGQg\r\nQ2VydGlmaWNhdGUgQXV0aG9yaXR5G1szfjEiMCAGA1UEAwwZQWxpY2UgTHRkIElu\r\ndGVybWVkaWF0ZSBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAO+1\r\nrCsTWGgjWa4CSh0JoM/P+TmVIeja8+Qf+7RvyNeMQxXTm9WU47BP8vyLeRmdUlKf\r\npCjHmtDdRHgDv5YLamR2gVcpLardBfcNi/2Oy4AaHCeXSReKS54UWnXjUb1LiNWe\r\njOlK6KlF9hpBvWW9q3qpovymDtoSqfks4w90AsVT65B/s7UnFakPjZA0S/sCsh+X\r\n3JuiFCxqQGkURT383LFP3f2iLdrixpy6E46ys4f1Z8PYiBojUPTHz2NFWYdYZm/8\r\nireK5aTtTn4N1dUNTBpE/XjCELV2KN3LIQYQiACA1yHPNtBk+qdrrd41/tutLQTE\r\nUz3IVzJTbbHfUajApL5nxWB1/AI0PNw9a9PDcPvJqt1x5SiKH801jvxOAfdubf0Z\r\n/3b8jmPd3UoVXUwfrOIdez7q23aCH6nARvktvS9WdkA0RzSG4cbmYIJcj3stS1D0\r\nS58w62TKl5Qm5NXman2MrzQpRvvCE3kbvGB3+yFLBu3H8eiHYTwQhykD09xcVrVI\r\nki9R8el8gxLTIOcl4IyWhdxMTZnFqK0AbwNREMWMoSNz+A+XdLDhKrEGLNlw+FJW\r\n8Tj03FbadQvHGv7oOqWglr3YLohTmjdr/wXvxG0ifv1HsmZtYodaPNCiy8d+BAWU\r\nPk6sDOQ1eL7fuV4ayYjMS7hiXXSJ5Uq6a8vbnRUBAgMBAAGjZjBkMB0GA1UdDgQW\r\nBBQRnBQcXi7cswPz7CDrg/o+WODjTzAfBgNVHSMEGDAWgBQ9haB9RXohMsZG8cSe\r\nq2/bfizOZjASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjANBgkq\r\nhkiG9w0BAQsFAAOCAgEAlc/GzCOQEZ5TTkzpRsdxAwQijdaoVTZc5aeqoYoYDsOv\r\nJ8B6DXwTpf2URxkulPwihjNTKmCY4agv31mguXF3k2h29pNGd2/Mr7TB7qZaaPXM\r\n82lumpCxSLtNVMvy4T8nrcQecLC/ZQlqmeIYwpvoD0hZtp1f6VYWkzFjteH93Gke\r\nnX6VaQuZnCwPFTndALAMZwPMdroipeMEctcozQHgl7K9/wNiXLJaEOtutD1UhBTl\r\ngpDY00Un7NfWminubnc/Hj5NXEQ9EkNseE8Yq8pp1wfSSOEWrzF5MluELcErZn2f\r\nupvY/H1rxO9B7xtzGh15fxkHYndsjn+Fp5a8mkriLyJd4DFXZPZLS6JMc1vcuJPG\r\njoz2kd2/deylnjPshx05GMUc2O23RImg1/b/cbyci0Al8veS6/lHRh5mG5e5APr7\r\nUQfuLuufzN+rHaSJNmcPzSVIDH+HPQ8R8BIUO8Y3brEKdMmsgDCmKhjrb9prjhLs\r\nWojwz5/VX8R6fkyDWnJHRBU0q93HS6PUu/6p5r1rRfXOjL4xbbLEF/uYQTLyUdqN\r\nG4LQzsqSbnUSnU1X+1hkyUQCjgfRCY1ue6/qzPn7SHx6Yyj1IyAkkYY1U/MdwCQ0\r\nj6Ku1SAwiznToVGJZJ2l9apakcWiyUyf50aPV7ue7Eqq4t8SEZ2AYDP0hL+zWI8=\r\n-----END CERTIFICATE-----\r\n-----BEGIN CERTIFICATE-----\r\nMIIFVzCCAz+gAwIBAgIUH/RVmBLtxfDViatHQYAwdaOcrVEwDQYJKoZIhvcNAQEL\r\nBQAwMzELMAkGA1UEBhMCR0IxEDAOBgNVBAgMB0VuZ2xhbmQxEjAQBgNVBAoMCUFs\r\naWNlIEx0ZDAeFw0xOTA5MjQwOTAyMzlaFw0zOTA5MTkwOTAyMzlaMDMxCzAJBgNV\r\nBAYTAkdCMRAwDgYDVQQIDAdFbmdsYW5kMRIwEAYDVQQKDAlBbGljZSBMdGQwggIi\r\nMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC/rMdlSxsny/sRsFsmXn6VfXmB\r\nqEPMChR5H6Yo5DEePGcZyf4zySxIiWE8ZAfY5jBN0JTr/6GQHu91MSqjUv8FBWYn\r\nlFzMZY9rc3iH24zt50ZcyQEoRvcjG/50nQmAaa5L/ivzFO7WLoWhw97XLKDiWBDP\r\nugnH8WIY53kgY9h5jxKaJxxBVoAY/uPOWSEfewcCNp/iZ6PX2qMfJp0Il8UK58By\r\n/ISkhTg3eisN1Dbk1HZQJ0qUEGNPn+uuuuo9p3LM5ziXKKdAKZzoSeRQaE2yCpsa\r\nnAWchFtkAJpo30ktvLX7cNSzFyOVrohTM8GXJEODQHdaTZD7sv0rxMZbLa98Uu4W\r\nMYnsgf3WJWeFgO0+wib+3rDCrcwU4nDjfcThrmFmX06EB69MIhD9FUapYvmZ8UqZ\r\n1JKPJdLum/JWmldqs4RG6gDKDNQuVNb1cLRM5yJ0cSYoQgRfKWQqxq0SGTNh4GpZ\r\nka7oUHEk2FW1Ha/WVb4WVYGY+Jg+poawAhJkhCMrBTt9Oct+Ay3gF0dc/nHYRLka\r\ni4DZ/+M4wY9vNiVSNGajA5tDnRS+1h+CT89q/m2Y2x8NR/h2sdxMLEiutYfszRJZ\r\n/Git01wgUoepH66UQjvPuNZqSS30mypM/fsQZCLI22+HnipQuSzlBcAQAgz2xyf8\r\nxtszPTcXxiF3LauclwIDAQABo2MwYTAdBgNVHQ4EFgQUPYWgfUV6ITLGRvHEnqtv\r\n234szmYwHwYDVR0jBBgwFoAUPYWgfUV6ITLGRvHEnqtv234szmYwDwYDVR0TAQH/\r\nBAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIBAB5AA7Qp\r\nRaW0Dm8WXmbfgnh5e01M5s9E+AgbL2d2Y15+Pcbv+o+GYtffHvf/Wpejcd6hHOdh\r\nSX1mbH1UwUZd2Iy/iZBj3Augv8ImdhxgGiR3xo7LnkP3RL5K40IzjDzwODo+DLgr\r\n2w0o1hXqhBzzCAgzhgpFM1C53Acw/CzzPNgVVOnxOFik1kmGexUfsWeERRlM++NV\r\nXgk+iKeIZ8Umz2t7XpEk6FOZiT7edPgoJZZQWaE7IEilYSooxGS4c/okMkEysUaI\r\neAup/7Sk6Gy7Dl0KC4Bef2P7gdaWg94o4FXVRsIsOuRAlXMVjXASxnAec7aC9wqv\r\n3t/SsukeMuYQbqYVl+mEE2lv3CCRReeoeePeWcReyBhegIOZ4a0Q3DlvmKk/88v2\r\nss8kBBU/JxY0nVBlEDDKnramARPLB84UphiG/n2sbEd/7zcQmUzHUaO1WDRryjjp\r\ny6cHeGV3oy10tenqOxfkqfPludgEMbWeSJFUFA2d6z8t3NHKA5tYupEx9qaVkDpG\r\nymsd8k+7ER2ALnGidC3NWyuFNlQ3OL52WgZnjnFPx99uoL+FiH40o3QTv8nu6RVD\r\nq3Fsop0xcj1KRCE0mwgLsNgzNvTHdUB8al/VZva7EkWiI/nlKF4oQzWD98zEFtUV\r\nQVMAqHFPkkZwjhb0NgpuuQkVkTSf4PNHBgjE\r\n-----END CERTIFICATE-----"
                    }
                  }
                },
                "Example of generating a self-signed RSA2048 certificate": {
                  "value": {
                    "name": "testCertificate2019101201313",
                    "newVersion": {
                      "privateKey": "RSA2048",
                      "identificationInfo": {
                        "commonName": "domain.com",
                        "country": "US",
                        "city": "Santa Clara",
                        "subjectAlternativeNames": [
                          "a.domain.com",
                          "b.domain.com"
                        ],
                        "company": "My Company",
                        "state": "California",
                        "department": "IT",
                        "email": "somebody@mycompany.com"
                      },
                      "comments": "a self-signed certificate",
                      "certificate": "Generate"
                    }
                  }
                },
                "Example of generating a self-signed ECC256 certificate": {
                  "value": {
                    "name": "testCertificate2019101201243",
                    "newVersion": {
                      "privateKey": "ECC256",
                      "identificationInfo": {
                        "commonName": "domain.com",
                        "country": "US",
                        "city": "Santa Clara",
                        "subjectAlternativeNames": [
                          "a.domain.com",
                          "b.domain.com"
                        ],
                        "company": "Company Name",
                        "state": "California",
                        "department": "IT",
                        "email": "somebody@mycompany.com"
                      },
                      "comments": "a self-signed certificate",
                      "certificate": "Generate"
                    }
                  }
                }
              }
            }
          },
          "description": "Describes the certificate to create."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "get": {
        "summary": "Query certificate list",
        "tags": [
          "Certificate Management"
        ],
        "responses": {
          "200": {
            "description": "The response contains a list of certificates.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of available certificates. The actual number returned depends on the query parameters."
                    },
                    "": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Summarizes a certificate.",
                        "properties": {
                          "certificateId": {
                            "type": "string",
                            "description": "An ID representing the certificate. You can call GET /cdn/certificates/{certificate ID} to get details about a certificate."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the certificate."
                          },
                          "latestVersion": {
                            "type": "integer",
                            "description": "The latest version of the certificate.",
                            "minimum": 1
                          },
                          "owner": {
                            "type": "integer",
                            "description": "Refers to the ID of the account that owns the certificate."
                          },
                          "autoRenew": {
                            "type": "string",
                            "description": "This is set to \"LE\" if you have chosen to autorenew the certificate using Let's Encrypt.",
                            "enum": [
                              "LE",
                              "Off"
                            ]
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "An RFC3339 format date indicates when the certificate was added to the system."
                          },
                          "expirationTime": {
                            "type": "string",
                            "description": "An RFC3339 format date indicating when the latest version of the certificate expires.\n"
                          },
                          "lastUpdateTime": {
                            "type": "string",
                            "description": "An RFC3339 format date indicates when the certificate was last updated.\n"
                          },
                          "versionInProduction": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Indicates the version of the certificate deployed to production."
                          },
                          "versionInStaging": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Indicates the version of the certificate deployed to staging."
                          },
                          "productionExpirationTime": {
                            "type": "string",
                            "description": "RFC 3339 date indicating when the version deployed to production will expire."
                          },
                          "stagingExpirationTime": {
                            "type": "string",
                            "description": "RFC 3339 date indicating when the version deployed to staging will expire."
                          },
                          "forceRenew": {
                            "type": "boolean",
                            "description": "Setting the value to true requests the certificate to be auto-renewed as soon as possible instead of waiting for the certificate to expire in 15 days. The value will be set to false after a successful renewal."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "count"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "count": 10,
                      "certificates": [
                        {
                          "certificateId": "5c5a5fa5e9b2e00001ef0462",
                          "name": "testCertificateA",
                          "versionInProduction": 1,
                          "latestVersion": 3,
                          "owner": 1234567,
                          "autoRenew": "Off",
                          "creationTime": "2019-02-06T04:16:37Z",
                          "expirationTime": "2020-10-12T12:10:31Z",
                          "lastUpdateTime": "2019-02-06T04:16:37Z",
                          "productionExpirationTime": "2019-10-12T12:10:31Z"
                        },
                        {
                          "certificateId": "5c5a6147e9b2e00001ef046f",
                          "name": "testCertificateB",
                          "latestVersion": 1,
                          "owner": 1234567,
                          "autoRenew": "LE",
                          "creationTime": "2019-02-06T04:23:35Z",
                          "expirationTime": "2019-09-22T08:11:54Z",
                          "lastUpdateTime": "2019-02-06T04:23:35Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid target parameter": {
                    "value": {
                      "code": "InvalidTarget",
                      "message": "Invalid target query parameter. Only \"all\", \"staging\", or \"production\" are allowed."
                    }
                  },
                  "Invalid auto renew": {
                    "value": {
                      "code": "InvalidAutoRenew",
                      "message": "The value 'invalid' of autoRenew is invalid. Only 'LE' and 'Off' are allowed."
                    }
                  },
                  "Invalid sort by": {
                    "value": {
                      "code": "InvalidSortBy",
                      "message": "The valid sort by values for this endpoint are 'creationTime', 'lastUpdateTime', 'expirationTime'."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getCertificates",
        "description": "Get a list of available certificates including each certificate's ID, name, version deployed to production, version deployed to staging, the latest version number, when the certificate was last updated, and when the certificate expires. By default, certificates are returned in order of most recently updated first. Query parameters can be used to filter the list of returned certificates.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "This parameter specifies a keyword to be searched in the 'name' field of the certificate."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": "0"
            },
            "in": "query",
            "name": "offset",
            "description": "The offset indicates the index of the first certificate to return. The default is 0."
          },
          {
            "schema": {
              "type": "integer",
              "default": "100",
              "maximum": 200
            },
            "in": "query",
            "name": "limit",
            "description": "The limit indicates the maximum number of certificates to return."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "staging",
                "production"
              ]
            },
            "in": "query",
            "name": "target",
            "description": "Filters the results based on where the certificate has been deployed. <table><tr><th>Value</th><th>Effect</th></tr><tr><td></td><td>An empty target parameter results in all certificates being returned whether or not they have been deployed.</td></tr><td>all</td><td>Return all certificates deployed to either staging or production environments.</td></tr><tr><td>staging</td><td>Only return certificates deployed to staging.</td></tr><tr><td>production</td><td>Only return certificates deployed to production.</td></tr></table>\n"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "LE",
                "Off"
              ]
            },
            "in": "query",
            "name": "autoRenew",
            "description": "Filter results based on auto renewal status. By default, all certificates are returned."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "creationTime",
                "lastUpdateTime",
                "expirationTime",
                "productionExpirationTime"
              ],
              "default": "lastUpdateTime"
            },
            "in": "query",
            "name": "sortBy",
            "description": "Returns certificates sorted by this field."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "in": "query",
            "name": "sortOrder",
            "description": "Return results sorted in this order (\"asc\" for ascending order, \"desc\" for descending order).\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/certificates/{certificateID}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "certificateID",
          "in": "path",
          "required": true,
          "description": "ID of the certificate."
        }
      ],
      "get": {
        "summary": "Get a certificate",
        "tags": [
          "Certificate Management"
        ],
        "responses": {
          "200": {
            "description": "The response body contains information about the certificate.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "certificateId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the certificate."
                    },
                    "sharingMethod": {
                      "type": "string",
                      "default": "none",
                      "enum": [
                        "all",
                        "some",
                        "none"
                      ],
                      "description": "This option for resellers indicates whether the certificate is shared with customers. If the value is \"some\", then the <i>shareWith</i> field indicates the IDs of the customers who can use the certificate."
                    },
                    "shareWith": {
                      "type": "array",
                      "description": "If the certificate is shared, this indicates the IDs of customers who can use the certificate.",
                      "uniqueItems": true,
                      "items": {
                        "type": "integer"
                      }
                    },
                    "ownerCustomerId": {
                      "type": "integer",
                      "description": "ID of the customer that owns the certificate.",
                      "minimum": 1
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the certificate."
                    },
                    "versions": {
                      "type": "array",
                      "description": "Describes the versions of the certificate that have been created. You can obtain further details about each version by calling the <a href=\"#operation/queryCertificateVersion\">Query a certificate version's details API</a>.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Indicates the version number."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "uploaded",
                              "self-signed"
                            ],
                            "description": "Indicates the type of the certificate, either \"uploaded\" or \"self-signed\"."
                          },
                          "expirationTime": {
                            "type": "string",
                            "description": "RFC 3339 format string indicating when the certificate expires."
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "RFC 3339 format string indicating when the certificate was created."
                          },
                          "fingerprint": {
                            "type": "string",
                            "description": "A unique fingerprint associated with the certificate.\n"
                          },
                          "comments": {
                            "type": "string",
                            "description": "Comments about the certificate version."
                          }
                        },
                        "required": [
                          "version",
                          "type",
                          "expirationTime",
                          "creationTime",
                          "fingerprint"
                        ]
                      }
                    },
                    "autoRenew": {
                      "type": "string",
                      "enum": [
                        "Off",
                        "LE"
                      ],
                      "description": "A value of \"LE\" indicates that auto renewal via Let's Encrypt (https://letsencrypt.org/docs/challenge-types/) is enabled."
                    },
                    "usageInProduction": {
                      "type": "array",
                      "description": "Indicates who is using the certificate in production.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "customerId": {
                            "type": "integer",
                            "description": "ID of a customer using the certificate."
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "ID of the property using the certificate"
                          },
                          "hostnames": {
                            "type": "array",
                            "description": "List of hostnames using the certificate.",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "customerId",
                          "propertyId",
                          "hostnames"
                        ]
                      }
                    },
                    "versionInStaging": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "Indicates the version of the certificate deployed to staging."
                    },
                    "usageInStaging": {
                      "type": "array",
                      "description": "Indicates the customers using the certificate in staging.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "customerId": {
                            "type": "integer",
                            "description": "ID of a customer using the certificate."
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "ID of the property using the certificate."
                          },
                          "hostnames": {
                            "type": "array",
                            "description": "List of hostnames using the certificate.",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "customerId",
                          "propertyId",
                          "hostnames"
                        ]
                      }
                    },
                    "versionInProduction": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "Indicates the version of the certificate deployed to production."
                    },
                    "forceRenew": {
                      "type": "boolean",
                      "description": "A value of <i>true</i> requests the certificate to be auto-renewed as soon as possible instead of waiting for the certificate to expire in 15 days. The value will be set to false after a successful renewal."
                    }
                  },
                  "required": [
                    "certificateId",
                    "name",
                    "ownerCustomerId",
                    "description",
                    "versions",
                    "autoRenew"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "certificateId": "b23dce5954b2e1a639aa0a45",
                      "name": "testCertificate2019101202146",
                      "versionInProduction": 2,
                      "sharingMethod": "some",
                      "shareWith": [
                        10000010
                      ],
                      "ownerCustomerId": 10000021,
                      "description": "certificate description",
                      "versions": [
                        {
                          "version": 1,
                          "type": "selfsigned",
                          "expirationTime": "2019-11-21T22:21:41Z",
                          "creationTime": "2019-11-11T22:21:41Z",
                          "fingerprint": "6d38d08f70e3a04ad2c2bff11fb394e8ed29f878",
                          "comments": "a self-signed version"
                        },
                        {
                          "version": 2,
                          "type": "uploaded",
                          "expirationTime": "2029-12-30T09:33:38Z",
                          "creationTime": "2019-11-11T22:21:47Z",
                          "fingerprint": "03a6feea219b6dfd3e54b41174393d56387cbebf",
                          "comments": "certificate comments 2"
                        }
                      ],
                      "usageInProduction": [
                        {
                          "customerId": 10000021,
                          "propertyId": "2e88917f24ede37603837a43",
                          "hostnames": [
                            "testdomain-t1573511384256.domain.info"
                          ]
                        },
                        {
                          "customerId": 10000010,
                          "propertyId": "75e8d78b973a4aadc3fcc185",
                          "hostnames": [
                            "testdomain-t1573511634898.domain.info"
                          ]
                        }
                      ],
                      "autoRenew": "Off"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Response when passing an invalid certificate ID": {
                    "value": {
                      "code": "InvalidCertId",
                      "message": "The specified certificate ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Gets details about a certificate including the versions of the certificate and who is using it.",
        "operationId": "getCertificate",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "patch": {
        "summary": "Update a certificate",
        "responses": {
          "201": {
            "description": "This response indicates a new certificate version was created.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The Location header returns a URL to the specific certificate version if a new one is created.  Example:  <code>Location: http://ngapi.cdnetworks.com/cdn/certificates/329f12c1fe6708c23c31e91f/versions/5</code>"
              }
            }
          },
          "400": {
            "description": "This response indicates the request was incorrectly formatted. Please refer to the response body for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidCert",
                      "message": "The certificate body cannot be empty."
                    }
                  },
                  "example-2": {
                    "value": {
                      "code": "InvalidSharingMethod",
                      "message": "An invalid value for sharingMethod was given. Only 'all', 'none', or 'some' is permitted."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidCertId",
                      "message": "The specified certificate ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "updateCertificate",
        "description": "Update a certificate using this API. The fields are the same as those in the <a href=\"#operation/createCertificate\">Create a certificate API</a>. If the certificate is currently used by properties deployed to production or staging, we recommend that you follow this API call by <a href=\"#operation/createDeployment\">creating a deployment task</a> to deploy the updated certificate. Otherwise, CDN360 may still serve content using an older version of the certificate.",
        "tags": [
          "Certificate Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the certificate."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the certificate."
                  },
                  "sharingMethod": {
                    "type": "string",
                    "enum": [
                      "all",
                      "none",
                      "some"
                    ],
                    "description": "This field can be used only by resellers to indicate who can use the certificate. \"All\" indicates all child customers can use the certificate; \"none\" indicates no child customers can use it. If the value is \"some\", specify the child customers allowed to use the certificate in the <i>shareWith</i> field."
                  },
                  "shareWith": {
                    "type": "array",
                    "description": "If you are a reseller choosing to share the certificate with \"some\" customers, this field indicates the IDs of the customers who can use it.",
                    "uniqueItems": true,
                    "items": {
                      "type": "integer"
                    }
                  },
                  "autoRenew": {
                    "type": "string",
                    "enum": [
                      "Off",
                      "LE"
                    ],
                    "description": "Indicates whether the certificate will be renewed with Let's Encrypt."
                  },
                  "newVersion": {
                    "type": "object",
                    "description": "If this field is present, a new version of the certificate will be created. If the <i>identificationInfo</i> field is not provided, then the information will be copied from the latest version of the certificate.",
                    "properties": {
                      "privateKey": {
                        "type": "string",
                        "description": "If not present, the value will be copied from the latest version of the certificate. Please refer to the description of the <i>privateKey</i> field in the <a href=\"#operation/createCertificate\">Create a certificate API</a> for details about the format."
                      },
                      "certificate": {
                        "type": "string",
                        "description": "If not present, the value will be copied from the latest version of the certificate. Please refer to the description of the <i>certificate</i> field in the <a href=\"#operation/createCertificate\">Create a certificate API</a> for details about the format."
                      },
                      "chainCert": {
                        "type": "string",
                        "description": "This field must be filled in if the <i>privateKey</i> and <i>certificate</i> fields are both omitted. In this case, only the chain certificate will be updated. The chain certificate must be in PEM format."
                      },
                      "identificationInfo": {
                        "title": "certificateIdentificationInfo",
                        "type": "object",
                        "description": "Information submitted when generating a self-signed certificate.",
                        "x-examples": {
                          "example-1": {}
                        },
                        "x-tags": [
                          "Certificate Management"
                        ],
                        "properties": {
                          "country": {
                            "type": "string",
                            "description": "An ISO-3166 country code.",
                            "minLength": 2,
                            "maxLength": 2
                          },
                          "state": {
                            "type": "string",
                            "description": "A state or province."
                          },
                          "city": {
                            "type": "string",
                            "description": "A city."
                          },
                          "company": {
                            "type": "string",
                            "description": "A company name."
                          },
                          "department": {
                            "type": "string",
                            "description": "The department associated with the certificate."
                          },
                          "commonName": {
                            "type": "string",
                            "description": "A common name for the certificate."
                          },
                          "email": {
                            "type": "string",
                            "description": "An email address.",
                            "format": "email"
                          },
                          "subjectAlternativeNames": {
                            "type": "array",
                            "description": "Hostnames that this certificate will serve. Each entry must be a valid hostname such as <i>domain.com</i> or a wildcard hostname beginning with '*' such as <i>*.domain.com</i>.",
                            "example": "domain.com, *.domain.com",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "commonName",
                          "subjectAlternativeNames"
                        ]
                      }
                    }
                  },
                  "forceRenew": {
                    "type": "boolean",
                    "default": false,
                    "description": "A value of <i>true</i> requests the certificate to be auto-renewed as soon as possible instead of waiting for the certificate to expire in 15 days. The value will be set to false after a successful renewal."
                  }
                }
              },
              "examples": {
                "Example of updating with a self signed certificate": {
                  "value": {
                    "name": "testCertificate2019101211910",
                    "newVersion": {
                      "privateKey": "ECC256",
                      "identificationInfo": {
                        "commonName": "domain.com",
                        "country": "US",
                        "city": "NY",
                        "subjectAlternativeNames": [
                          "a.domain.com",
                          "b.domain.com"
                        ],
                        "company": "Company Name",
                        "state": "someState",
                        "department": "IT",
                        "email": "aaa@company.com"
                      },
                      "comments": "a self-signed version",
                      "certificate": "Generate"
                    }
                  }
                },
                "Example of updating who can use a certificate along with the certificate version.": {
                  "value": {
                    "shareWith": [
                      10000010
                    ],
                    "name": "testCertificate201910121237",
                    "description": "certificate description",
                    "sharingMethod": "some",
                    "newVersion": {
                      "privateKey": "y8ufD...g7CQoWu58l/Vs=",
                      "comments": "certificate comments 2",
                      "certificate": "-----BEGIN CERTIFICATE-----\r\nMIIFhDC...NGSpEV+I\r\n-----END CERTIFICATE-----",
                      "chainCert": "-----BEGIN CERTIFICATE-----\r\nMIIF..EZ2AYDP0hL+zWI8=\r\n-----END CERTIFICATE-----\r\n-----BEGIN CERTIFICATE-----\r\nMIIF...gjE\r\n-----END CERTIFICATE-----"
                    }
                  }
                }
              }
            }
          },
          "description": "The request body indicates the fields that will be updated. If a field is omitted, then its value will be unchanged."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "delete": {
        "summary": "Delete a certificate",
        "responses": {
          "204": {
            "description": "This response is returned if the certificate was successfully deleted."
          },
          "404": {
            "description": "The certificate was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidCertId",
                      "message": "The specified certificate ID does not exist."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The certificate cannot be deleted because it is being used in production or staging.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "CertificateInUse",
                      "message": "The certificate cannot be deleted because it is in use on production or staging."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API lets you delete a certificate that is not being used in production or staging.",
        "operationId": "deleteCertificate",
        "tags": [
          "Certificate Management"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/certificates/{certificateID}/csr": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "certificateID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Download the CSR",
        "tags": [
          "Certificate Management"
        ],
        "description": "Obtain the certificate signing request (CSR) information. You can take it to a certificate authority to apply for a certificate. Once you have it, you should update our system using the <a href=\"#operation/updateCertificate\">Update a certificate API</a>.",
        "operationId": "downloadCSR",
        "responses": {
          "200": {
            "description": "The response contains the CSR.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "certificateId": {
                      "type": "string",
                      "description": "ID of the certificate."
                    },
                    "csr": {
                      "type": "string",
                      "description": "The CSR."
                    },
                    "latestVersion": {
                      "type": "integer",
                      "description": "Most recent version of the certifiate.",
                      "minimum": 1
                    },
                    "ownerCustomerId": {
                      "type": "integer",
                      "description": "A reference to the customer that owns the certificate.",
                      "minimum": 1
                    },
                    "dcvFile": {
                      "type": "object",
                      "description": "This field is only returned if the <i>dcv</i> query parameter is specified.",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "description": "A URI that is accessible on your hostnames using the certificate. The file's content will consist of a SHA-256 hash and the domain sectigo.com. Example:\n\n<pre>\na6e96b23f9e2add3f79c2907ded1adc43961b05f6d702758a200a8ec8b4d7115\nsectigo.com\n</pre>"
                        },
                        "expirationTime": {
                          "type": "string",
                          "description": "An RFC 3339 date indicating when the file expires."
                        }
                      },
                      "required": [
                        "uri",
                        "expirationTime"
                      ]
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "certificateId": "7c034044e749c8cdeafe4a64",
                      "csr": "-----BEGIN CERTIFICATE REQUEST-----\nMIIDCTCCAfECAQAwgYgxHTAbBgkqhkiG9w0BCQEWDmFhYUBuaXguY29tLnVhMQsw\nCQYDVQQLEwJRQTEVMBMGA1UEChMMTml4c29sdXRpb25zMQswCQYDVQQHEwJLaDES\nMBAGA1UECBMJc29tZVN0YXRlMQswCQYDVQQGEwJVQTEVMBMGA1UEAxMMbXd0cmlh\nbC5pbmZvMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvzUq0sTrv/iT\nKDzHtnzutsWRjY0uy4ukAWJxzu1zH9qgnydJV//zlLZROiUc03xOz6pcuH4fLI2S\naJEzzzMNEjBqZmuLYdKPkz7XsV91SKepKwtX6jEC531b/Ehs9UDh+u2Dkzpd08y4\nAzOBlK2rkV5fJNAwoZ566XpFgVPqasVNMvVTegbTKKVu8Z65j5YHapsnxQOD8wKo\nwvdAmVeMsqtWn5Ui9pGe24BT3LUsczYX0PV9YQHfbG1aCUYF0+mu1ng41eHc0YJQ\nPQE7Cx4OsVAMkCKkuMfFdENxvsZFeJe2WvjdR+aCcdgylmpdS0CJprcM7ZYm6ggF\nA5XDodu8MQIDAQABoDswOQYJKoZIhvcNAQkOMSwwKjAoBgNVHREEITAfgglhLm5p\neC5jb22CEmIubml4c29sdXRpb25zLmNvbTANBgkqhkiG9w0BAQsFAAOCAQEAoHJD\nuh0jytZCkwVkggYSJKiCS3iF08iuGDuBuBBX51I3Hh1dUeHhd9UGUItmOIPncH+M\nB5rlm/CsXnJTUI/rBX03N3QJkb9DYdNNka5RKiUCVuBKK6CcbnDCEI0aK8WzN+05\n5O0XIF1XqJXosySCZdPXaQSGtycwKYqLF4BDo47TO9R+hWQgzGkSEPA9f+gJxKIQ\nF0dZZWcEXiZAs9cFk1toCaoDPwzS0aAEAThB75OEYpzwvxPlJLePOOZjYdj38gCG\nxQz2t3G4Lfx8fNnpGIFp4jzqR4idqH37L4QTmcWtgi5yIiQpsUz0OpfnWKT1EwA6\nvgQzLTPfTDDxySvd6Q==\n-----END CERTIFICATE REQUEST-----\n"
                    }
                  },
                  "Example of response to query using dcv parameter": {
                    "value": {
                      "certificateId": "8e9ab756d633b1de7a0590c6",
                      "csr": "-----BEGIN CERTIFICATE REQUEST-----\naIICsjCCAZoCAQAwMDELMAkGA1UECBMCQ0ExCzAJBgNVBAYTAlVTMRQwEgYDVQQD\nEwtiaW50ZXN0LmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJqc\ndcK2ZRSNI3FQui3usTfUIJXNHQQPqAigNjJc5XgsU6X4abMlHQSIe6AlbK/ScRrC\n0JziTj6dUsYiWJ4ZpNDF8cjFbrW/1W6f0sdy3OMpIdZuBBglFQiw03ogkqfOkjgq\nzoT+wMazd8jqpHvgyq5yoCQ91e7Hq5Zd0r2TQRwW9Bv15N/4ygFol+DCPY3QUrj2\nyR5nAJaSAVTb48VAt58q6Oog+FVlMkV+RUg9g956Qd8SNdYHS/nWlpdacH54+rl+\nBCvtI+nprAbUhwGxLYHdAuNZ0QVXp6CTw8nkn+i9I+uMkWsJlc141bcbt/lnV99T\nTHmjpcB15+zwTTv7kOMCAwEAAaA9MDsGCSqGSIb3DQEJDjEuMCwwKgYDVR0RBCMw\nIYIPd3d3LmJpbnRlc3QuY29tgg5kbC5iaW50ZXN0LmNvbTANBgkqhkiG9w0BAQsF\nAAOCAQEAhE4AVdeR+ewYW0bde5e2PZqu048T1HMKyNKSvGjck33WoitCZv52UJh5\np4/6laHxHoyegxNG1lvXEQ72SBQ0kUQJ15TIXXYmg1ev3I3ZmS1KsCWrlqdq6Udw\nwhb9CyRjObwcyUgZ+72L7X820o7cULox83eMnWH1HSx/NPxfASBoiqCI9nodKLIw\nqFE9cr3ziOw1yn/1DCo2YsBDm9NbCUArKRM+tbG+wK+9CfYH3g9ZC74u5ghIiDce\nqPamrST/89IZOOUBCaMDnzTmk9IhCOQkgTXeM+001D5EluydEXButhoFjtKe6d4V\nRqYPefPscRExLkjO6KjdKgR2/GCmHg==\n-----END CERTIFICATE REQUEST-----\n",
                      "ownerCustomerId": 1,
                      "latestVersion": 2,
                      "dcvFile": {
                        "uri": "/.well-known/pki-validation/8EAA4C3B692BA43579B00CD30F0E5D7C.txt",
                        "expirationTime": "2020-09-18T20:10:25Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidCertId",
                      "message": "The specified certificate ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "sectigo"
              ]
            },
            "in": "query",
            "name": "dcv",
            "description": "This optional parameter can be used to request a domain control validation (DCV) file. Currently, we support the certificate authority, Sectigo, by specifying \"sectigo\" as the value of the parameter."
          }
        ]
      }
    },
    "/cdn/certificates/{certificateID}/versions/{version}": {
      "parameters": [
        {
          "schema": {
            "type": "integer",
            "minimum": 1
          },
          "name": "version",
          "in": "path",
          "required": true,
          "description": "Version of the certificate."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "certificateID",
          "in": "path",
          "required": true,
          "description": "ID of a certificate."
        }
      ],
      "get": {
        "summary": "Query a certificate version's details",
        "tags": [
          "Certificate Management"
        ],
        "responses": {
          "200": {
            "description": "The response contains details about the version of the certificate.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "The certificate version."
                    },
                    "comments": {
                      "type": "string",
                      "description": "Comments about the certificate version.\n"
                    },
                    "expirationTime": {
                      "type": "string",
                      "description": "An RFC3339 format date indicating when the certificate version expires."
                    },
                    "creationTime": {
                      "type": "string",
                      "description": "An RFC 3339 format date indicating when the certificate version was created."
                    },
                    "subject": {
                      "type": "string",
                      "description": "The certificate subject."
                    },
                    "signatureAlgo": {
                      "type": "string",
                      "description": "The signature algorithm used by the certificate."
                    },
                    "serialNumber": {
                      "type": "string",
                      "description": "The serial number associated with the certificate.\n"
                    },
                    "inProduction": {
                      "type": "boolean",
                      "description": "Indicates whether the certificate version is currently deployed to production."
                    },
                    "inStaging": {
                      "type": "boolean",
                      "description": "Indicates whether the certificate version is currently deployed to staging.\n"
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "certificate fingerprint."
                    },
                    "algorithm": {
                      "type": "string",
                      "description": "The encryption algorithm.\n"
                    },
                    "keyLength": {
                      "type": "integer",
                      "description": "Number of bits used in encryption.\n"
                    },
                    "subjectAlternativeNames": {
                      "type": "array",
                      "description": "List of hostnames served by the certificate. Wildcards are permitted, for example, *.domain.com.\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "chainCertificates": {
                      "type": "array",
                      "description": "Describes the certificate chain.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "subject": {
                            "type": "string",
                            "description": "Subject of the certificate."
                          },
                          "expirationTime": {
                            "type": "string",
                            "description": "RFC 3339 format date indicating when the certificate expires."
                          },
                          "signatureAlgo": {
                            "type": "string",
                            "description": "Algorithm of the certificate."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "version"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "version": 1,
                      "expirationTime": "2019-11-21T23:06:53Z",
                      "creationTime": "2019-11-11T23:06:53Z",
                      "subject": "E=aaa@domaincom,OU=QA,O=MyCompany,L=US,ST=someState,C=UA,CN=new.testdomain.com",
                      "signatureAlgo": "SHA256withRSA",
                      "serialNumber": "16edb4ff86f",
                      "inProduction": false,
                      "inStaging": false,
                      "fingerprint": "7e98f65898cbb5ddb140958a657d875bce49afac",
                      "comments": "a self-signed version",
                      "algorithm": "RSA",
                      "keyLength": 2048,
                      "subjectAlternativeNames": [
                        "a.domain.com",
                        "b.domain.com"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidCertId",
                      "message": "The specified certificate ID does not exist."
                    }
                  },
                  "example-2": {
                    "value": {
                      "code": "InvalidCertVersion",
                      "message": "The specified version 999 of certificate 9fddeb2fea3ed5b52d89d81d does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Obtain details about a certificate version including the expiration date, algorithm and key length, fingerprint, and whether it is deployed in production and staging.",
        "operationId": "queryCertificateVersion",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/validations": {
      "get": {
        "summary": "Query property validation task list",
        "tags": [
          "Property Validation"
        ],
        "responses": {
          "200": {
            "description": "A list of validation tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of validation tasks"
                    },
                    "validations": {
                      "type": "object",
                      "description": "Summarizes validation tasks. Further details about a validation task can be obtained by calling the <a href=\"#operation/queryValidationTask\">Query a property validation task API</a>.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID of the validation task."
                        },
                        "propertyId": {
                          "type": "string",
                          "description": "ID of the property that was validated."
                        },
                        "version": {
                          "type": "integer",
                          "description": "Indicates the version of the property that was validated.",
                          "minimum": 1
                        },
                        "submissionTime": {
                          "type": "string",
                          "description": "An RFC 3339 format string indicating when the validation task was submitted. Example: \"2019-11-12T03:09:26Z\"\n"
                        },
                        "status": {
                          "type": "string",
                          "description": "Indicates the status of the validation task.",
                          "enum": [
                            "waiting",
                            "in progress",
                            "succeeded",
                            "failed"
                          ]
                        },
                        "cacheVersion": {
                          "type": "string",
                          "description": "Identifies the internal cache version on which the property was validated."
                        },
                        "apiRequestId": {
                          "type": "string",
                          "description": "Indicates the associated API request.\n"
                        },
                        "apiAccountId": {
                          "type": "integer",
                          "description": "Refers to an API account that generated the validation task."
                        }
                      },
                      "required": [
                        "id",
                        "propertyId",
                        "version",
                        "submissionTime",
                        "status",
                        "cacheVersion",
                        "apiRequestId"
                      ]
                    }
                  }
                },
                "examples": {
                  "Response containing a subset of all validation tasks": {
                    "value": {
                      "count": 21859,
                      "validations": [
                        {
                          "id": "5dca226ff9e9cc0001df7b31",
                          "propertyId": "1b15ba70abecdbe54c5fdefe",
                          "version": 1,
                          "submissionTime": "2019-11-12T03:09:35Z",
                          "status": "in progress",
                          "cacheVersion": "1.16.1.1.1.10-186",
                          "apiRequestId": "94744d7e563547ee"
                        },
                        {
                          "id": "5dca2266f9e9cc0001df7b2f",
                          "propertyId": "9c3a02c91d0e502351d7eb0e",
                          "version": 1,
                          "submissionTime": "2019-11-12T03:09:26Z",
                          "status": "in progress",
                          "cacheVersion": "1.16.1.1.1.10-186",
                          "apiRequestId": "4d5d8f1ca80a8f55",
                          "apiAccountId": 564
                        },
                        {
                          "id": "5dca2243f9e9cc0001df7b2e",
                          "propertyId": "8911581353a31302a9322d4e",
                          "version": 1,
                          "submissionTime": "2019-11-12T03:08:51Z",
                          "finishTime": "2019-11-12T03:08:59Z",
                          "status": "failed",
                          "cacheVersion": "1.16.1.1.1.10-186",
                          "apiRequestId": "88bee496eac72b7d"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid limit": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be between 1 and 200, inclusive."
                    }
                  },
                  "Invalid offset": {
                    "value": {
                      "code": "InvalidListOffset",
                      "message": "The requested offset exceeds the total number of records."
                    }
                  },
                  "Invalid property version": {
                    "value": {
                      "code": "InvalidPropertyVersion",
                      "message": "The version number must be a positive integer."
                    }
                  },
                  "Invalid property ID": {
                    "value": {
                      "code": "InvalidPropertyId",
                      "message": "An invalid property ID was specified."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "queryPropertyValidationList",
        "description": "Get a list of property validation tasks including the associated property ID, version, submission time, and status. Filter the results using the query parameters.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "propertyId",
            "description": "Return validation tasks associated only with a specific property ID."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "propertyVersion",
            "description": "Return validation tasks only for a particular property version.\n"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": "100"
            },
            "in": "query",
            "name": "limit",
            "description": "Indicates the maximum number of validation tasks to return."
          },
          {
            "schema": {
              "type": "integer",
              "default": "0",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Indicates the index of the first validation task to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "The results will be filtered based on the presence of the value as a validation task ID or in a task name."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "submissionTime",
                "finishTime"
              ],
              "default": "finishTime"
            },
            "in": "query",
            "name": "sortBy",
            "description": "Return results sorted by when the task was submitted (submissionTime) or when the task was completed (finishTime). "
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "in": "query",
            "name": "sortOrder",
            "description": "Return results sorted in ascending (asc) or descending (desc) order.\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "Enter an RFC 3339 format date to return validation tasks which were submitted by this date."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "Enter an RFC 3339 format date to return validation tasks which were submitted no later than this date."
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Create a validation task",
        "tags": [
          "Property Validation"
        ],
        "responses": {
          "201": {
            "description": "Created a validation task.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The Location header contains a URL to the validation task. Example: <code>Location: http://ngapi.cdnetworks.com/cdn/validations/5dca2205f9e9cc0001df7b24</code>",
                "required": true
              }
            }
          },
          "400": {
            "description": "The validation task could not be created. Refer to the response body for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid property ": {
                    "value": {
                      "code": "InvalidPropertyVersion",
                      "message": "The property version specified does not exist."
                    }
                  },
                  "Invalid property version": {
                    "value": {
                      "code": "InvalidPropertyVersion",
                      "message": "The property version specified does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API validates a property version. You must call this API before you can <a href=\"#operation/createDeployment\">deploy the property version</a> to staging or production. Your property will be checked for correct syntax.",
        "operationId": "createValidationTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the validation task."
                  },
                  "propertyId": {
                    "type": "string",
                    "description": "Indicates the property to validate."
                  },
                  "version": {
                    "type": "integer",
                    "description": "Indicates the version of the property to validate."
                  }
                },
                "required": [
                  "propertyId",
                  "version"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "propertyId": "b8ce50a9cb84242c39f07066",
                    "version": "1"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/validations/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of a validation task"
        }
      ],
      "get": {
        "summary": "Query property validation task",
        "tags": [
          "Property Validation"
        ],
        "responses": {
          "200": {
            "description": "Refer to the response body for details about the validation task. It may have succeeded or failed or be in progress, or still being queued to run.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "propertyId": {
                      "type": "string",
                      "description": "ID of the property being validated."
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the property being validated."
                    },
                    "submissionTime": {
                      "type": "string",
                      "description": "An RFC 3339 format string indicating when the task was created. Example: \"2019-11-12T03:06:16Z\""
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates the validation task's status.",
                      "enum": [
                        "waiting",
                        "failed",
                        "succeeded",
                        "in progress"
                      ]
                    },
                    "statusDetails": {
                      "type": "string",
                      "description": "Further information about the task's current status.\n"
                    },
                    "customerId": {
                      "type": "integer",
                      "description": "Refers to the owner of the validation task.\n",
                      "minimum": 1
                    },
                    "apiRequestId": {
                      "type": "string",
                      "description": "Refers to the ID of the associated API request."
                    },
                    "finishTime": {
                      "type": "string",
                      "description": "An RFC 3339 date indicating when the task finished."
                    }
                  },
                  "required": [
                    "propertyId",
                    "version",
                    "submissionTime",
                    "status",
                    "statusDetails",
                    "customerId",
                    "apiRequestId"
                  ]
                },
                "examples": {
                  "A task in the queue": {
                    "value": {
                      "propertyId": "3d88dbec498112c49860076b",
                      "version": 1,
                      "submissionTime": "2019-11-12T03:06:16Z",
                      "status": "waiting",
                      "statusDetails": "queued after 0 tasks",
                      "customerId": 10000021,
                      "apiRequestId": "43e220b980b7f7ed"
                    }
                  },
                  "Failed validation": {
                    "value": {
                      "propertyId": "842083c84209f5ac138ace34",
                      "version": 1,
                      "submissionTime": "2019-11-12T03:10:11Z",
                      "finishTime": "2019-11-12T03:10:19Z",
                      "status": "failed",
                      "statusDetails": "invalid number of arguments in \"expires\" directive in /usr/local/qtl-nginx/conf/../domain_conf/ccve-validation.conf:21",
                      "customerId": 10000021,
                      "apiRequestId": "495e81f2772b525d"
                    }
                  },
                  "Successful validation": {
                    "value": {
                      "propertyId": "9347a2900c0d7a2b3aebf4af",
                      "version": 1,
                      "submissionTime": "2019-11-12T03:09:43Z",
                      "finishTime": "2019-11-12T03:09:48Z",
                      "status": "succeeded",
                      "statusDetails": "[{\"url\":\"http://testdomain-t1573528182678.domain.info\",\"status\":\"succeeded\",\"reason\":\"200\"}]",
                      "customerId": 10000021,
                      "apiRequestId": "a69ae9342c576554"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The validation task was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid validation task ID": {
                    "value": {
                      "code": "InvalidValidationTaskId",
                      "message": "The specified validation task ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "queryValidationTask",
        "description": "This API returns details about a validation task.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/deploymentTasks": {
      "get": {
        "summary": "Query deployment task list",
        "tags": [
          "Deployment Management"
        ],
        "responses": {
          "200": {
            "description": "A list of deployment tasks is returned in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Contains deployment task list.",
                  "properties": {
                    "deploy": {
                      "type": "array",
                      "description": "Contains a list of deployment task summaries.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID representing the deployment task. You can obtain more information about a task by calling the <a href=\"#operation/queryDeploymentTask\">Query deployment task API</a>."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the deployment task."
                          },
                          "submissionTime": {
                            "type": "string",
                            "description": "An RFC 3339 format date indicates when the task was submitted."
                          },
                          "finishTime": {
                            "type": "string",
                            "description": "An RFC 3339 date indicates when the task completed."
                          },
                          "status": {
                            "type": "string",
                            "description": "Indicates the status of the deployment task.",
                            "enum": [
                              "waiting",
                              "in progress",
                              "failed",
                              "succeeded"
                            ]
                          },
                          "target": {
                            "type": "string",
                            "description": "Indicates where the deployment will go to.",
                            "enum": [
                              "staging",
                              "production"
                            ]
                          },
                          "apiRequestId": {
                            "type": "string",
                            "description": "An internal ID indicating the associated API call."
                          }
                        },
                        "required": [
                          "id",
                          "status",
                          "target",
                          "apiRequestId"
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Total number of deployment tasks."
                    }
                  },
                  "required": [
                    "count"
                  ]
                },
                "examples": {
                  "Example of one deployment task returned out of a list of 10.": {
                    "value": {
                      "deploy": [
                        {
                          "id": "094e1ecd-a2f3-425e-ac1f-c1d4fac8b686",
                          "name": "DeploymentName_1573693584573",
                          "submissionTime": "2019-11-14T01:06:25Z",
                          "finishTime": "2019-11-14T01:09:09Z",
                          "status": "succeeded",
                          "target": "production",
                          "apiRequestId": "43ee8bf183891802"
                        }
                      ],
                      "count": 10
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The API call was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid target": {
                    "value": {
                      "code": "InvalidTarget",
                      "message": "An invalid target was specified. It must be either 'staging' or 'production' or left empty."
                    }
                  },
                  "Invalid list limit": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be an integer."
                    }
                  },
                  "Invalid start date": {
                    "value": {
                      "code": "InvalidStartDate",
                      "message": "Invalid parameter 'startdate'. '2020-09-20T00:00:00Za' is not a valid RFC3339 timestamp in UTC. The timestamp should be in \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get a summary of deployment tasks. Filter results using the query parameters. If you specify more than one query parameter, only the tasks meeting all criteria will be returned.",
        "operationId": "queryDeploymentTaskList",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": "0",
              "exclusiveMaximum": true
            },
            "in": "query",
            "name": "offset",
            "description": "Index of the first task to return. "
          },
          {
            "schema": {
              "type": "number",
              "default": "100",
              "maximum": 200
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of tasks to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "propertyId",
            "description": "Only return deployment tasks related to this property."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "certificateId",
            "description": "Only return deployment tasks related to this certificate."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "staging",
                "production"
              ]
            },
            "in": "query",
            "name": "target",
            "description": "Return deployment tasks to a particular environment. By default, all tasks are returned."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "Filter based on text in the deployment name or in a property's hostname."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "taskIds",
            "description": "A comma-separated list of task IDs indicating which ones to return."
          },
          {
            "schema": {
              "type": "string",
              "default": "finishTime",
              "enum": [
                "submissionTime",
                "finishTime"
              ]
            },
            "in": "query",
            "name": "sortBy",
            "description": "Return results sorted by this value."
          },
          {
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "sortOrder",
            "description": "Return results in this order."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "Enter an RFC 3339 format date to return deployments which were submitted by this date."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "Enter an RFC 3339 format date to return deployments which were submitted no later than this date."
          }
        ]
      },
      "post": {
        "summary": "Create a deployment task",
        "tags": [
          "Deployment Management"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The Location header's value will be the URL of the new deployment task.  Example: <code>Location: http://ngapi.cdnetworks.com/cdn/deploymentTasks/ac8e3085-ef92-4c12-ab1b-19b18ac9383c</code>"
              }
            }
          },
          "400": {
            "description": "The request was invalid. Check the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid property": {
                    "value": {
                      "code": "InvalidPropertyId",
                      "message": "An invalid property ID was specified."
                    }
                  },
                  "Invalid action": {
                    "value": {
                      "code": "InvalidAction",
                      "message": "A deployment action is invalid. It must be deploy_property, remove_property, deploy_cert, or remove_cert."
                    }
                  },
                  "Property with expired certificate": {
                    "value": {
                      "code": "CertificateExpired",
                      "message": "Certificate is expired. Use request header 'Check-Certificate: no' to bypass cert expiration check."
                    }
                  },
                  "Invalid property version": {
                    "value": {
                      "code": "InvalidPropertyVersion",
                      "message": "The specified version 999 or property 1c2a0ce09612e9988c345dff does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a deployment task to deploy your property or certificate to the staging or production environments or to remove the property or certificate. The staging environment allows you to test your property to ensure correct behavior before you make it available to end users. Refer to the <a href=\"#operation/getStagingServers\">Query list of staging servers API</a> for more information.",
        "operationId": "createDeployment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the deployment task."
                  },
                  "target": {
                    "type": "string",
                    "enum": [
                      "staging",
                      "production"
                    ],
                    "description": "Indicates whether to deploy to staging or production."
                  },
                  "actions": {
                    "title": "deploymentActions",
                    "type": "array",
                    "description": "This array contains all the actions related to a deployment. They can include deployment and removal of properties and certificates to the staging or production environments.",
                    "x-examples": {
                      "example-1": [
                        {
                          "action": "deploy_property",
                          "propertyId": "8f551d008689dc22d3bb980b",
                          "version": "1"
                        },
                        {
                          "certificateId": "61c0dcc92ef4ea6a9ff8c09f",
                          "action": "deploy_cert",
                          "version": "1"
                        }
                      ]
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "description": "Describe an action to take. You can deploy a property, remove a property, deploy a certificate, or remove a certificate.",
                          "enum": [
                            "deploy_property",
                            "remove_property",
                            "deploy_cert",
                            "remove_cert"
                          ]
                        },
                        "propertyId": {
                          "type": "string",
                          "description": "ID of the property to deploy or remove from the staging or production environment."
                        },
                        "certificateId": {
                          "type": "string",
                          "description": "Indicates the certificate to deploy or remove from the staging or production environment."
                        },
                        "version": {
                          "type": "string",
                          "description": "Indicates the version of the certificate or property to deploy or remove."
                        }
                      }
                    },
                    "x-tags": [
                      "Deployment Management"
                    ]
                  }
                },
                "required": [
                  "target"
                ]
              },
              "examples": {
                "Deploy a property to production": {
                  "value": {
                    "name": "DeploymentName_1573690803000",
                    "target": "production",
                    "actions": [
                      {
                        "propertyId": "5bc3a494aceedd9073a7daa0",
                        "version": "1",
                        "action": "deploy_property"
                      }
                    ]
                  }
                },
                "Deploy a property and a certificate to production": {
                  "value": {
                    "target": "production",
                    "actions": [
                      {
                        "propertyId": "ee3205accefa315502509f39",
                        "version": "1",
                        "action": "deploy_property"
                      },
                      {
                        "certificateId": "592afa9f8203e214a4b8e418",
                        "version": "1",
                        "action": "deploy_cert"
                      }
                    ]
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "target": {
                    "type": "string",
                    "enum": [
                      "production",
                      "staging"
                    ],
                    "description": "Indicates where to do the deployment."
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Describes what to deploy",
                      "properties": {
                        "propertyId": {
                          "type": "string",
                          "description": "This is required when deploying a property version."
                        },
                        "version": {
                          "type": "string",
                          "description": "Indicates the version of the property or certificate to deploy."
                        }
                      }
                    }
                  }
                },
                "required": [
                  "target"
                ]
              },
              "examples": {
                "Deploy one property": {
                  "value": {
                    "name": "DeploymentName_1573692757445",
                    "target": "production",
                    "actions": [
                      {
                        "propertyId": "c994bfffe750b661069061d1",
                        "version": "1",
                        "action": "deploy_property"
                      }
                    ]
                  }
                },
                "Deploy a property and a certificate": {
                  "value": {
                    "target": "production",
                    "actions": [
                      {
                        "propertyId": "ee3205accefa315502509f39",
                        "version": "1",
                        "action": "deploy_property"
                      },
                      {
                        "certificateId": "592afa9f8203e214a4b8e418",
                        "version": "1",
                        "action": "deploy_cert"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "Identifies the properties and certificates to deploy."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "parameters": []
    },
    "/cdn/deploymentTasks/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the deployment task."
        }
      ],
      "get": {
        "summary": "Query deployment task",
        "tags": [
          "Deployment Management"
        ],
        "responses": {
          "200": {
            "description": "The response body contains details about the deployment task.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the deployment task."
                    },
                    "submissionTime": {
                      "type": "string",
                      "description": "RFC 3339 date indicating when the task was created."
                    },
                    "actions": {
                      "title": "deploymentActions",
                      "type": "array",
                      "description": "This array contains all the actions related to a deployment. They can include deployment and removal of properties and certificates to the staging or production environments.",
                      "x-examples": {
                        "example-1": [
                          {
                            "action": "deploy_property",
                            "propertyId": "8f551d008689dc22d3bb980b",
                            "version": "1"
                          },
                          {
                            "certificateId": "61c0dcc92ef4ea6a9ff8c09f",
                            "action": "deploy_cert",
                            "version": "1"
                          }
                        ]
                      },
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string",
                            "description": "Describe an action to take. You can deploy a property, remove a property, deploy a certificate, or remove a certificate.",
                            "enum": [
                              "deploy_property",
                              "remove_property",
                              "deploy_cert",
                              "remove_cert"
                            ]
                          },
                          "propertyId": {
                            "type": "string",
                            "description": "ID of the property to deploy or remove from the staging or production environment."
                          },
                          "certificateId": {
                            "type": "string",
                            "description": "Indicates the certificate to deploy or remove from the staging or production environment."
                          },
                          "version": {
                            "type": "string",
                            "description": "Indicates the version of the certificate or property to deploy or remove."
                          }
                        }
                      },
                      "x-tags": [
                        "Deployment Management"
                      ]
                    },
                    "target": {
                      "type": "string",
                      "enum": [
                        "staging",
                        "production"
                      ],
                      "description": "Indicates the environment affected by the deployment."
                    },
                    "finishTime": {
                      "type": "string",
                      "description": "RFC 3339 date indicating when the task completed."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "waiting",
                        "in progress",
                        "failed",
                        "succeeded"
                      ],
                      "description": "Indicates the status of the deployment task.\n"
                    },
                    "statusDetails": {
                      "type": "string",
                      "description": "Additional information about the status of the deployment task.\n"
                    },
                    "apiRequestId": {
                      "type": "string",
                      "description": "ID of the API call to create the deployment task.\n"
                    },
                    "apiAccountId": {
                      "type": "string",
                      "description": "ID of the API account that created the deployment task."
                    },
                    "customerId": {
                      "type": "integer",
                      "description": "ID of the customer that created the deployment task.\n",
                      "minimum": 1
                    }
                  },
                  "required": [
                    "submissionTime",
                    "target"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "submissionTime": "2019-11-14T01:20:22Z",
                      "actions": [
                        {
                          "certificateId": "61c0dcc92ef4ea6a9ff8c09f",
                          "action": "deploy_cert",
                          "version": "1"
                        }
                      ],
                      "target": "production",
                      "finishTime": "2019-11-14T01:24:18Z",
                      "status": "succeeded",
                      "apiRequestId": "47636a8908b0f618",
                      "customerId": 10000021,
                      "statusDetails": "Task has successfully finished"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "This user is not allowed to perform this request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid deployment task": {
                    "value": {
                      "code": "InvalidDeploymentTaskId",
                      "message": "The specified deployment task ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "queryDeploymentTask",
        "description": "Get details about a deployment task including the associated actions, when it was submitted, its status, and additional details if the deployment failed.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/stagingServers": {
      "get": {
        "summary": "Query list of staging servers",
        "tags": [
          "Deployment Management"
        ],
        "responses": {
          "200": {
            "description": "A list of staging servers is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stagingServers": {
                      "type": "array",
                      "description": "A list of staging servers.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ip": {
                            "type": "string",
                            "description": "an IP address of a staging server.\n"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "stagingServers": [
                        {
                          "ip": "163.171.230.47"
                        },
                        {
                          "ip": "163.171.228.89"
                        },
                        {
                          "ip": "163.171.233.53"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API returns a list of staging servers. Use these to test your deployments to staging before you deploy to production. (You can also get the IP addresses using this command on a Linux/Unix based system:  <code>dig staging.qtlgslb.com</code>).\n\nUse one of the following methods to test a property deployed to staging:\n\n<ol>\n<li>Modify your DNS server's CNAME record to point the property's hostname to staging.qtlgslb.com.</li>\n<li>Modify your hosts file (/etc/hosts on a Unix or Linux based system) to point your property's hostname to one of the staging servers' IP addresses.</li>\n<li>Use the curl utility's --resolve option to map the property's hostname to one of the staging servers' IP addresses.</li></ol>\n\nAlthough we do not expect the IP addresses to change often, they may change without notice. If you use options 2 or 3 above, you should periodically check if the IP address is still valid using this API.",
        "operationId": "getStagingServers",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/hostnames": {
      "get": {
        "summary": "Get a list of hostnames that have been deployed",
        "tags": [
          "Hostnames"
        ],
        "responses": {
          "200": {
            "description": "The response contains a list of hostnames that have been deployed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Summarizes the hostnames that have been deployed.",
                  "properties": {
                    "hostnames": {
                      "type": "array",
                      "items": {
                        "title": "hostnamesummary",
                        "type": "object",
                        "x-examples": {
                          "example-1": {
                            "hostname": "2.com",
                            "propertyInProduction": null,
                            "propertyInStaging": {
                              "propertyId": "5cada91cd9dd84000130da50",
                              "version": 2
                            }
                          }
                        },
                        "x-tags": [
                          "Deployment Management"
                        ],
                        "description": "This object summarizes a hostname that has been deployed.",
                        "properties": {
                          "hostname": {
                            "type": "string",
                            "format": "hostname",
                            "description": "A hostname that has been deployed to production or staging."
                          },
                          "propertyInProduction": {
                            "type": "object",
                            "description": "Describes the property deployed to production. It can be 'null' if the property is not deployed to production.",
                            "properties": {
                              "propertyId": {
                                "type": "string",
                                "description": "ID of property deployed to production."
                              },
                              "version": {
                                "type": "integer",
                                "description": "Property version."
                              },
                              "certificateId": {
                                "type": "string",
                                "description": "ID of certificate deployed to production."
                              }
                            }
                          },
                          "propertyInStaging": {
                            "type": "object",
                            "description": "Describes the property deployed to staging. It can be 'null' if the property is not deployed to staging.",
                            "properties": {
                              "propertyId": {
                                "type": "string",
                                "description": "ID of property deployed to staging."
                              },
                              "version": {
                                "type": "integer",
                                "description": "Version of property deployed to staging."
                              },
                              "certificateId": {
                                "type": "string",
                                "description": "ID of certificate deployed to staging."
                              }
                            }
                          }
                        },
                        "required": [
                          "hostname"
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Number of hostnames."
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "count": 2,
                      "hostnames": [
                        {
                          "hostname": "domain.com",
                          "propertyInProduction": null,
                          "propertyInStaging": {
                            "propertyId": "5cada91cd9dd84000130da50",
                            "version": 2
                          }
                        },
                        {
                          "hostname": "abc.domain.com",
                          "propertyInProduction": {
                            "propertyId": "5cb667af05208e0001394be4",
                            "version": 1
                          },
                          "propertyInStaging": {
                            "propertyId": "5cf05122fbe79a0001bcf01f",
                            "version": 1
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid limit": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be between 1 and 200, inclusive."
                    }
                  },
                  "Invalid list offset": {
                    "value": {
                      "code": "InvalidListOffset",
                      "message": "The offset must be a valid non-negative integer."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get a list of hostnames that have been deployed to production or staging.",
        "operationId": "listhostnames",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "default": "0",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Index of the first hostname to return. Defaults to 0."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": "100"
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of hostnames to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "parameters": []
    },
    "/cdn/hostnames/{hostname}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "hostname",
          "in": "path",
          "required": true,
          "description": "Hostname to fetch information about."
        }
      ],
      "get": {
        "summary": "Gets information about a specific hostname",
        "tags": [
          "Hostnames"
        ],
        "responses": {
          "200": {
            "description": "The response contains information about the version of the associated property deployed to production and staging. If the hostname does not exist, the fields will be null.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "hostnamesummary",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "hostname": "2.com",
                      "propertyInProduction": null,
                      "propertyInStaging": {
                        "propertyId": "5cada91cd9dd84000130da50",
                        "version": 2
                      }
                    }
                  },
                  "x-tags": [
                    "Deployment Management"
                  ],
                  "description": "This object summarizes a hostname that has been deployed.",
                  "properties": {
                    "hostname": {
                      "type": "string",
                      "format": "hostname",
                      "description": "A hostname that has been deployed to production or staging."
                    },
                    "propertyInProduction": {
                      "type": "object",
                      "description": "Describes the property deployed to production. It can be 'null' if the property is not deployed to production.",
                      "properties": {
                        "propertyId": {
                          "type": "string",
                          "description": "ID of property deployed to production."
                        },
                        "version": {
                          "type": "integer",
                          "description": "Property version."
                        },
                        "certificateId": {
                          "type": "string",
                          "description": "ID of certificate deployed to production."
                        }
                      }
                    },
                    "propertyInStaging": {
                      "type": "object",
                      "description": "Describes the property deployed to staging. It can be 'null' if the property is not deployed to staging.",
                      "properties": {
                        "propertyId": {
                          "type": "string",
                          "description": "ID of property deployed to staging."
                        },
                        "version": {
                          "type": "integer",
                          "description": "Version of property deployed to staging."
                        },
                        "certificateId": {
                          "type": "string",
                          "description": "ID of certificate deployed to staging."
                        }
                      }
                    }
                  },
                  "required": [
                    "hostname"
                  ]
                },
                "examples": {
                  "Hostname of property deployed to both production and staging.": {
                    "value": {
                      "hostname": "domain.com",
                      "propertyInProduction": {
                        "propertyId": "5cb667af05208e0001394be4",
                        "version": 1
                      },
                      "propertyInStaging": {
                        "propertyId": "5cf05122fbe79a0001bcf01f",
                        "version": 1
                      }
                    }
                  },
                  "Invalid hostname": {
                    "value": {
                      "hostname": "akfjafdasabc.com",
                      "propertyInProduction": null,
                      "propertyInStaging": null
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API returns information about a specific hostname deployed to production or staging.",
        "operationId": "queryOneHostname",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/hostnames/historical": {
      "get": {
        "summary": "Get historical information about hostnames",
        "tags": [
          "Hostnames"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of historical hostnames. This may be larger than number actually returned."
                    },
                    "hostnames": {
                      "type": "array",
                      "description": "List of hostnames that were deployed during the timeframe.",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "count"
                  ]
                },
                "examples": {
                  "Hostnames found": {
                    "value": {
                      "count": 5,
                      "hostnames": [
                        "*.an.domain.info",
                        "*.gs.domain.info",
                        "1productionendtoendpurgecachekeyasvariable.domain.info",
                        "85anv.test.com",
                        "adwll-rkr.29pqy-qdjogx-72jaf.domain.info"
                      ]
                    }
                  },
                  "No hostnames": {
                    "value": {
                      "count": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. The response body includes details about the error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid list limit": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be between 1 and 10000, inclusive."
                    }
                  },
                  "Invalid date specified": {
                    "value": {
                      "code": "InvalidDate",
                      "message": "Invalid parameter 'enddate'. '2019-10-30-00:03:07Z' is not a valid RFC3339 timestamp in UTC. The timestamp should be in \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format."
                    }
                  },
                  "Invalid list limit ": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be an integer."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get a list of hostnames that were successfully <a href=\"#tag/Deployment-Management\">deployed</a> to production during a particular timeframe.",
        "operationId": "getHistoricalHostnames",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "Beginning of the time period in RFC 3339 format. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> By default, the value is when you began using CDN360."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "End of the time period in RFC 3339 format. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> The default is the current time."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "Filter by looking up the beginning portion of a hostname."
          },
          {
            "schema": {
              "type": "integer",
              "default": "0",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Index of the first hostname to return."
          },
          {
            "schema": {
              "type": "integer",
              "default": "100",
              "maximum": 200,
              "minimum": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of hostnames to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/report/vol": {
      "post": {
        "summary": "Get edge traffic volume",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "reportResponse",
                  "type": "object",
                  "description": "Contains data returned by a report.",
                  "x-examples": {
                    "example-1": {
                      "dataName": "edge response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-10-30T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-10-31T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-01T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-02T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-03T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  },
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "description": "Unit of measurement. This will depend on the report API."
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "The data points.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "An RFC 3339 format date representing the beginning of a time interval. It is always in <b>UTC</b> time. For example:  <code>\"timestamp\": \"2019-10-29T01:00:00Z\"</code>"
                          },
                          "data": {
                            "type": "number",
                            "description": "A value at that timestamp. Refer to the <i>dataUnit</i> field for the unit of measurement."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "dataName"
                  ],
                  "x-tags": [
                    "Reports"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "edge response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-10-30T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-10-31T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-01T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-02T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-03T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid protocol": {
                    "value": {
                      "code": "InvalidProtocol",
                      "message": "Invalid parameter 'protocol': 'invalidProtocol'. The protocol type must be 'http', 'https' or 'all'."
                    }
                  },
                  "Invalid hostnames": {
                    "value": {
                      "code": "InvalidHostnames",
                      "message": "Duplicate hostname(s) 'domain.info'."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span of 'daily' report must be no more than 366 days."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get the edge traffic volume in megabytes for a time period. Query parameters let you specify the time period and protocol. Filter the results further by passing a <i>filters</i> object in the request. This report's data has a latency of less than two minutes.\n\nNote: The overhead of TCP, IP, and MAC headers is not included in this API's results. We will add 4.56% (66 bytes of overhead per 1448 bytes of payload) to generate the \"billing volume\" on your invoice.\n",
        "operationId": "getEdgeTrafficVolume",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfilters",
                "type": "object",
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "x-examples": {
                  "Filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                },
                "x-tags": [
                  "Reports"
                ],
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "serverGroups": {
                        "type": "array",
                        "enum": [
                          "standard",
                          "premium",
                          "premium+",
                          "ultra"
                        ],
                        "description": "Indicates one or more server groups (standard, premium, premium+, or ultra).",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Return data for a specific hostname only": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "endtoendsds.domain.info"
                      ]
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "title": "reportfilters",
                "type": "object",
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "x-examples": {
                  "Filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                },
                "x-tags": [
                  "Reports"
                ],
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "serverGroups": {
                        "type": "array",
                        "enum": [
                          "standard",
                          "premium",
                          "premium+",
                          "ultra"
                        ],
                        "description": "Indicates one or more server groups (standard, premium, premium+, or ultra).",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "endtoendsds.domain.info"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames are included."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fiveminutes",
                "hourly",
                "daily",
                "monthly"
              ]
            },
            "in": "query",
            "name": "type",
            "required": true,
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14. For example, <code>type=daily+8</code> means the day as defined in UTC+8 time."
          },
          {
            "schema": {
              "type": "string",
              "default": "all",
              "maxLength": 5,
              "enum": [
                "http",
                "https",
                "all"
              ],
              "minLength": 0
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          },
          {
            "schema": {
              "type": "string",
              "default": "self-only",
              "enum": [
                "self-only",
                "children-only",
                "self+children"
              ]
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/report/volOrigin": {
      "post": {
        "summary": "Get origin traffic volume",
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "reportResponse",
                  "type": "object",
                  "description": "Contains data returned by a report.",
                  "x-examples": {
                    "example-1": {
                      "dataName": "edge response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-10-30T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-10-31T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-01T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-02T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-03T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  },
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "description": "Unit of measurement. This will depend on the report API."
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "The data points.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "An RFC 3339 format date representing the beginning of a time interval. It is always in <b>UTC</b> time. For example:  <code>\"timestamp\": \"2019-10-29T01:00:00Z\"</code>"
                          },
                          "data": {
                            "type": "number",
                            "description": "A value at that timestamp. Refer to the <i>dataUnit</i> field for the unit of measurement."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "dataName"
                  ],
                  "x-tags": [
                    "Reports"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "origin response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-15T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-16T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-17T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-18T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-19T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid type": {
                    "value": {
                      "code": "InvalidType",
                      "message": "Invalid parameter 'type': 'invalidReportType'. The report type must be 'fiveminutes', 'hourly', 'daily'(with optional timezone) or 'monthly'(with optional timezone)."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span of 'daily' report must be no more than 366 days."
                    }
                  },
                  "Invalid hostnames": {
                    "value": {
                      "code": "InvalidHostnames",
                      "message": "Invalid hostname(s): 'sfasdfsdfasdfasdf'."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getOriginTrafficVolume",
        "description": "Gets the origin traffic volume in megabytes for a time period. Query parameters let you specify the time period and protocol. Filter the results further by passing a <i>filters</i> object in the request. This report's data has a latency of less than two minutes.\n\nNote: The overhead of TCP, IP, and MAC headers is not included in this API's results.",
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfilters",
                "type": "object",
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "x-examples": {
                  "Filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                },
                "x-tags": [
                  "Reports"
                ],
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "serverGroups": {
                        "type": "array",
                        "enum": [
                          "standard",
                          "premium",
                          "premium+",
                          "ultra"
                        ],
                        "description": "Indicates one or more server groups (standard, premium, premium+, or ultra).",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Return data for a specific hostname only": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "endtoendsds.domain.info"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames will be included."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fiveminutes",
                "hourly",
                "daily",
                "monthly"
              ]
            },
            "in": "query",
            "name": "type",
            "required": true,
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14. For example, <code>type=daily+8</code> means the day as defined in UTC+8 time."
          },
          {
            "schema": {
              "type": "string",
              "default": "all",
              "maxLength": 5,
              "enum": [
                "http",
                "https",
                "all"
              ],
              "minLength": 0
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          },
          {
            "schema": {
              "type": "string",
              "default": "self-only",
              "enum": [
                "self-only",
                "children-only",
                "self+children"
              ]
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/report/req": {
      "post": {
        "summary": "Get edge requests",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "reportfiltershostnamesonly",
                  "type": "object",
                  "x-tags": [
                    "Reports"
                  ],
                  "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                  "properties": {
                    "filters": {
                      "type": "object",
                      "properties": {
                        "hostnames": {
                          "type": "array",
                          "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "filter by a specific hostname": {
                      "filters": {
                        "hostnames": [
                          "domain.info"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "edge requests",
                      "dataUnit": "counts",
                      "dataSeries": [
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 220
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 209
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 208
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 104
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 327
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 198
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 198
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 396
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 199
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 198
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 207
                        },
                        {
                          "timestamp": "2019-11-15T00:00:00Z",
                          "data": 161
                        },
                        {
                          "timestamp": "2019-11-16T00:00:00Z",
                          "data": 174
                        },
                        {
                          "timestamp": "2019-11-17T00:00:00Z",
                          "data": 175
                        },
                        {
                          "timestamp": "2019-11-18T00:00:00Z",
                          "data": 376
                        },
                        {
                          "timestamp": "2019-11-19T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid protocol": {
                    "value": {
                      "code": "InvalidProtocol",
                      "message": "Invalid parameter 'protocol': 'invalidProtocol'. The protocol type must be 'http', 'https' or 'all'."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span of 'fiveminutes' report must be no more than 31 days."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Gets the number of requests to CDN360 edge servers for a time period. Query parameters let you specify the time period and protocol. Filter the results further by passing a <i>filters</i> object in the request. This report's data has a latency of less than two minutes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfiltershostnamesonly",
                "type": "object",
                "x-tags": [
                  "Reports"
                ],
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Return data for a specific hostname only": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "endtoendsds.domain.info"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames are included."
        },
        "operationId": "getEdgeRequests",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fiveminutes",
                "hourly",
                "daily",
                "monthly"
              ]
            },
            "in": "query",
            "name": "type",
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14.  For example, <code>type=daily+8</code> means the day as defined in UTC+8 time.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "default": "all",
              "maxLength": 5,
              "enum": [
                "http",
                "https",
                "all"
              ],
              "minLength": 0
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          },
          {
            "schema": {
              "type": "string",
              "default": "self-only",
              "enum": [
                "self-only",
                "children-only",
                "self+children"
              ]
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/report/bandwidth": {
      "post": {
        "summary": "Get edge bandwidth ",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "reportResponse",
                  "type": "object",
                  "description": "Contains data returned by a report.",
                  "x-examples": {
                    "example-1": {
                      "dataName": "edge response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-10-30T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-10-31T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-01T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-02T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-03T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  },
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "description": "Unit of measurement. This will depend on the report API."
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "The data points.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "An RFC 3339 format date representing the beginning of a time interval. It is always in <b>UTC</b> time. For example:  <code>\"timestamp\": \"2019-10-29T01:00:00Z\"</code>"
                          },
                          "data": {
                            "type": "number",
                            "description": "A value at that timestamp. Refer to the <i>dataUnit</i> field for the unit of measurement."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "dataName"
                  ],
                  "x-tags": [
                    "Reports"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "edge response bandwidth",
                      "dataUnit": "megabps",
                      "dataSeries": [
                        {
                          "timestamp": "2019-11-03T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-04T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-15T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-16T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-17T12:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-18T12:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid type": {
                    "value": {
                      "code": "InvalidType",
                      "message": "Invalid parameter 'type': 'invalidReportType'. The report type must be 'fiveminutes', 'hourly', 'daily'(with optional timezone) or 'monthly'(with optional timezone)."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span of 'monthly' report must be no more than 366 days."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getEdgeBandwidth",
        "description": "Get the bandwidth in Mbps to CDN360 edge servers for a time period. Query parameters let you specify the time period and protocol. Filter the results further by passing a <i>filters</i> object in the request. This report's data has a latency of less than two minutes.\n\nNote: The overhead of TCP, IP, and MAC headers is not included in this API's results. We will add 4.56% (66 bytes of overhead per 1448 bytes of payload) to generate the \"billing volume\" on your invoice.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfilters",
                "type": "object",
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "x-examples": {
                  "Filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                },
                "x-tags": [
                  "Reports"
                ],
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "serverGroups": {
                        "type": "array",
                        "enum": [
                          "standard",
                          "premium",
                          "premium+",
                          "ultra"
                        ],
                        "description": "Indicates one or more server groups (standard, premium, premium+, or ultra).",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames will be included."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fiveminutes",
                "hourly",
                "daily",
                "monthly"
              ]
            },
            "in": "query",
            "name": "type",
            "required": true,
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14.  For example, <code>type=daily+8</code>  means the day as defined in UTC+8 time."
          },
          {
            "schema": {
              "type": "string",
              "default": "all",
              "maxLength": 5,
              "enum": [
                "http",
                "https",
                "all"
              ],
              "minLength": 0
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          },
          {
            "schema": {
              "type": "string",
              "default": "self-only",
              "enum": [
                "self-only",
                "children-only",
                "self+children"
              ]
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/report/statusCodeDetails": {
      "post": {
        "summary": "Get edge status code details",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "statuscodedetails",
                  "type": "object",
                  "x-tags": [
                    "Reports"
                  ],
                  "description": "This object is returned by status code details report APIs.",
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "description": "Unit of measurement.  For status code APIs, it will be \"counts\", which indicates the number of times a status code appears.",
                      "enum": [
                        "counts"
                      ]
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "Contains information about status codes at different points in time.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "RFC 3339 format date indicate the beginning of an interval."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "statusCode": {
                                  "type": "string",
                                  "description": "Indicates an HTTP status code, for example, \"200\"."
                                },
                                "data": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "description": "Indicates the number of times the status code was returned."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "dataName"
                  ],
                  "x-examples": {
                    "example-1": {
                      "dataName": "edge status code",
                      "dataUnit": "counts",
                      "dataSeries": [
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 219
                            },
                            {
                              "statusCode": "404",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 209
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 206
                            },
                            {
                              "statusCode": "404",
                              "data": 1
                            },
                            {
                              "statusCode": "504",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 104
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 320
                            },
                            {
                              "statusCode": "404",
                              "data": 7
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 198
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 198
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 396
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 199
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 198
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 204
                            },
                            {
                              "statusCode": "502",
                              "data": 2
                            },
                            {
                              "statusCode": "504",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-15T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 161
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-16T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 174
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-17T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 175
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-18T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 376
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "edge status code",
                      "dataUnit": "counts",
                      "dataSeries": [
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 219
                            },
                            {
                              "statusCode": "404",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 209
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 206
                            },
                            {
                              "statusCode": "404",
                              "data": 1
                            },
                            {
                              "statusCode": "504",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 104
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 320
                            },
                            {
                              "statusCode": "404",
                              "data": 7
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 198
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 198
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 396
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 199
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 198
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 204
                            },
                            {
                              "statusCode": "502",
                              "data": 2
                            },
                            {
                              "statusCode": "504",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-15T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 161
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-16T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 174
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-17T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 175
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-18T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 376
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid type": {
                    "value": {
                      "code": "InvalidType",
                      "message": "Invalid parameter 'type': 'invalidReportType'. The report type must be 'fiveminutes', 'hourly', 'daily'(with optional timezone) or 'monthly'(with optional timezone)."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span of 'hourly' report must be no more than 92 days."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getEdgeStatusCodeDetails",
        "description": "Gets a summary of HTTP status codes returned in requests to CDN360 edge servers for a time period. Query parameters let you specify the time period and protocol. Filter the results further by passing a <i>filters</i> object in the request. This report's data has a latency of up to thirty minutes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfiltershostnamesonly",
                "type": "object",
                "x-tags": [
                  "Reports"
                ],
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Return data for a specific hostname only": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames are included."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fiveminutes",
                "hourly",
                "daily",
                "monthly"
              ]
            },
            "in": "query",
            "name": "type",
            "required": true,
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14.  For example, <code>type=daily+8</code>  means the day as defined in UTC+8 time."
          },
          {
            "schema": {
              "type": "string",
              "default": "all",
              "maxLength": 5,
              "enum": [
                "http",
                "https",
                "all"
              ],
              "minLength": 0
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          },
          {
            "schema": {
              "type": "string",
              "default": "self-only",
              "enum": [
                "self-only",
                "children-only",
                "self+children"
              ]
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/report/reqOrigin": {
      "post": {
        "summary": "Get the number of requests to origin",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "reportResponse",
                  "type": "object",
                  "description": "Contains data returned by a report.",
                  "x-examples": {
                    "example-1": {
                      "dataName": "edge response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-10-30T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-10-31T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-01T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-02T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-03T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  },
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "description": "Unit of measurement. This will depend on the report API."
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "The data points.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "An RFC 3339 format date representing the beginning of a time interval. It is always in <b>UTC</b> time. For example:  <code>\"timestamp\": \"2019-10-29T01:00:00Z\"</code>"
                          },
                          "data": {
                            "type": "number",
                            "description": "A value at that timestamp. Refer to the <i>dataUnit</i> field for the unit of measurement."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "dataName"
                  ],
                  "x-tags": [
                    "Reports"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "origin requests",
                      "dataUnit": "counts",
                      "dataSeries": [
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 128
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 123
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 126
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 38
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 177
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 121
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 121
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 242
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 122
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 121
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 126
                        },
                        {
                          "timestamp": "2019-11-15T00:00:00Z",
                          "data": 55
                        },
                        {
                          "timestamp": "2019-11-16T00:00:00Z",
                          "data": 67
                        },
                        {
                          "timestamp": "2019-11-17T00:00:00Z",
                          "data": 67
                        },
                        {
                          "timestamp": "2019-11-18T00:00:00Z",
                          "data": 196
                        },
                        {
                          "timestamp": "2019-11-19T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid protocol": {
                    "value": {
                      "code": "InvalidProtocol",
                      "message": "Invalid parameter 'protocol': 'invalidProtocol'. The protocol type must be 'http', 'https' or 'all'."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span of 'daily' report must be no more than 366 days."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getOriginRequests",
        "description": "Get the number of requests to your origin servers for a time period. Query parameters let you specify the time period and protocol. Filter the results further by passing a <i>filters</i> object in the request. This report's data has a latency of less than two minutes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfiltershostnamesonly",
                "type": "object",
                "x-tags": [
                  "Reports"
                ],
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Return data for a specific hostname only": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames are included."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fiveminutes",
                "hourly",
                "daily",
                "monthly"
              ]
            },
            "in": "query",
            "name": "type",
            "required": true,
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14.  For example, <code>type=daily+8</code>  means the day as defined in UTC+8 time."
          },
          {
            "schema": {
              "type": "string",
              "default": "all",
              "maxLength": 5,
              "enum": [
                "http",
                "https",
                "all"
              ],
              "minLength": 0
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          },
          {
            "schema": {
              "type": "string",
              "default": "self-only",
              "enum": [
                "self-only",
                "children-only",
                "self+children"
              ]
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/report/statusCodeDetailsOrigin": {
      "post": {
        "summary": "Get origin status code details",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "statuscodedetails",
                  "type": "object",
                  "x-tags": [
                    "Reports"
                  ],
                  "description": "This object is returned by status code details report APIs.",
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "description": "Unit of measurement.  For status code APIs, it will be \"counts\", which indicates the number of times a status code appears.",
                      "enum": [
                        "counts"
                      ]
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "Contains information about status codes at different points in time.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "RFC 3339 format date indicate the beginning of an interval."
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "statusCode": {
                                  "type": "string",
                                  "description": "Indicates an HTTP status code, for example, \"200\"."
                                },
                                "data": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "description": "Indicates the number of times the status code was returned."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "dataName"
                  ],
                  "x-examples": {
                    "example-1": {
                      "dataName": "edge status code",
                      "dataUnit": "counts",
                      "dataSeries": [
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 219
                            },
                            {
                              "statusCode": "404",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 209
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 206
                            },
                            {
                              "statusCode": "404",
                              "data": 1
                            },
                            {
                              "statusCode": "504",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 104
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 320
                            },
                            {
                              "statusCode": "404",
                              "data": 7
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 198
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 198
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 396
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 199
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 198
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 204
                            },
                            {
                              "statusCode": "502",
                              "data": 2
                            },
                            {
                              "statusCode": "504",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-15T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 161
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-16T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 174
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-17T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 175
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-18T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 376
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "origin status code",
                      "dataUnit": "counts",
                      "dataSeries": [
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 67
                            },
                            {
                              "statusCode": "304",
                              "data": 60
                            },
                            {
                              "statusCode": "404",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 63
                            },
                            {
                              "statusCode": "304",
                              "data": 60
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 73
                            },
                            {
                              "statusCode": "304",
                              "data": 51
                            },
                            {
                              "statusCode": "404",
                              "data": 1
                            },
                            {
                              "statusCode": "504",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 16
                            },
                            {
                              "statusCode": "304",
                              "data": 22
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 78
                            },
                            {
                              "statusCode": "304",
                              "data": 92
                            },
                            {
                              "statusCode": "404",
                              "data": 7
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 61
                            },
                            {
                              "statusCode": "304",
                              "data": 60
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 61
                            },
                            {
                              "statusCode": "304",
                              "data": 60
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 122
                            },
                            {
                              "statusCode": "304",
                              "data": 120
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 62
                            },
                            {
                              "statusCode": "304",
                              "data": 60
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 61
                            },
                            {
                              "statusCode": "304",
                              "data": 60
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 62
                            },
                            {
                              "statusCode": "304",
                              "data": 61
                            },
                            {
                              "statusCode": "502",
                              "data": 2
                            },
                            {
                              "statusCode": "504",
                              "data": 1
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-15T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 5
                            },
                            {
                              "statusCode": "304",
                              "data": 50
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-16T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 15
                            },
                            {
                              "statusCode": "304",
                              "data": 52
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-17T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 15
                            },
                            {
                              "statusCode": "304",
                              "data": 52
                            }
                          ]
                        },
                        {
                          "timestamp": "2019-11-18T00:00:00Z",
                          "details": [
                            {
                              "statusCode": "200",
                              "data": 84
                            },
                            {
                              "statusCode": "304",
                              "data": 112
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid hostnames": {
                    "value": {
                      "code": "InvalidHostnames",
                      "message": "Invalid hostname(s): 'sfasdfsdfasdfasdf'."
                    }
                  },
                  "Invalid type": {
                    "value": {
                      "code": "InvalidType",
                      "message": "Invalid parameter 'type': 'monthly+13'. The report type must be 'fiveminutes', 'hourly', 'daily'(with optional timezone) or 'monthly'(with optional timezone)."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getOriginStatusCodeDetails",
        "description": "Gets a summary of HTTP status codes returned in requests to your origin servers for a time period. Query parameters let you specify the time period and protocol. Filter the results further by passing a <i>filters</i> object in the request. This report's data has a latency of up to thirty minutes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfiltershostnamesonly",
                "type": "object",
                "x-tags": [
                  "Reports"
                ],
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Return data for a specific hostname only": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames are included."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fiveminutes",
                "hourly",
                "daily",
                "monthly"
              ]
            },
            "in": "query",
            "name": "type",
            "required": true,
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14.  For example, <code>type=daily+8</code>  means the day as defined in UTC+8 time."
          },
          {
            "schema": {
              "type": "string",
              "default": "all",
              "maxLength": 5,
              "enum": [
                "http",
                "https",
                "all"
              ],
              "minLength": 0
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          },
          {
            "schema": {
              "type": "string",
              "default": "self-only",
              "enum": [
                "self-only",
                "children-only",
                "self+children"
              ]
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/report/volInterm": {
      "post": {
        "summary": "Get the intermediate traffic volume",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "reportResponse",
                  "type": "object",
                  "description": "Contains data returned by a report.",
                  "x-examples": {
                    "example-1": {
                      "dataName": "edge response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-10-30T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-10-31T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-01T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-02T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-03T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  },
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "description": "Unit of measurement. This will depend on the report API."
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "The data points.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "An RFC 3339 format date representing the beginning of a time interval. It is always in <b>UTC</b> time. For example:  <code>\"timestamp\": \"2019-10-29T01:00:00Z\"</code>"
                          },
                          "data": {
                            "type": "number",
                            "description": "A value at that timestamp. Refer to the <i>dataUnit</i> field for the unit of measurement."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "dataName"
                  ],
                  "x-tags": [
                    "Reports"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "intermediate response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0.01042
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0.01042
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0.02084
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0.01042
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0.01042
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0.02084
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0.01042
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0.01042
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0.01042
                        },
                        {
                          "timestamp": "2019-11-15T00:00:00Z",
                          "data": 0.01042
                        },
                        {
                          "timestamp": "2019-11-16T00:00:00Z",
                          "data": 0.01042
                        },
                        {
                          "timestamp": "2019-11-17T00:00:00Z",
                          "data": 0.01042
                        },
                        {
                          "timestamp": "2019-11-18T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-19T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid type": {
                    "value": {
                      "code": "InvalidType",
                      "message": "Invalid parameter 'type': 'invalidReportType'. The report type must be 'fiveminutes', 'hourly', 'daily'(with optional timezone) or 'monthly'(with optional timezone)."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span of 'daily' report must be no more than 366 days."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getIntermediateTraffic",
        "description": "Get the intermediate traffic volume in megabytes for a time period. Intermediate traffic is traffic between CDN360 servers. Query parameters let you specify the time period and protocol. Filter the results further by passing a <i>filters</i> object in the request. This report's data has a latency of less than two minutes.\n\nNote: The overhead of TCP, IP, and MAC headers is not included in this API's results.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fiveminutes",
                "hourly",
                "daily",
                "monthly"
              ]
            },
            "in": "query",
            "name": "type",
            "required": true,
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14.  For example, <code>type=daily+8</code>  means the day as defined in UTC+8 time."
          },
          {
            "schema": {
              "type": "string",
              "default": "all",
              "maxLength": 5,
              "enum": [
                "http",
                "https",
                "all"
              ],
              "minLength": 0
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          },
          {
            "schema": {
              "type": "string",
              "default": "self-only",
              "enum": [
                "self-only",
                "children-only",
                "self+children"
              ]
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfilters",
                "type": "object",
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "x-examples": {
                  "Filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                },
                "x-tags": [
                  "Reports"
                ],
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "serverGroups": {
                        "type": "array",
                        "enum": [
                          "standard",
                          "premium",
                          "premium+",
                          "ultra"
                        ],
                        "description": "Indicates one or more server groups (standard, premium, premium+, or ultra).",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Return data for a specific hostname only": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames will be included."
        }
      }
    },
    "/cdn/report/upVol": {
      "post": {
        "summary": "Get the edge upload traffic volume",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "reportResponse",
                  "type": "object",
                  "description": "Contains data returned by a report.",
                  "x-examples": {
                    "example-1": {
                      "dataName": "edge response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-10-30T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-10-31T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-01T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-02T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-03T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  },
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "description": "Unit of measurement. This will depend on the report API."
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "The data points.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "An RFC 3339 format date representing the beginning of a time interval. It is always in <b>UTC</b> time. For example:  <code>\"timestamp\": \"2019-10-29T01:00:00Z\"</code>"
                          },
                          "data": {
                            "type": "number",
                            "description": "A value at that timestamp. Refer to the <i>dataUnit</i> field for the unit of measurement."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "dataName"
                  ],
                  "x-tags": [
                    "Reports"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "uplink request volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-15T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-16T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-17T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-18T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-19T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid protocol": {
                    "value": {
                      "code": "InvalidProtocol",
                      "message": "Invalid parameter 'protocol': 'invalidProtocol'. The protocol type must be 'http', 'https' or 'all'."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span of 'daily' report must be no more than 366 days."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Gets the traffic volume in megabytes uploaded to edge servers for a time period. Query parameters let you specify the time period and protocol. Filter the results further by passing a <i>filters</i> object in the request. This report's data has a latency of less than two minutes.\n\nNote: The overhead of TCP, IP, and MAC headers is not included in this API's results.",
        "operationId": "getEdgeUploadTrafficVolume",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfilters",
                "type": "object",
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "x-examples": {
                  "Filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                },
                "x-tags": [
                  "Reports"
                ],
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "serverGroups": {
                        "type": "array",
                        "enum": [
                          "standard",
                          "premium",
                          "premium+",
                          "ultra"
                        ],
                        "description": "Indicates one or more server groups (standard, premium, premium+, or ultra).",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Return data for a specific hostname only": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames will be included."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fiveminutes",
                "hourly",
                "daily",
                "monthly"
              ]
            },
            "in": "query",
            "name": "type",
            "required": true,
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14.  For example, <code>type=daily+8</code>  means the day as defined in UTC+8 time."
          },
          {
            "schema": {
              "type": "string",
              "default": "all",
              "maxLength": 5,
              "enum": [
                "http",
                "https",
                "all"
              ],
              "minLength": 0
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          },
          {
            "schema": {
              "type": "string",
              "default": "self-only",
              "enum": [
                "self-only",
                "children-only",
                "self+children"
              ]
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/report/logDownload": {
      "post": {
        "summary": "Get the log files for a hostname",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains an array of log file URLs. Each file is compressed using gzip.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Describes a log file.",
                        "properties": {
                          "dateFrom": {
                            "type": "string",
                            "description": "An RFC 3339 date indicate the beginning of the log file."
                          },
                          "dateTo": {
                            "type": "string",
                            "description": "An RFC 3339 date indicating the end of the log file."
                          },
                          "fileSize": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Size of log file in megabytes."
                          },
                          "logUrl": {
                            "type": "string",
                            "description": "URL to the log file.",
                            "format": "uri"
                          }
                        },
                        "required": [
                          "dateFrom",
                          "dateTo",
                          "fileSize",
                          "logUrl"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "logs": [
                        {
                          "dateFrom": "2019-09-05T22:25:00Z",
                          "dateTo": "2019-09-05T22:29:59Z",
                          "fileSize": 484,
                          "logUrl": "http://logdl.mileweb.com/cdnw/20190905-220000-225959/domain.com/2019-09-05-222500-222959_0_domain.com.log.gz?wskey=f422c6ff8f0c6fb8cae9e2ab62734696"
                        },
                        {
                          "dateFrom": "2019-09-10T11:50:00Z",
                          "dateTo": "2019-09-10T11:54:59Z",
                          "fileSize": 704,
                          "logUrl": "http://logdl.mileweb.com/cdnw/20190910-110000-115959/domain.com/2019-09-10-115000-115459_0_domain.com.log.gz?wskey=ba2551292cfdc2fe1ca14321d2dca74c"
                        },
                        {
                          "dateFrom": "2019-09-10T12:15:00Z",
                          "dateTo": "2019-09-10T12:19:59Z",
                          "fileSize": 175,
                          "logUrl": "http://logdl.mileweb.com/cdnw/20190910-120000-125959/domain.com/2019-09-10-121500-121959_0_domain.com.log.gz?wskey=3f59309c5b2bfdbd8d8c3074873e1ba6"
                        }
                      ]
                    }
                  },
                  "No logs available": {
                    "value": {
                      "logs": []
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dateFrom": {
                            "type": "string",
                            "description": "RFC 3339 format date indicating the beginning of the log file."
                          },
                          "dateTo": {
                            "type": "string",
                            "description": "RFC 3339 format date indicating the end of the log file."
                          },
                          "fileSize": {
                            "type": "integer",
                            "description": "Size of file."
                          },
                          "logUrl": {
                            "type": "string",
                            "description": "A URL of a logfile."
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "logs": [
                        {
                          "dateFrom": "2019-09-05T22:25:00Z",
                          "dateTo": "2019-09-05T22:29:59Z",
                          "fileSize": 484,
                          "logUrl": "http://logdl.mileweb.com/cdnw/20190905-220000-225959/domain.com/2019-09-05-222500-222959_0_domain.com.log.gz?wskey=f422c7ff8f0c6fb8cae4524a62734696"
                        },
                        {
                          "dateFrom": "2019-09-10T11:50:00Z",
                          "dateTo": "2019-09-10T11:54:59Z",
                          "fileSize": 704,
                          "logUrl": "http://logdl.mileweb.com/cdnw/20190910-110000-115959/domain.com/2019-09-10-115000-115459_0_domain.com.log.gz?wskey=ba2551296ffdc2a31ca14321d2dca74c"
                        },
                        {
                          "dateFrom": "2019-09-10T12:15:00Z",
                          "dateTo": "2019-09-10T12:19:59Z",
                          "fileSize": 175,
                          "logUrl": "http://logdl.mileweb.com/cdnw/20190910-120000-125959/domain.com/2019-09-10-121500-121959_0_domain.com.log.gz?wskey=3f5930836e2bfdbd8d8c3074873e1ba6"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span must be no more than 30 days."
                    }
                  },
                  "Invalid hostname": {
                    "value": {
                      "code": "InvalidHostnames",
                      "message": "Please specify the hostname(s)."
                    }
                  },
                  "Invalid date": {
                    "value": {
                      "code": "InvalidDate",
                      "message": "Parameter 'startdate' is required."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getLogfiles",
        "description": "Get log files for a hostname. The logs are compressed using gzip. By default, only logs within the past 14 days are available, and they are separated into files each covering part of a day.\n\nEach log file consists of rows such as the following example:\n<pre>\n[C] [20/Feb/2020:12:35:01 +0000] [88.27.179.48] [-] [domain.qtlglb.com] [163.171.240.134] [80] [GET] [/files/123/chunk/5d45ec9bd1637de21a86ee03b7d814aeab110610] [-] [200] [0] [1040747] [0] [1.454] [HTTP/1.1] [domain2.com] [HTTP Client 1.0] [-] [-] [MISS] [-] [1] [1] [application/x-abc-chunk] [0] [1040160] [51193]\n</pre>\n\nLog file format:\n<table>\n<tr><th>Field</th><th>Description</th></tr>\n<tr><td>Event type</td><td>A value of 'C' indicates the CDN edge server returned a result; a value of 'S' indicates an intermediate server.</td></tr>\n<tr><td>Timestamp</td><td>When the event occurred including the day, month, year, and UTC time. Example: <code>20/Feb/2020:12:35:01 +0000</code>.</td></tr>\n<tr><td>Remote IP</td><td>IP address of the client making the request.</td></tr>\n<tr><td>Remote user</td><td>Name of the authenticated user making the request.</td></tr>\n<tr><td>Server name</td><td>Name of the server handling the request.</td></tr>\n<tr><td>Server address</td><td>IP address of the server handling the request.</td></tr>\n<tr><td>Server port</td><td>Port on the server handling the request.</td></tr>\n<tr><td>Request method</td><td>HTTP request method.</td></tr>\n<tr><td>Request URI</td><td>The path requested by the client.</td></tr>\n<tr><td>Query string</td><td>Query string in the client's request.</td></tr>\n<tr><td>Status</td><td>HTTP response code.</td></tr>\n<tr><td>Cache status</td><td>A value of '0' indicates a cache miss or bypass. Otherwise, a '1' is returned.</td></tr>\n<tr><td>Bytes sent</td><td>Number of bytes sent.</td></tr>\n<tr><td>Downstream received</td><td>Number of bytes received by the server from the client (request line + headers).\n</td></tr>\n<tr><td>Request time</td><td>Processing time in seconds with millisecond resolution. Example: <code>1.345</code> It indicates the elapsed time between reading the first bytes from the client and after sending the last bytes to the client.\n</td></tr>\n<tr><td>Server protocol</td><td>The HTTP protocol used, for example, “HTTP/1.0”, “HTTP/1.1”, or “HTTP/2.0”.</td></tr>\n<tr><td>Host</td><td>The hostname of the requested URL.</td></tr>\n<tr><td>HTTP user agent</td><td>User agent of the client making the request.</td></tr>\n<tr><td>HTTP cookie</td><td>Cookies received through the request headers.</td></tr>\n<tr><td>HTTP referer</td><td>Referring URL.</td></tr>\n<tr><td>Upstream cache status</td><td>Cached file status. The status can be either “MISS”, “BYPASS”, “EXPIRED”, “STALE”, “UPDATING”, “REVALIDATED”, or “HIT”.</td></tr>\n<tr><td>HTTP range</td><td>Range header received in the request.</td></tr>\n<tr><td>Initial sent</td><td>Indicates if the first byte of the content has been sent. For a 200 response, the value will be 1 after the response header is sent.\n For a 206 response, the value will be 1 after the response header is sent if the range header of the request begins with \"0\".  The value will be 1 after the response header is sent if there is no response body. In other cases, the value will be \"0\".\n</td></tr>\n<tr><td>Completed</td><td>Indicates the response has been completely sent.  In the case of a transfer encoding in chunks, the value will be 1 if the last chunk is successfully sent.\n</td></tr>\n<tr><td>Sent content type</td><td>Content-type in the response header.</td></tr>\n<tr><td>Protocol</td><td>Indicates the SSL protocol:  \"3.0\" for SSLV3;  \"3.1\" for TLSV1; \"3.2\" for TLSV1.1; \"3.3\" for TLSV1.2;  \"3.4\" for TLSV1.3; \"0\" if undefined.</td></tr>\n<tr><td>Body bytes sent</td><td>Number of bytes sent to the  client excluding the response headers. This is equivalent to the “%B” parameter of the mod_log_config Apache module.</td></tr>\n<tr><td>Remote port</td><td>Client port number.</td></tr>\n</table>",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "Indicates the hostname for which logs should be returned.",
                        "maxItems": 1,
                        "minItems": 1,
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "hostnames"
                    ]
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "domain.com"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "Indicates the domain whose logs you want."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. It should be within the past 14 days. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> ",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period.  It should be within the past 14 days. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code>",
            "required": true
          }
        ]
      }
    },
    "/cdn/annotations": {
      "post": {
        "summary": "Create an annotation for reports",
        "tags": [
          "Annotations for Reports"
        ],
        "responses": {
          "201": {
            "description": "The annotation was created and will appear in the CDN360 portal reports under the conditions you specified. The Location response header will include a URL to the object.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "A URL to the annotation object, for example, <code>Location: http://ngapi.cdnetworks.com/cdn/annotations/5dd50ef0ace044000163278f</code>.",
                "required": true
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid type": {
                    "value": {
                      "code": "InvalidType",
                      "message": "The annotation type is required. It should be either 'client', 'configuration' or 'operation'."
                    }
                  },
                  "Invalid time": {
                    "value": {
                      "code": "InvalidTime",
                      "message": "Parameter 'time' is required."
                    }
                  },
                  "Invalid server region": {
                    "value": {
                      "code": "InvalidServerRegion",
                      "message": "Invalid server region 'invalid'."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This API allows you to create an annotation for a report shown in the CDN360 portal. The request body lets you specify the conditions under which the annotation appears along with the text to show.",
        "operationId": "createAnnotation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "description": "RFC 3339 date indicating the time."
                  },
                  "hostnames": {
                    "type": "array",
                    "description": "List of hostnames from which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames are returned.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "serverGroups": {
                    "type": "array",
                    "description": "Indicates one or more server groups (standard, premium, premium+, or ultra).",
                    "items": {
                      "type": "string"
                    }
                  },
                  "clientRegions": {
                    "type": "array",
                    "description": "One or more client regions. Refer to the information about client regions in the <a href=\"#operation/createEdgeHostname\">Create an Edge Hostname API</a>.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "client",
                      "configuration",
                      "operation"
                    ],
                    "description": "Summarizes the type of event that occurred:\n<table><tr><th>Value</th><th>Description</th></tr><tr><td>client</td><td>An event affecting clients, such as the release of a popular game.</td></tr><tr><td>configuration</td><td>A property configuration change.</td></tr><tr><td>operation</td><td>An operation performed on the CDN platform, for example, updated cache servers.</td></tr></table>"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Text describing the event. This will appear in the report.",
                    "minLength": 1,
                    "maxLength": 250
                  }
                },
                "required": [
                  "time",
                  "type",
                  "comments"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "comments": "Annotation comment 1574244079208",
                    "time": "2019-11-20T12:01:19Z",
                    "type": "configuration"
                  }
                }
              }
            }
          },
          "description": "Specify the conditions in which the annotation appears and the text to show."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "parameters": []
    },
    "/cdn/purges": {
      "post": {
        "summary": "Create a purge request",
        "tags": [
          "Content Management"
        ],
        "responses": {
          "201": {
            "description": "The purge request was created. The <i>Location</i> header includes a reference to the task.  Call the <a href=\"#operation/queryPurgeStatus\">Query Purge Request status API</a> to check its status.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The Location header is a URL representing the new purge request, for example, <code>Location: http://ngapi.cdnetworksl.com/cdn/purges/e91e8674-c2c5-4440-a1de-8b2ea99293dd</code>.",
                "required": true
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid purge URL": {
                    "value": {
                      "code": "InvalidPurgeUrl",
                      "message": "The host 'test.domain.info' has not been deployed in the 'production' environment."
                    }
                  },
                  "Invalid purge URL example 2": {
                    "value": {
                      "code": "InvalidPurgeUrl",
                      "message": "The purge URL 'http://domain.info/newfile[1]{tes`|t^}p<u>.png' is invalid. Special letters need to be encoded."
                    }
                  },
                  "Invalid purge URL example 3": {
                    "value": {
                      "code": "InvalidPurgeUrl",
                      "message": "The purge URL 'http://domain.info/i/image/gallery/123%abc.jpg' is invalid. Special letters need to be encoded."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a purge request to force a refresh of the content stored in the CDN360 cache servers.  You may wish to do this if you just updated content on your origin server and want visitors to see the changes right away rather than wait for the updates to propagate according to the schedule defined in your property configuration.",
        "operationId": "createPurge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "A description of the purge request."
                  },
                  "fileUrls": {
                    "type": "array",
                    "description": "URLs of files to purge.  File URLs should not contain the asterisk character, '*'.   If a directory or filename in a URL includes a percent character, '%', be sure to encode it.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "fileHeaders": {
                    "type": "array",
                    "description": "If a file's cache key depends on request headers, you can specify the header values that are applicable to purge one version of the cached file. The same set of header values will apply to all entries in <i>fileUrls</i>.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "HTTP header name."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of an HTTP header."
                        }
                      }
                    }
                  },
                  "dirUrls": {
                    "type": "array",
                    "description": "URLs of directories to purge. End a directory URL with '\\*\\*' to purge all files and subdirectories. End a directory URL with '\\*' to purge all files only. End a directory URL with '\\*.ext' to purge all files ending with a file extension, 'ext'. For example, <code>https://domain.com/*.jpg</code> purges all JPEG files.  Otherwise, the asterisk character, '*', should not appear in a directory URL. If a directory or filename in a URL includes a percent character, '%', be sure to encode it.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "action": {
                    "type": "string",
                    "default": "invalidate",
                    "enum": [
                      "delete",
                      "invalidate"
                    ],
                    "description": "This controls whether cached files and directories should be removed altogether from the CDN360 servers (delete) or flagged as invalid (invalidate)."
                  },
                  "target": {
                    "type": "string",
                    "enum": [
                      "staging",
                      "production"
                    ],
                    "description": "Specify if the purge request applies to the staging or production environment."
                  }
                },
                "required": [
                  "target"
                ]
              },
              "examples": {
                "Purge a specific file": {
                  "value": {
                    "fileUrls": [
                      "http://domain.info/i/image/gallery/123.jpg"
                    ],
                    "fileHeaders": [
                      {
                        "name": "customheader1",
                        "value": "test1"
                      },
                      {
                        "name": "customheader2",
                        "value": "test2"
                      }
                    ],
                    "action": "invalidate",
                    "target": "production"
                  }
                },
                "Example of purge including all files and subdirectories": {
                  "value": {
                    "dirUrls": [
                      "http://domain.info/**"
                    ],
                    "action": "invalidate",
                    "target": "production"
                  }
                }
              }
            }
          },
          "description": "The request body is used to specify which files and directories are purged, the type of purge to do, and what environment is affected. To ensure that all variations of a file are purged, put the file path into the <i>dirUrls</i> list. If a file has multiple copies cached to to the origin's Vary header, you must also purge it by putting the file path into the <i>dirUrls</i> list. If you are a reseller, you can help purge a child customer's files or directories using this API.\n"
        }
      },
      "get": {
        "summary": "Query purge request list",
        "responses": {
          "200": {
            "description": "The response contains a list of purge requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of purge requests matching the criteria specified in the query parameters. The actual number of entries in <i>purgeRequests</i> may be fewer if you specified the <limit> parameter.",
                      "minimum": 0
                    },
                    "purgeRequests": {
                      "type": "array",
                      "description": "List of purge requests.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID associated with the purge request. You can call the <a href=\"#operation/queryPurgeStatus\">Query purge request status API</a> to get further information about it."
                          },
                          "submissionTime": {
                            "type": "string",
                            "description": "An RFC 3339 date indicating when the purge request was created."
                          },
                          "hostnames": {
                            "type": "array",
                            "description": "Hostnames affected by the purge request.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "fileEntries": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of file URLs that were part of the purge request."
                          },
                          "dirEntries": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of directory URLs that were part of the purge request."
                          },
                          "target": {
                            "type": "string",
                            "enum": [
                              "staging",
                              "production"
                            ],
                            "description": "Indicates whether the purge is in the staging or production environment.\n"
                          },
                          "successRate": {
                            "type": "number",
                            "description": "A percentage that indicates the completion of the purge request. ",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "waiting",
                              "inprogress",
                              "finished"
                            ],
                            "description": "Indicates the status of the purge request."
                          },
                          "finishTime": {
                            "type": "string",
                            "description": "RFC 3339 date indicating when the purge was completed. It can be empty if the purge is still in progress."
                          },
                          "apiRequestId": {
                            "type": "string",
                            "description": "Indicates the corresponding API request ID."
                          },
                          "apiAccountId": {
                            "type": "string",
                            "description": "Indicates an API account."
                          }
                        },
                        "required": [
                          "target"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example of returning 3 out of 34 purge requests.": {
                    "value": {
                      "count": 34,
                      "purgeRequests": [
                        {
                          "id": "7e0a09aa-d341-47a8-82f3-50c1389c106d",
                          "submissionTime": "2019-05-22T08:30:54Z",
                          "finishTime": "2019-05-22T08:35:56Z",
                          "target": "production",
                          "status": "succeeded",
                          "action": "delete",
                          "apiRequestId": "a104b7ad6ab2e91f",
                          "fileEntries": 1,
                          "dirEntries": 0,
                          "successRate": 100,
                          "hostnames": [
                            "mydomain.com"
                          ]
                        },
                        {
                          "id": "65d634c3-38ec-4a05-ac58-db195a40bece",
                          "submissionTime": "2019-05-22T08:30:39Z",
                          "finishTime": "2019-05-22T08:36:42Z",
                          "target": "staging",
                          "status": "succeeded",
                          "action": "delete",
                          "apiRequestId": "049ee33603dc1aab",
                          "fileEntries": 1,
                          "dirEntries": 0,
                          "successRate": 100,
                          "hostnames": [
                            "dana2.com"
                          ]
                        },
                        {
                          "id": "a517e611-ed85-4da4-9c6c-62d25237459e",
                          "submissionTime": "2019-05-22T08:29:34Z",
                          "finishTime": "2019-05-22T08:32:28Z",
                          "target": "staging",
                          "status": "succeeded",
                          "action": "invalidate",
                          "apiRequestId": "646163723701dbfc",
                          "fileEntries": 1,
                          "dirEntries": 0,
                          "successRate": 100,
                          "hostnames": [
                            "mydomain.com"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid list limit": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be an integer."
                    }
                  },
                  "Invalid start date": {
                    "value": {
                      "code": "InvalidStartDate",
                      "message": "Invalid parameter 'startdate'. 'b' is not a valid RFC3339 timestamp in UTC. The timestamp should be in \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format."
                    }
                  },
                  "Invalid sort order": {
                    "value": {
                      "code": "InvalidSortOrder",
                      "message": "The valid sort order values are asc or desc."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getPurgeRequestList",
        "description": "Get a list of purge requests. Filter the list by specifying query parameters.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. It must be in UTC time, for example, \"2019-11-01T01:00:00Z\"."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 0,
              "minLength": 0
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. It must be in UTC time, for example, \"2019-11-01T01:00:00Z\"."
          },
          {
            "schema": {
              "type": "integer",
              "maximum": 0,
              "minimum": 0,
              "default": "0"
            },
            "in": "query",
            "name": "offset",
            "description": "Index of the first purge request to return. "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of purge requests to return."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "submissionTime",
                "finishTime"
              ],
              "default": "submissionTime"
            },
            "in": "query",
            "name": "sortBy",
            "description": "Controls the order in which purge requests are returned. The default is to return the most recently submitted request first."
          },
          {
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "sortOrder",
            "description": "Order of purge requests. The default is to return the most recent purge request first."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "The value will be used to match on hostnames and the purge task ID to limit the purge requests that are returned."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ],
        "tags": [
          "Content Management"
        ]
      },
      "parameters": []
    },
    "/cdn/annotationsList": {
      "post": {
        "summary": "Query annotation list",
        "tags": [
          "Annotations for Reports"
        ],
        "responses": {
          "200": {
            "description": "The response body contains a list of annotations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Total number of annotations."
                    },
                    "annotations": {
                      "type": "array",
                      "items": {
                        "title": "annotation",
                        "type": "object",
                        "x-examples": {
                          "example-1": {
                            "id": "5dd50f04ace0440001632799",
                            "time": "2019-11-20T12:01:40Z",
                            "hostnames": [
                              "domain.info"
                            ],
                            "clientRegions": [
                              "na",
                              "sa"
                            ],
                            "type": "client",
                            "comments": "A major release"
                          }
                        },
                        "description": "This describes an annotation to reports shown on the CDN360 portal.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "An ID representation the annotation.",
                            "minLength": 1
                          },
                          "time": {
                            "type": "string",
                            "description": "RFC 3339 date."
                          },
                          "hostnames": {
                            "type": "array",
                            "description": "Indicates the hostnames that are affected.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "clientRegions": {
                            "type": "array",
                            "description": "One or more client regions. Refer to the information about client regions in the <i>Create an edge hostname</i> API.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "type": "string",
                            "description": "Descriptions the type of annotation.",
                            "enum": [
                              "client",
                              "operation",
                              "configuration"
                            ]
                          },
                          "comments": {
                            "type": "string",
                            "description": "Text that appears in the report shown on the CDN360 portal."
                          }
                        },
                        "required": [
                          "id",
                          "time",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "count"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "count": 2,
                      "annotations": [
                        {
                          "id": "5dd50f04ace0440001632799",
                          "time": "2019-11-20T12:01:40Z",
                          "hostnames": [
                            "domain.info"
                          ],
                          "clientRegions": [
                            "na",
                            "sa"
                          ],
                          "type": "client",
                          "comments": "A major release"
                        },
                        {
                          "id": "5dd50f05ace044000163279a",
                          "time": "2019-11-21T12:01:41Z",
                          "type": "client",
                          "comments": "A patch"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The API call was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The time span should be no more than 366 days."
                    }
                  },
                  "Invalid time": {
                    "value": {
                      "code": "InvalidTime",
                      "message": "Parameter 'enddate' is required."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "queryAnnotationList",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code>",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 format date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> The maximum timespan should be no more than 366 days.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "client",
                "configuration",
                "operation"
              ]
            },
            "in": "query",
            "name": "type",
            "description": "Indicates the type of annotation (client, configuration, or operation)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "Search for annotations whose ID or comment match this value."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": "0"
            },
            "in": "query",
            "name": "offset",
            "description": "Index of the first annotation to return."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of tasks to return."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ],
        "description": "Obtain a list of annotations you have created. Annotations appear in the CDN360 portal's reports based on the conditions defined for each annotation.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfilters",
                "type": "object",
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "x-examples": {
                  "Filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                },
                "x-tags": [
                  "Reports"
                ],
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "serverGroups": {
                        "type": "array",
                        "enum": [
                          "standard",
                          "premium",
                          "premium+",
                          "ultra"
                        ],
                        "description": "Indicates one or more server groups (standard, premium, premium+, or ultra).",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Filters let you control which annotations to return. Note that if multiple hostnames are specified, the API returns annotations that apply to any of the hostnames."
        }
      }
    },
    "/cdn/annotations/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Annotation ID."
        }
      ],
      "delete": {
        "summary": "Delete an annotation",
        "tags": [
          "Annotations for Reports"
        ],
        "responses": {
          "204": {
            "description": "The annotation was successfully deleted."
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Access Denied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "This user is not allowed to perform this request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid annotation": {
                    "value": {
                      "code": "InvalidAnnotationId",
                      "message": "The specified annotation ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete a report annotation.",
        "operationId": "deleteAnnotation",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "get": {
        "summary": "Get an annotation",
        "tags": [
          "Annotations for Reports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "annotation",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "id": "5dd50f04ace0440001632799",
                      "time": "2019-11-20T12:01:40Z",
                      "hostnames": [
                        "domain.info"
                      ],
                      "clientRegions": [
                        "na",
                        "sa"
                      ],
                      "type": "client",
                      "comments": "A major release"
                    }
                  },
                  "description": "This describes an annotation to reports shown on the CDN360 portal.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An ID representation the annotation.",
                      "minLength": 1
                    },
                    "time": {
                      "type": "string",
                      "description": "RFC 3339 date."
                    },
                    "hostnames": {
                      "type": "array",
                      "description": "Indicates the hostnames that are affected.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientRegions": {
                      "type": "array",
                      "description": "One or more client regions. Refer to the information about client regions in the <i>Create an edge hostname</i> API.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Descriptions the type of annotation.",
                      "enum": [
                        "client",
                        "operation",
                        "configuration"
                      ]
                    },
                    "comments": {
                      "type": "string",
                      "description": "Text that appears in the report shown on the CDN360 portal."
                    }
                  },
                  "required": [
                    "id",
                    "time",
                    "type"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "5dd50f1dace04400016327a0",
                      "time": "2019-11-20T12:02:05Z",
                      "hostnames": [
                        "domain.info"
                      ],
                      "clientRegions": [
                        "af",
                        "apac",
                        "as.cn",
                        "sa"
                      ],
                      "type": "client",
                      "comments": "A major release"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "This user is not allowed to perform this request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid annotation": {
                    "value": {
                      "code": "InvalidAnnotationId",
                      "message": "The specified annotation ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getAnnotation",
        "description": "Retrieve details about a report annotation.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "patch": {
        "summary": "Update an annotation",
        "tags": [
          "Annotations for Reports"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid time": {
                    "value": {
                      "code": "InvalidTime",
                      "message": "Parameter 'time' is required."
                    }
                  },
                  "Invalid type": {
                    "value": {
                      "code": "InvalidType",
                      "message": "The annotation type is required. It should be either 'client', 'configuration' or 'operation'."
                    }
                  },
                  "Invalid comments": {
                    "value": {
                      "code": "InvalidComments",
                      "message": "The comments can be up to 250 characters."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid annotation": {
                    "value": {
                      "code": "InvalidAnnotationId",
                      "message": "The specified annotation ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update a report annotation.",
        "operationId": "updateAnnotation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "description": "RFC 3339 date."
                  },
                  "type": {
                    "type": "string",
                    "description": "Summarizes the type of event that occurred:\n<table><tr><th>Value</th><th>Description</th></tr><tr><td>client</td><td>An event affecting clients, such as the release of a popular game.</td></tr><tr><td>configuration</td><td>A property configuration change.</td></tr><tr><td>operation</td><td>An operation performed on the CDN platform, for example, updated cache servers.</td></tr></table>",
                    "enum": [
                      "client",
                      "configuration",
                      "operation"
                    ]
                  },
                  "hostnames": {
                    "type": "array",
                    "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "comments": {
                    "type": "string",
                    "description": "Text describing the event. This will appear in the report."
                  }
                },
                "required": [
                  "time",
                  "type"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "comments": null,
                    "hostnames": null,
                    "time": "2019-11-20T12:02:18Z",
                    "type": "operation",
                    "clientRegions": null
                  }
                }
              }
            }
          },
          "description": "Specify the information about the annotation to update."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/purges/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string",
            "minLength": 1
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of a purge request."
        }
      ],
      "get": {
        "summary": "Query purge request status",
        "tags": [
          "Content Management"
        ],
        "responses": {
          "200": {
            "description": "The response contains details about the purge request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the purge request."
                    },
                    "fileUrls": {
                      "type": "array",
                      "description": "The files that were purged.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dirUrls": {
                      "type": "array",
                      "description": "The directories that were purged.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "target": {
                      "type": "string",
                      "description": "Indicates whether the purge is in the staging or production environment.",
                      "enum": [
                        "staging",
                        "production"
                      ]
                    },
                    "submissionTime": {
                      "type": "string",
                      "description": "An RFC 3339 date indicating when the purge request was created."
                    },
                    "successRate": {
                      "type": "number",
                      "description": "A percentage that indicates the completion of the purge request.",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "fileHeaders": {
                      "type": "array",
                      "description": "If a file's cache key depends on request headers, you can specify the header values that are applicable to purge one version of the cached file. The same set of header values will apply to all entries in <i>fileUrls</i>.  ",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "HTTP header name."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value of an HTTP header."
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates the status of the purge request.",
                      "enum": [
                        "waiting",
                        "inprogress",
                        "finished"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "delete",
                        "invalidate"
                      ],
                      "description": "This controls whether cached files and directories should be removed altogether from the CDN360 servers (delete) or flagged as invalid (invalidate)."
                    },
                    "finishTime": {
                      "type": "string",
                      "description": "RFC 3339 date indicating when the purge was completed. It can be empty if the purge is still in progress."
                    },
                    "apiRequestId": {
                      "type": "string",
                      "description": "Indicates the corresponding API request ID."
                    },
                    "customerId": {
                      "type": "integer",
                      "description": "Refers to a customer."
                    },
                    "dirHeaders": {
                      "type": "array",
                      "description": "If a directory's cache key depends on request headers, you can specify the header values that are applicable to purge one version of the cached directory. The same set of header values will apply to all entries in <i>dirUrls</i>.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "target",
                    "submissionTime",
                    "status",
                    "action",
                    "apiRequestId",
                    "customerId"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "submissionTime": "2019-11-21T12:00:42Z",
                      "finishTime": "2019-11-21T12:03:47Z",
                      "status": "succeeded",
                      "fileUrls": [
                        "http://download.info/sun.jpg"
                      ],
                      "fileHeaders": [
                        {
                          "name": "customheader1",
                          "value": "test1"
                        }
                      ],
                      "dirUrls": [
                        "http://download.info/*.png"
                      ],
                      "action": "invalidate",
                      "target": "production",
                      "apiRequestId": "38738aeb12406c27",
                      "customerId": 10000021,
                      "successRate": 100
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid purge task": {
                    "value": {
                      "code": "InvalidPurgeTaskId",
                      "message": "The specified purge task ID does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Gets information about a purge request including its associated hostnames and status.",
        "operationId": "queryPurgeStatus",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/purgeSummary": {
      "get": {
        "summary": "Query purge summary",
        "tags": [
          "Content Management"
        ],
        "responses": {
          "200": {
            "description": "The response summarizes the number of purge requests made during the time period.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "requests": {
                      "type": "integer",
                      "description": "Number of purge requests to production.",
                      "minimum": 0
                    },
                    "fileRequests": {
                      "type": "integer",
                      "description": "Number of purge API requests to production with non-empty fileURLs.\n",
                      "minimum": 0
                    },
                    "dirRequests": {
                      "type": "integer",
                      "description": "Number of purge API requests to production with non-empty dirUrls.",
                      "minimum": 0
                    },
                    "fileEntries": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Total number of fileUrls entries in purge requests to production."
                    },
                    "dirEntries": {
                      "type": "integer",
                      "description": "Total number of dirUrls entries in purge requests to production."
                    },
                    "staging": {
                      "type": "object",
                      "description": "Purge summary for staging environment.",
                      "properties": {
                        "requests": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Total number of purge requests to staging."
                        },
                        "fileRequests": {
                          "type": "integer",
                          "description": "Total number of purge requests to staging with non-empty fileUrls.",
                          "minimum": 0
                        },
                        "dirRequests": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Total number of purge requests to staging with non-empty dirUrls.\n"
                        },
                        "fileEntries": {
                          "type": "integer",
                          "description": "Total number of fileUrls entries in purges to staging.",
                          "minimum": 0
                        },
                        "dirEntries": {
                          "type": "integer",
                          "description": "Total number of dirUrls entries in purges to staging.",
                          "minimum": 0
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "requests": 1,
                      "fileRequests": 1,
                      "dirRequests": 1,
                      "fileEntries": 2,
                      "dirEntries": 2,
                      "staging": {
                        "requests": 0,
                        "fileRequests": 0,
                        "dirRequests": 0,
                        "fileEntries": 0,
                        "dirEntries": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid start date": {
                    "value": {
                      "code": "InvalidStartDate",
                      "message": "Invalid parameter 'startdate'. '2019' is not a valid RFC3339 timestamp in UTC. The timestamp should be in \"yyyy-MM-dd'T'HH:mm:ss'Z'\" format."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The parameter 'enddate' should be after 'startdate'."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "queryPurgeSummary",
        "description": "Returns a summary of purge requests that were made during a period of time against the production and staging environments. Query parameters let you specify the timeframe.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> ",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the timeframe. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-10-30T00:00:00Z</code> ",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/report/volSummary": {
      "post": {
        "summary": "Get a summary of traffic",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains a summary of traffic by group. It can contain up to 10000 groups. If there are more than 10000 groups, the value of \"isComplete\" will be false. A special group \"\\_\\_all\\_\\_\" contains the total for all groups including those beyond the 10000 limit. When \"isComplete\" is true, the total is the sum of all other returned groups.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metaData": {
                      "type": "object",
                      "properties": {
                        "startTime": {
                          "type": "string",
                          "description": "RFC 3339 date indicating the beginning."
                        },
                        "endTime": {
                          "type": "string",
                          "description": "RFC 3339 date indicating the end."
                        },
                        "isComplete": {
                          "type": "boolean",
                          "description": "The response can contain up to 10000 groups. If there are actually more groups, <i>isComplete</i> will be <i>false</i>."
                        },
                        "dataNames": {
                          "type": "array",
                          "description": "Indicates the type of data returned. \"edge response\" represents edge traffic. \"fast route response\" refers to traffic from your origin accelerated through the HDT product. \"fast route request\" refers to traffic to your origin accelerated through the HDT product. The order of the entries in <i>dataNames</i> array corresponds to the order of values returned in the <i>data</i> data array in the response.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataUnit": {
                          "type": "string",
                          "description": "Indicates the unit of measurement of the returned values."
                        }
                      },
                      "required": [
                        "isComplete"
                      ]
                    },
                    "groups": {
                      "type": "array",
                      "description": "This object contains the breakdown of traffic by group. Groups are determined by the request body.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "group": {
                            "type": "string",
                            "description": "Name of a group.  \"\\_\\_all\\_\\_\" is a special group encompassing all groups."
                          },
                          "data": {
                            "type": "array",
                            "description": "Data values. The units of measurement are determined by the dataUnit field.",
                            "items": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Total traffic": {
                    "value": {
                      "metaData": {
                        "startTime": "2019-09-01T12:35:00Z",
                        "endTime": "2019-09-12T12:40:00Z",
                        "isComplete": true,
                        "dataNames": [
                          "edge response",
                          "fast route response",
                          "fast route request"
                        ],
                        "dataUnit": "megabytes"
                      },
                      "groups": [
                        {
                          "group": "__all__",
                          "data": [
                            214.57945,
                            0,
                            0
                          ]
                        }
                      ]
                    }
                  },
                  "Traffic grouped by hostnames": {
                    "value": {
                      "metaData": {
                        "startTime": "2020-01-05T12:35:00Z",
                        "endTime": "2020-01-12T12:40:00Z",
                        "isComplete": true,
                        "dataNames": [
                          "edge response",
                          "fast route response",
                          "fast route request"
                        ],
                        "dataUnit": "megabytes"
                      },
                      "groups": [
                        {
                          "group": "__all__",
                          "data": [
                            1338301885.66941,
                            0,
                            0
                          ]
                        },
                        {
                          "group": "domain1.com",
                          "data": [
                            798516559.66809,
                            0,
                            0
                          ]
                        },
                        {
                          "group": "domain2.com",
                          "data": [
                            2.72993,
                            0,
                            0
                          ]
                        },
                        {
                          "group": "domain3.com",
                          "data": [
                            539785323.27139,
                            0,
                            0
                          ]
                        }
                      ]
                    }
                  },
                  "Traffic grouped by server groups": {
                    "value": {
                      "metaData": {
                        "startTime": "2020-01-05T12:35:00Z",
                        "endTime": "2020-01-12T12:40:00Z",
                        "isComplete": true,
                        "dataNames": [
                          "edge response",
                          "fast route response",
                          "fast route request"
                        ],
                        "dataUnit": "megabytes"
                      },
                      "groups": [
                        {
                          "group": "__all__",
                          "data": [
                            1338301838.57147,
                            0,
                            0
                          ]
                        },
                        {
                          "group": "standard",
                          "data": [
                            1338301838.57147,
                            0,
                            0
                          ]
                        }
                      ]
                    }
                  },
                  "Traffic grouped by server groups and customer IDs": {
                    "value": {
                      "metaData": {
                        "startTime": "2020-08-01T12:35:00Z",
                        "endTime": "2020-09-12T12:40:00Z",
                        "isComplete": true,
                        "dataNames": [
                          "edge response",
                          "fast route response",
                          "fast route request"
                        ],
                        "dataUnit": "megabytes"
                      },
                      "groups": [
                        {
                          "group": "__all__",
                          "data": [
                            4400.65621,
                            0,
                            0
                          ]
                        },
                        {
                          "group": "premium,123456",
                          "data": [
                            2200.29969,
                            0,
                            0
                          ]
                        },
                        {
                          "group": "standard,123456",
                          "data": [
                            2200.35652,
                            0,
                            0
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid group by": {
                    "value": {
                      "code": "InvalidGroupBy",
                      "message": "Invalid group name(s): 'hostnames2'. We only support grouping by \"hostnames\" and \"serverGroups\"."
                    }
                  },
                  "Invalid timespan": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The parameter 'enddate' should be after 'startdate'."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getVolSummary",
        "description": "Get a summary of traffic during a timespan. You can group results by hostnames or server groups. If you are a reseller, you can also group by customerIds to distinguish your child customers' traffic.\n\nNote: The overhead of TCP, IP, and MAC headers is not included in this API's results. We will add 4.56% (66 bytes of overhead per 1448 bytes of payload) to generate the \"billing volume\" on your invoice.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> ",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time span. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-10-30T00:00:00Z</code> ",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "http",
                "https"
              ]
            },
            "in": "query",
            "name": "protocol",
            "description": "Limits the results to the specified protocol."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfiltersummary",
                "type": "object",
                "x-tags": [
                  "Reports"
                ],
                "description": "An object that can be passed to summary report API calls to filter the results. For example, you can specify to only return data for a particular hostname. Resellers can also filter and group by customer IDs to distinguish their child customers.",
                "x-examples": {
                  "Filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  },
                  "Group results by hostnames": {
                    "groupBy": [
                      "hostnames"
                    ]
                  }
                },
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "servergroups": {
                        "type": "array",
                        "description": "Indicates one or more server groups (standard, premium, premium+, or ultra).",
                        "items": {
                          "type": "string"
                        }
                      },
                      "customerIds": {
                        "type": "array",
                        "description": "Resellers can limit the data by specifying IDs of child customers.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "groupby": {
                        "type": "array",
                        "description": "You can choose to group by \"hostnames\", \"serverGroups\", and \"customerIds\".",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Group results by hostnames": {
                  "value": {
                    "filters": {},
                    "groupBy": [
                      "hostnames"
                    ]
                  }
                },
                "Group by server groups": {
                  "value": {
                    "filters": {},
                    "groupBy": [
                      "serverGroups"
                    ]
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames are included."
        }
      },
      "parameters": []
    },
    "/ngadmin/contacts": {
      "post": {
        "summary": "Create a portal user account",
        "tags": [
          "Portal User Management"
        ],
        "responses": {
          "201": {
            "description": "The user account was created. The Location header will contain a URL to the new account.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The Location header's value is a URL to the new account. You can use the ID to get information about the account or to update it.",
                "required": true
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid input": {
                    "value": {
                      "code": "InvalidInput",
                      "message": "The email address is invalid."
                    }
                  },
                  "Empty name": {
                    "value": {
                      "code": "NameEmpty",
                      "message": "The firstName cannot be empty."
                    }
                  },
                  "Invalid password": {
                    "value": {
                      "code": "InvalidPassword",
                      "message": "The password is invalid."
                    }
                  },
                  "No master": {
                    "value": {
                      "code": "NoMaster",
                      "message": "This customer account do not have an active master portal user. Please create at least one master user."
                    }
                  },
                  "Invalid timezone": {
                    "value": {
                      "code": "InvalidTimeZone",
                      "message": "The timezone is invalid. Please use 'auto', or a value like GMT+4 or GMT-11."
                    }
                  },
                  "Unauthorized product": {
                    "value": {
                      "code": "UnauthorizedProduct",
                      "message": "One or more product is not purchased by this customer."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The account could not be created. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Duplicate login name": {
                    "value": {
                      "code": "DuplicateLoginName",
                      "message": "The login name 'joeuser' is already used."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a CDN360 portal user account. The loginName field must be unique. If you delete a user, you cannot reuse the old loginName.",
        "operationId": "createContact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "First name of the user."
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of the user."
                  },
                  "loginName": {
                    "type": "string",
                    "description": "Name used to log in to the portal.  "
                  },
                  "emailAddress": {
                    "type": "string",
                    "description": "User's email address.",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password. We recommend that users set their own passwords through our portal."
                  },
                  "timeZone": {
                    "type": "string",
                    "default": "auto",
                    "description": "User's time zone. Can be \"auto\" or in the format \"GMT+4\" or \"GMT-11\"."
                  },
                  "phoneNumber": {
                    "type": "object",
                    "description": "The user's phone number.",
                    "properties": {
                      "countryCode": {
                        "type": "string",
                        "description": "A country calling code."
                      },
                      "number": {
                        "type": "string",
                        "description": "A phone number."
                      }
                    }
                  },
                  "comment": {
                    "type": "string",
                    "description": "Optional information about the user."
                  },
                  "address": {
                    "title": "address",
                    "type": "object",
                    "description": "Describes a physical address.",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "description": "First line of the address."
                      },
                      "line2": {
                        "type": "string",
                        "description": "Second line of the address."
                      },
                      "city": {
                        "type": "string",
                        "description": "A city."
                      },
                      "state": {
                        "type": "string",
                        "description": "A state or province."
                      },
                      "zipCode": {
                        "type": "string",
                        "description": "A postal or zip code."
                      },
                      "country": {
                        "type": "string",
                        "description": "A country."
                      }
                    },
                    "x-examples": {
                      "example-1": {
                        "line1": "My Company",
                        "line2": "123 Main St. #200",
                        "city": "Santa Clara",
                        "state": "CA",
                        "zipcode": "95054",
                        "country": "USA"
                      }
                    }
                  },
                  "configs": {
                    "title": "portal user configurations",
                    "type": "object",
                    "description": "Contains portal user settings in the \"configs\" field.",
                    "x-examples": {
                      "example-1": {
                        "isMaster": false,
                        "products": [],
                        "canImpersonate": "all",
                        "status": "suspended",
                        "impersonateRegions": [],
                        "impersonateExceptions": []
                      }
                    },
                    "properties": {
                      "isMaster": {
                        "type": "boolean",
                        "default": false,
                        "description": "Indicates whether or not this portal user has full access to all subscribed products."
                      },
                      "products": {
                        "type": "array",
                        "enum": [
                          "ECP",
                          "CDN"
                        ],
                        "description": "List of products that the user has access to. The default is no products. You can specify \"CDN\" to represent the CDN360 product or \"ECP\" for the Edge Computing Platform product.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "canImpersonate": {
                        "type": "string",
                        "default": "all",
                        "description": "This setting applies to resellers only. It indicates whether the user can impersonate child customers or not. A value of \"all\" means the user can impersonate all child customers. A value of \"none\" means the user cannot impersonate any. This field works in conjunction with the <i>impersonateExceptions</i> field.",
                        "enum": [
                          "all",
                          "none"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "default": "suspended",
                        "description": "Indicates the status of the portal user account. An 'active' user has full access to the portal. A 'suspended' user cannot log in.  A 'pending' user is one that has been invited to use the portal but has not completed setting up the account.  You cannot call the <a href=\"#operation/createContact\">Create a  portal user</a> or <a href=\"#operation/patch-ngadmin-contacts-id\">Update a portal user</a> APIs with a status value of 'pending'.",
                        "enum": [
                          "active",
                          "suspended",
                          "pending"
                        ]
                      },
                      "impersonateExceptions": {
                        "type": "array",
                        "description": "This setting applies to resellers only.  It contains a list of customer IDs that are exceptions to the rule defined by the <i>canImpersonate</i> field. For example, if <i>canImpersonate</i> is \"all\" the portal user can impersonate all child customers of the reseller. Entering one or more customer IDs as exceptions will prevent the user from impersonating those particular child customers. Conversely, if <i>canImpersonate</i> is \"none\", entries in the exception list represent customers who can be impersonated by this user.",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "language": {
                    "type": "string",
                    "default": "en",
                    "description": "The user's preferred language. It is a two character value representing English (en), Chinese (cn), Korean (kr), Japanese (jp), Russian (ru), or French (fr).",
                    "enum": [
                      "en",
                      "cn",
                      "kr",
                      "jp",
                      "ru",
                      "fr"
                    ]
                  },
                  "department": {
                    "type": "string",
                    "maxLength": 20,
                    "description": "User's department."
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "loginName",
                  "emailAddress",
                  "password"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "firstName": "John",
                    "lastName": "Doe",
                    "emailAddress": "john.doe@company.com",
                    "loginName": "JohnDoe",
                    "password": "1234567890aA#",
                    "configs": {
                      "isMaster": true
                    }
                  }
                }
              }
            }
          },
          "description": "Specify information about the new portal user."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer. This will result in a new user account being created for the child customer."
          }
        ]
      },
      "get": {
        "summary": "Get portal user accounts",
        "tags": [
          "Portal User Management"
        ],
        "responses": {
          "200": {
            "description": "The response body contains a list of portal users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Total number of users. If you choose to filter the results, the total will include the filtered users as well as the users returned in the response."
                    },
                    "contacts": {
                      "type": "array",
                      "description": "List of users.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of the user."
                          },
                          "firstName": {
                            "type": "string",
                            "description": "First name of the user."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of the user.\n"
                          },
                          "loginName": {
                            "type": "string",
                            "description": "Portal login name."
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "Email address of the user."
                          },
                          "isMaster": {
                            "type": "boolean",
                            "description": "Indicates whether or not this portal user has full access to all subscribed products.",
                            "default": false
                          },
                          "status": {
                            "type": "string",
                            "description": "Indicates the status of the account. An account can be <i>active</i>, which means login is allowed; <i>pending</i>, which means the user has been invited to use the portal but has not completed account setup; or <i>suspended</i>, which prevents logins.",
                            "enum": [
                              "active",
                              "suspended",
                              "pending"
                            ]
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "RFC 3339 date indicating when the user account was created."
                          },
                          "lastLoginTime": {
                            "type": "string",
                            "description": "RFC 3339 date indicating when the user last logged in to the portal."
                          }
                        },
                        "required": [
                          "id",
                          "loginName",
                          "emailAddress",
                          "status",
                          "creationTime",
                          "lastLoginTime"
                        ]
                      }
                    }
                  },
                  "required": [
                    "count",
                    "contacts"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "count": 14,
                      "contacts": [
                        {
                          "loginName": "testadmin",
                          "firstName": "John",
                          "lastName": "Doe",
                          "status": "active",
                          "creationTime": "2016-09-12T20:30:50Z",
                          "lastLoginTime": "2019-12-07T19:24:33Z",
                          "id": 592,
                          "emailAddress": "John.Doe@company.com"
                        },
                        {
                          "loginName": "alee",
                          "firstName": "A",
                          "lastName": "Lee",
                          "status": "active",
                          "creationTime": "2018-08-22T16:58:12Z",
                          "id": 4327,
                          "emailAddress": "alee@company.com"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid list limit": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be between 1 and 200, inclusive."
                    }
                  },
                  "Invalid sort order": {
                    "value": {
                      "code": "InvalidSortOrder",
                      "message": "The valid sort order values are asc and desc."
                    }
                  },
                  "Invalid sort by": {
                    "value": {
                      "code": "InvalidSortBy",
                      "message": "The valid sort by values for this endpoint are 'creationTime', 'lastLoginTime'."
                    }
                  },
                  "Invalid list offset": {
                    "value": {
                      "code": "InvalidListOffset",
                      "message": "The offset must be a valid non-negative integer."
                    }
                  },
                  "Invalid report range": {
                    "value": {
                      "code": "InvalidReportRange",
                      "message": "The value 'xyz' is invalid for Report-Range header. Only 'self-only' and 'self+children' are supported."
                    }
                  },
                  "Invalid status parameter": {
                    "value": {
                      "code": "InvalidStatus",
                      "message": "The valid contact status values are active, pending and suspended."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getContacts",
        "description": "Get a list of CDN360 portal users. Use the query parameters to filter the results. If you are a reseller you may use the <i>Report-Range</i> request header to get a list of user accounts from child customers as well, or use the On-Behalf-Of header to get results from a single child customer.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": "0"
            },
            "in": "query",
            "name": "offset",
            "description": "Indicates the first item to return. The default is \"0\"."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of portal user accounts to return. The default is to return a summary of all user accounts."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "Filter results by searching for text in the ID, firstName, lastName, emailAddress, and loginName fields."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "creationTime",
                "lastLoginTime"
              ],
              "default": "creationTime"
            },
            "in": "query",
            "name": "sortBy",
            "description": "Sort results by either creation time or last login time."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "in": "query",
            "name": "sortOrder",
            "description": "Indicates whether to return results in ascending order (asc) or descending order (desc)."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "suspended",
                "pending"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Filter users by status.  An account can be <i>active</i>, which means login is allowed; <i>pending</i>, which means the user has been invited to use the portal but has not completed setting up an account; or <i>suspended</i>, which prevents logins."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "self-only",
                "self+children"
              ],
              "default": "self-only"
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to return results from the reseller only (self-only) or the reseller and children accounts (self+children)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/ngadmin/apiAccounts/{id}": {
      "get": {
        "summary": "Get one API account",
        "tags": [
          "API Account Management"
        ],
        "responses": {
          "200": {
            "description": "The response body contains details about the API account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "responsiblePerson": {
                      "type": "string",
                      "description": "Name of the primary user of the API account.",
                      "maxLength": 250
                    },
                    "apiName": {
                      "type": "string",
                      "description": "API login name.",
                      "maxLength": 60
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of account. A <i>read-only</i> account can only access APIs that make no modifications. An <i>operator</i> account can call APIs to make changes such as creating or updating properties.",
                      "enum": [
                        "read-only",
                        "operator"
                      ]
                    },
                    "products": {
                      "type": "array",
                      "description": "Products that the API account has access to.  Supported products are \"CDN\" and \"ECP\".",
                      "items": {
                        "type": "string"
                      }
                    },
                    "emailAddress": {
                      "type": "string",
                      "format": "email",
                      "description": "Email address of the primary user of the API account."
                    },
                    "records": {
                      "type": "object",
                      "description": "Contains some additional information about the API account.",
                      "required": [
                        "customerId",
                        "creationTime",
                        "lastUpdateTime"
                      ],
                      "properties": {
                        "customerId": {
                          "type": "integer",
                          "description": "ID of the customer."
                        },
                        "creationTime": {
                          "type": "string",
                          "description": "RFC 3339 date when the API account was created."
                        },
                        "lastUpdateTime": {
                          "type": "string",
                          "description": "RFC 3339 date when the account was last updated."
                        }
                      }
                    }
                  },
                  "required": [
                    "responsiblePerson",
                    "apiName",
                    "type",
                    "products",
                    "emailAddress",
                    "records"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "apiName": "janeapiuser",
                      "type": "read-only",
                      "customerId": 123456,
                      "responsiblePerson": "Jane Doe",
                      "emailAddress": "jane.doe@company.com",
                      "products": [
                        "CDN"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The account was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid account ID": {
                    "value": {
                      "code": "InvalidAccountId",
                      "message": "The specified account ID does not exist or the caller doesn't have access to this resource."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-ngadmin-apiAccounts-id",
        "description": "Get details about an API account.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "patch": {
        "summary": "Update an API account",
        "tags": [
          "API Account Management"
        ],
        "responses": {
          "201": {
            "description": "The account was successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiName": {
                      "type": "string",
                      "description": "API login name."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of account. A <i>read-only</i> account can only access APIs that make no modifications. An <i>operator</i> account can call APIs to make changes such as creating or updating properties.",
                      "enum": [
                        "read-only",
                        "operator"
                      ]
                    },
                    "customerId": {
                      "type": "integer",
                      "description": "ID of the associated customer."
                    },
                    "responsiblePerson": {
                      "type": "string",
                      "description": "Name of the person using the API key."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "Email address of the primary user of the API account."
                    },
                    "products": {
                      "type": "array",
                      "description": "Products that the API account has access to.  Supported products are \"CDN\" and \"ECP\".",
                      "items": {
                        "type": "string"
                      }
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "API key used to authenticate API calls. This field is only returned if the request included  <code>\"apiKey\":\"reset\"</code>."
                    }
                  },
                  "required": [
                    "apiName",
                    "type",
                    "customerId",
                    "responsiblePerson",
                    "emailAddress",
                    "products"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "ResponsiblePersonEmpty": {
                    "value": {
                      "code": "ResponsiblePersonEmpty",
                      "message": "The responsiblePerson field cannot be empty."
                    }
                  },
                  "Invalid value of apiKey": {
                    "value": {
                      "code": "InvalidAPIKey",
                      "message": "The only valid value is 'reset'."
                    }
                  },
                  "Invalid type": {
                    "value": {
                      "code": "InvalidType",
                      "message": "Type should be \"operator\" or \"read-only\"."
                    }
                  },
                  "Invalid account ID": {
                    "value": {
                      "code": "InvalidUrl",
                      "message": "Invalid accountId : 12841aaa"
                    }
                  },
                  "Invalid email": {
                    "value": {
                      "code": "InvalidEmail",
                      "message": "The email address format is not correct."
                    }
                  },
                  "Invalid product": {
                    "value": {
                      "code": "InvalidProduct",
                      "message": "One or more product names are not valid."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "patch-ngadmin-apiAccounts-id",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ],
        "description": "Update an API account's settings.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "responsiblePerson": {
                    "type": "string",
                    "description": "Name of the primary user of the API account."
                  },
                  "apiName": {
                    "type": "string",
                    "description": "API login name."
                  },
                  "apiKey": {
                    "type": "string",
                    "description": "If specified, the field's value must be <i>reset</i>. A new random API key will be generated for the API account."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "operator",
                      "read-only"
                    ],
                    "description": "Type of account. A <i>read-only</i> account can only access APIs that make no modifications. An <i>operator</i> account can call APIs to make changes such as creating or updating properties."
                  },
                  "products": {
                    "type": "array",
                    "description": "Products that the API account has access to.  Supported products are CDN and ECP.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "emailAddress": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address of the primary user of the API account."
                  }
                }
              },
              "examples": {
                "Update several fields and force a password reset.": {
                  "value": {
                    "responsiblePerson": "Juan Jimenez",
                    "emailAddress": "juanj@company.com",
                    "apiKey": "reset"
                  }
                }
              }
            }
          },
          "description": "Specify the fields to update. Fields that are omitted will not be updated."
        }
      },
      "delete": {
        "summary": "Delete an API account",
        "tags": [
          "API Account Management"
        ],
        "responses": {
          "204": {
            "description": "The API account was deleted."
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid account": {
                    "value": {
                      "code": "InvalidAccountId",
                      "message": "The specified account ID does not exist or the caller doesn't have access to this resource."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete an API account.",
        "operationId": "deleteApiAccount",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "minLength": 1
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The ID of the API account."
        }
      ]
    },
    "/ngadmin/apiAccounts": {
      "post": {
        "summary": "Create an API account",
        "tags": [
          "API Account Management"
        ],
        "responses": {
          "201": {
            "description": "The account was created. The Location header has a URL to the new account with an ID that you can use to query and update. The response body described the account and includes an automatically generated API key.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "required": true,
                "description": "The URL of the new API account. The ID can be used to query, update, or delete the API account."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiName": {
                      "type": "string",
                      "description": "API login name."
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "API key used to authenticate API calls."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "read-only",
                        "operator"
                      ],
                      "description": "Type of account. A <i>read-only</i> account can only access APIs that make no modifications.  An <i>operator</i> account can call APIs to make changes such as creating or updating properties."
                    },
                    "customerId": {
                      "type": "integer",
                      "description": "ID of the associated customer."
                    },
                    "responsiblePerson": {
                      "type": "string",
                      "description": "Name of the person using the API key."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "Email address of the primary user of the API account.",
                      "format": "email"
                    },
                    "products": {
                      "type": "array",
                      "description": "Products that the API account has access to.  Supported products are \"CDN\" and \"ECP\".",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "apiName",
                    "apiKey",
                    "type",
                    "customerId",
                    "responsiblePerson",
                    "emailAddress",
                    "products"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "apiName": "nynewapiuser",
                      "apiKey": "fysg1dq3G3m7pfkjKx7gCLsnVguffm",
                      "type": "read-only",
                      "customerId": 123456,
                      "responsiblePerson": "John Doe",
                      "emailAddress": "john.doe@domain.com",
                      "products": [
                        "CDN"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid email address": {
                    "value": {
                      "code": "InvalidEmail",
                      "message": "The email address format is not correct."
                    }
                  },
                  "Invalid product": {
                    "value": {
                      "code": "InvalidProduct",
                      "message": "One or more product names are not valid."
                    }
                  },
                  "Invalid type": {
                    "value": {
                      "code": "InvalidType",
                      "message": "Type should be \"operator\" or \"read-only\"."
                    }
                  },
                  "Empty API name": {
                    "value": {
                      "code": "ApiNameEmpty",
                      "message": "The apiName field cannot be empty."
                    }
                  },
                  "Empty responsible person": {
                    "value": {
                      "code": "ResponsiblePersonEmpty",
                      "message": "The responsiblePerson field cannot be empty."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Access denied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "You are not allowed to perform this action."
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You have already reached your limit of API accounts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Too Many Accounts": {
                    "value": {
                      "code": "TooManyAccounts",
                      "message": "The maximum number of accounts has been reached."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The API account already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Duplicate API Name": {
                    "value": {
                      "code": "DuplicateApiName",
                      "message": "This apiName already exists."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-ngadmin-apiAccounts",
        "description": "Create an API account that can be used to call CDN360 APIs.  You can opt to give read-only access or operator access which allows updates to objects like properties.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "responsiblePerson": {
                    "type": "string",
                    "description": "Name of the primary user of the API account."
                  },
                  "apiName": {
                    "type": "string",
                    "description": "API login name.",
                    "maxLength": 60
                  },
                  "emailAddress": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address of the primary user of the API account."
                  },
                  "products": {
                    "type": "array",
                    "description": "Products that the API account has access to.  Supported products are \"CDN\" and \"ECP\".",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of account. A <i>read-only</i> account can only access APIs that make no modifications.  An <i>operator</i> account can call APIs to make changes such as creating or updating properties.",
                    "enum": [
                      "read-only",
                      "operator"
                    ]
                  }
                },
                "required": [
                  "responsiblePerson",
                  "apiName",
                  "emailAddress",
                  "products",
                  "type"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "responsiblePerson": "John Doe",
                    "apiName": "johndoeapiuser",
                    "emailAddress": "john.doe@company.com",
                    "products": [
                      "CDN"
                    ],
                    "type": "operator"
                  }
                }
              }
            }
          },
          "description": "Information about the new API account."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "parameters": [],
      "get": {
        "summary": "Get a list of API accounts",
        "tags": [
          "API Account Management"
        ],
        "responses": {
          "200": {
            "description": "List of API accounts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Number of API accounts.",
                      "minimum": 0
                    },
                    "accounts": {
                      "type": "array",
                      "description": "Contains objects describing API accounts.",
                      "items": {
                        "type": "object",
                        "description": "An API account.",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of an API account.",
                            "minimum": 1
                          },
                          "apiName": {
                            "type": "string",
                            "description": "API login name."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "read-only",
                              "operator"
                            ],
                            "description": "Type of account. A <i>read-only</i> account can only access APIs that make no modifications. An <i>operator</i> account can call APIs to make changes such as creating or updating properties."
                          },
                          "responsiblePerson": {
                            "type": "string",
                            "maxLength": 250,
                            "description": "Name of the primary user of the API account."
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "RFC 3339 date indicating when the API account was created."
                          },
                          "lastUpdateTime": {
                            "type": "string",
                            "description": "RFC 3339 date indicating when the API account was most recently updated."
                          },
                          "emailAddress": {
                            "type": "string",
                            "description": "Email address of the primary user of the API account.",
                            "format": "email"
                          }
                        },
                        "required": [
                          "id",
                          "apiName",
                          "type",
                          "responsiblePerson",
                          "creationTime",
                          "lastUpdateTime",
                          "emailAddress"
                        ]
                      }
                    }
                  },
                  "required": [
                    "count",
                    "accounts"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "count": 1,
                      "accounts": [
                        {
                          "id": 12839,
                          "apiName": "johndoeapiuser",
                          "type": "operator",
                          "responsiblePerson": "John Doe",
                          "creationTime": "2019-12-19T03:05:17Z",
                          "lastUpdateTime": "2019-12-19T03:05:17Z",
                          "emailAddress": "john.doe@company.com"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid list limit": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be between 1 and 200, inclusive."
                    }
                  },
                  "Invalid list offset": {
                    "value": {
                      "code": "InvalidListOffset",
                      "message": "The offset must be a valid non-negative integer."
                    }
                  },
                  "Invalid sort by": {
                    "value": {
                      "code": "InvalidSortBy",
                      "message": "The valid sort by values for this endpoint are 'creationTime', 'lastUpdateTime'."
                    }
                  },
                  "Invalid sort order": {
                    "value": {
                      "code": "InvalidSortOrder",
                      "message": "The valid sort order values are asc and desc."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-ngadmin-apiAccounts",
        "description": "Get a list of API accounts belonging to you. You can filter the results using query parameters. If you are a reseller, you can also use the Report-Range header to get all the API accounts from your child customers as well.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "self-only",
              "enum": [
                "self-only",
                "self+children"
              ]
            },
            "in": "header",
            "name": "Report-Range",
            "description": "Resellers can use this field to obtain API accounts from all child customers by specifying \"self+children\"."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Indicates the first item to return. The default is \"0\"."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 100
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of accounts to return. The default is to return a summary of all accounts."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "Keyword to search for in the id, responsiblePerson, emailAddress, and apiName fields."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "creationTime",
                "lastUpdateTime"
              ],
              "default": "creationTime"
            },
            "in": "query",
            "name": "sortBy",
            "description": "Sort accounts by their creation time or when they were last updated.\n"
          },
          {
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "sortOrder",
            "description": "Order of accounts returned by the API, either <i>asc</i> for ascending or <i>desc</i> for descending."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/ngadmin/contacts/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of a user. The ID is returned when creating a new user."
        }
      ],
      "get": {
        "summary": "Query a portal user",
        "tags": [
          "Portal User Management"
        ],
        "responses": {
          "200": {
            "description": "The response body contains details about the user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "type": "string",
                      "description": "First name of the user."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name of the user."
                    },
                    "loginName": {
                      "type": "string",
                      "description": "Name used to log in to the portal."
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "User's email address.",
                      "format": "email"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "User's time zone. Can be in the format \"GMT+4\" or \"GMT-11\"",
                      "default": "auto"
                    },
                    "language": {
                      "type": "string",
                      "description": "The user's language. It is a two character value representing English (en), Chinese (cn), Korean (kr), Japanese (jp), Russian (ru), or French (fr).\n"
                    },
                    "records": {
                      "type": "object",
                      "description": "Contains additional information about the user account including when the user last logged in.",
                      "properties": {
                        "customerId": {
                          "type": "string",
                          "description": "ID of the customer to which this user belongs."
                        },
                        "creationtime": {
                          "type": "string",
                          "description": "RFC 3339 date indicating when the user was added."
                        },
                        "lastLoginTime": {
                          "type": "string",
                          "description": "RFC 3339 date indicating when the user last logged in to the portal."
                        },
                        "lastUpdateTime": {
                          "type": "string",
                          "description": "RFC 3339 date indicating when the account was last updated."
                        }
                      }
                    },
                    "configs": {
                      "title": "portal user configurations",
                      "type": "object",
                      "description": "Contains portal user settings in the \"configs\" field.",
                      "x-examples": {
                        "example-1": {
                          "isMaster": false,
                          "products": [],
                          "canImpersonate": "all",
                          "status": "suspended",
                          "impersonateRegions": [],
                          "impersonateExceptions": []
                        }
                      },
                      "properties": {
                        "isMaster": {
                          "type": "boolean",
                          "default": false,
                          "description": "Indicates whether or not this portal user has full access to all subscribed products."
                        },
                        "products": {
                          "type": "array",
                          "enum": [
                            "ECP",
                            "CDN"
                          ],
                          "description": "List of products that the user has access to. The default is no products. You can specify \"CDN\" to represent the CDN360 product or \"ECP\" for the Edge Computing Platform product.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "canImpersonate": {
                          "type": "string",
                          "default": "all",
                          "description": "This setting applies to resellers only. It indicates whether the user can impersonate child customers or not. A value of \"all\" means the user can impersonate all child customers. A value of \"none\" means the user cannot impersonate any. This field works in conjunction with the <i>impersonateExceptions</i> field.",
                          "enum": [
                            "all",
                            "none"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "default": "suspended",
                          "description": "Indicates the status of the portal user account. An 'active' user has full access to the portal. A 'suspended' user cannot log in.  A 'pending' user is one that has been invited to use the portal but has not completed setting up the account.  You cannot call the <a href=\"#operation/createContact\">Create a  portal user</a> or <a href=\"#operation/patch-ngadmin-contacts-id\">Update a portal user</a> APIs with a status value of 'pending'.",
                          "enum": [
                            "active",
                            "suspended",
                            "pending"
                          ]
                        },
                        "impersonateExceptions": {
                          "type": "array",
                          "description": "This setting applies to resellers only.  It contains a list of customer IDs that are exceptions to the rule defined by the <i>canImpersonate</i> field. For example, if <i>canImpersonate</i> is \"all\" the portal user can impersonate all child customers of the reseller. Entering one or more customer IDs as exceptions will prevent the user from impersonating those particular child customers. Conversely, if <i>canImpersonate</i> is \"none\", entries in the exception list represent customers who can be impersonated by this user.",
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "address": {
                      "type": "object",
                      "description": "The user's address.",
                      "properties": {
                        "line1": {
                          "type": "string",
                          "description": "First line of the address."
                        },
                        "line2": {
                          "type": "string",
                          "description": "Second line of the address."
                        },
                        "city": {
                          "type": "string",
                          "description": "A city."
                        },
                        "state": {
                          "type": "string",
                          "description": "A state or province."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "A zip or postal code."
                        },
                        "country": {
                          "type": "string",
                          "description": "Country of the address."
                        }
                      }
                    },
                    "comment": {
                      "type": "string",
                      "description": "Optional information about the user."
                    },
                    "phoneNumber": {
                      "type": "object",
                      "description": "The user's phone number.",
                      "properties": {
                        "countryCode": {
                          "type": "string",
                          "description": "A country calling code."
                        },
                        "number": {
                          "type": "string",
                          "description": "A phone number."
                        }
                      }
                    }
                  },
                  "required": [
                    "firstName",
                    "lastName",
                    "loginName",
                    "emailAddress",
                    "configs"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "firstName": "John",
                      "loginName": "johndoe",
                      "timeZone": "auto",
                      "language": "en",
                      "phoneNumber": {},
                      "comment": "",
                      "address": {},
                      "configs": {
                        "isMaster": false,
                        "products": [],
                        "canImpersonate": "all",
                        "status": "active"
                      },
                      "records": {
                        "customerId": 12345,
                        "creationTime": "2016-08-24T18:41:22Z",
                        "lastLoginTime": "2019-12-09T20:15:28Z"
                      },
                      "emailAddress": "john.doe@company.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The user was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid contact ": {
                    "value": {
                      "code": "InvalidContactId",
                      "message": "The requested contact does not exist or you do not have required permission."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-ngadmin-contacts-id",
        "description": "Return information about a CDN360 portal user.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "delete": {
        "summary": "Delete a portal user",
        "tags": [
          "Portal User Management"
        ],
        "responses": {
          "204": {
            "description": "The user was successfully deleted."
          },
          "404": {
            "description": "The user account could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid contact": {
                    "value": {
                      "code": "InvalidContactId",
                      "message": "The requested contact does not exist or you do not have required permission."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "delete-ngadmin-contacts-id",
        "description": "Delete a CDN360 portal user account using this API.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      },
      "patch": {
        "summary": "Update a portal user",
        "tags": [
          "Portal User Management"
        ],
        "responses": {
          "200": {
            "description": "The user account was updated."
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid URL": {
                    "value": {
                      "code": "InvalidUrl",
                      "message": "Invalid id : 491022423423"
                    }
                  },
                  "Unauthorized product": {
                    "value": {
                      "code": "UnauthorizedProduct",
                      "message": "One or more product is not purchased by this customer."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "patch-ngadmin-contacts-id",
        "description": "Update a CDN360 portal user account. Only fields in the request body will be updated.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "First name of the user."
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of the user."
                  },
                  "loginName": {
                    "type": "string",
                    "description": "Name used to log in to the portal."
                  },
                  "emailAddress": {
                    "type": "string",
                    "description": "Email address of the user."
                  },
                  "timeZone": {
                    "type": "string",
                    "description": "User's time zone. Can be in the format \"GMT+4\" or \"GMT-11\"."
                  },
                  "language": {
                    "type": "string",
                    "description": "The user's preferred language. It is a two character value representing English (en), Chinese (cn), Korean (kr), Japanese (jp), Russian (ru), or French (fr).",
                    "enum": [
                      "en",
                      "cn",
                      "kr",
                      "jp",
                      "ru",
                      "fr"
                    ]
                  },
                  "phoneNumber": {
                    "type": "object",
                    "description": "A phone number.",
                    "properties": {
                      "countryCode": {
                        "type": "string",
                        "description": "A country calling code."
                      },
                      "number": {
                        "type": "string",
                        "description": "A phone number."
                      }
                    }
                  },
                  "comment": {
                    "type": "string",
                    "description": "Optional information about the user."
                  },
                  "address": {
                    "type": "object",
                    "description": "The user's address.",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "description": "First line of the address."
                      },
                      "line2": {
                        "type": "string",
                        "description": "Second line of the address."
                      },
                      "city": {
                        "type": "string",
                        "description": "A city."
                      },
                      "state": {
                        "type": "string",
                        "description": "A state or province."
                      },
                      "zipCode": {
                        "type": "string",
                        "description": "The postal or zip code."
                      },
                      "country": {
                        "type": "string",
                        "description": "Country of the address."
                      }
                    }
                  },
                  "configs": {
                    "title": "portal user configurations",
                    "type": "object",
                    "description": "Contains portal user settings in the \"configs\" field.",
                    "x-examples": {
                      "example-1": {
                        "isMaster": false,
                        "products": [],
                        "canImpersonate": "all",
                        "status": "suspended",
                        "impersonateRegions": [],
                        "impersonateExceptions": []
                      }
                    },
                    "properties": {
                      "isMaster": {
                        "type": "boolean",
                        "default": false,
                        "description": "Indicates whether or not this portal user has full access to all subscribed products."
                      },
                      "products": {
                        "type": "array",
                        "enum": [
                          "ECP",
                          "CDN"
                        ],
                        "description": "List of products that the user has access to. The default is no products. You can specify \"CDN\" to represent the CDN360 product or \"ECP\" for the Edge Computing Platform product.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "canImpersonate": {
                        "type": "string",
                        "default": "all",
                        "description": "This setting applies to resellers only. It indicates whether the user can impersonate child customers or not. A value of \"all\" means the user can impersonate all child customers. A value of \"none\" means the user cannot impersonate any. This field works in conjunction with the <i>impersonateExceptions</i> field.",
                        "enum": [
                          "all",
                          "none"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "default": "suspended",
                        "description": "Indicates the status of the portal user account. An 'active' user has full access to the portal. A 'suspended' user cannot log in.  A 'pending' user is one that has been invited to use the portal but has not completed setting up the account.  You cannot call the <a href=\"#operation/createContact\">Create a  portal user</a> or <a href=\"#operation/patch-ngadmin-contacts-id\">Update a portal user</a> APIs with a status value of 'pending'.",
                        "enum": [
                          "active",
                          "suspended",
                          "pending"
                        ]
                      },
                      "impersonateExceptions": {
                        "type": "array",
                        "description": "This setting applies to resellers only.  It contains a list of customer IDs that are exceptions to the rule defined by the <i>canImpersonate</i> field. For example, if <i>canImpersonate</i> is \"all\" the portal user can impersonate all child customers of the reseller. Entering one or more customer IDs as exceptions will prevent the user from impersonating those particular child customers. Conversely, if <i>canImpersonate</i> is \"none\", entries in the exception list represent customers who can be impersonated by this user.",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "department": {
                    "type": "string",
                    "maxLength": 20,
                    "description": "User's department."
                  },
                  "password": {
                    "type": "string",
                    "description": "New password for the user. We recommend that users set their own passwords through our portal."
                  },
                  "reset2fa": {
                    "type": "boolean",
                    "description": "Set to <i>true</i> to force the user to go through the two factor authentication setup process when logging in. This only applies if you have chosen to require two factor authentication for improved security. You can enable the feature by setting <i>enforce2fa</i> to <i>true</i> when <a href=\"#operation/patch-ngadmin-customers-id\">updating your account</a>. A common reason to use <i>reset2fa</i> is when the user switches to a new phone."
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "firstName": "Joe"
                  }
                }
              }
            }
          },
          "description": "The request body contains the fields that will be updated.  If a field is omitted, it will not be modified."
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/report/edgeHostnameReq": {
      "post": {
        "summary": "Get edge hostname statistics",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data.  It is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "reportResponse",
                  "type": "object",
                  "description": "Contains data returned by a report.",
                  "x-examples": {
                    "example-1": {
                      "dataName": "edge response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-10-30T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-10-31T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-01T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-02T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-03T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  },
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "description": "Unit of measurement. This will depend on the report API."
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "The data points.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "An RFC 3339 format date representing the beginning of a time interval. It is always in <b>UTC</b> time. For example:  <code>\"timestamp\": \"2019-10-29T01:00:00Z\"</code>"
                          },
                          "data": {
                            "type": "number",
                            "description": "A value at that timestamp. Refer to the <i>dataUnit</i> field for the unit of measurement."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "dataName"
                  ],
                  "x-tags": [
                    "Reports"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "edgeHostname dns requests",
                      "dataUnit": "counts",
                      "dataSeries": [
                        {
                          "timestamp": "2020-01-09T00:00:00Z",
                          "data": 59
                        },
                        {
                          "timestamp": "2020-01-10T00:00:00Z",
                          "data": 5
                        },
                        {
                          "timestamp": "2020-01-14T00:00:00Z",
                          "data": 80
                        },
                        {
                          "timestamp": "2020-01-15T00:00:00Z",
                          "data": 22
                        },
                        {
                          "timestamp": "2020-01-16T00:00:00Z",
                          "data": 62
                        },
                        {
                          "timestamp": "2020-01-17T00:00:00Z",
                          "data": 3
                        },
                        {
                          "timestamp": "2020-01-18T00:00:00Z",
                          "data": 4
                        },
                        {
                          "timestamp": "2020-01-19T00:00:00Z",
                          "data": 3
                        },
                        {
                          "timestamp": "2020-01-20T00:00:00Z",
                          "data": 3
                        },
                        {
                          "timestamp": "2020-01-21T00:00:00Z",
                          "data": 2035
                        },
                        {
                          "timestamp": "2020-01-22T00:00:00Z",
                          "data": 1369
                        },
                        {
                          "timestamp": "2020-01-23T00:00:00Z",
                          "data": 5
                        },
                        {
                          "timestamp": "2020-01-24T00:00:00Z",
                          "data": 8
                        },
                        {
                          "timestamp": "2020-01-25T00:00:00Z",
                          "data": 12
                        },
                        {
                          "timestamp": "2020-01-26T00:00:00Z",
                          "data": 4
                        },
                        {
                          "timestamp": "2020-01-27T00:00:00Z",
                          "data": 6
                        },
                        {
                          "timestamp": "2020-01-28T00:00:00Z",
                          "data": 4
                        },
                        {
                          "timestamp": "2020-01-29T00:00:00Z",
                          "data": 14
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid type": {
                    "value": {
                      "code": "InvalidType",
                      "message": "Parameter 'type' is required."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span of 'daily' report must be no more than 366 days."
                    }
                  },
                  "Invalid Edge Hostnames": {
                    "value": {
                      "code": "InvalidEdgeHostnames",
                      "message": "Invalid Edge Hostname(s): 'a'."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-cdn-report-edgeHostnameReq",
        "description": "Get the number of DNS requests to resolve your edge hostnames.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code>",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time span. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code>",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "fiveminutes",
                "hourly",
                "daily",
                "monthly"
              ]
            },
            "in": "query",
            "name": "type",
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14.  For example, <code>type=daily+8</code> means the day as defined in UTC+8 time.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "description": "Limit statistics to specific edge hostnames.",
                    "properties": {
                      "edgeHostnames": {
                        "type": "array",
                        "description": "One or more edge hostnames.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "filters": {
                      "edgeHostnames": [
                        "myedgehost1.qtlglb.com",
                        "myedgehost2.qtlglb.com"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "Optionally specify the edge hostnames to obtain statistics for them. If unspecified, data for all edge hostnames in your account will be returned."
        }
      },
      "parameters": []
    },
    "/cdn/report/edgeHostnameReqSummary": {
      "post": {
        "summary": "Get edge hostname summary statistics",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains a summary of DNS requests by edge hostname. It can contain up to 10000 groups representing a breakdown of requests by 10000 edge hostnames. If there are more than 10000 groups, the value of \"isComplete\" will be false. A special group \"\\_\\_all\\_\\_\" contains the total for all groups including those beyond the 10000 limit.  When \"isComplete\" is true, the total is the sum of all other returned groups.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "metaData": {
                      "type": "object",
                      "properties": {
                        "startTime": {
                          "type": "string",
                          "description": "RFC 3339 date indicating the beginning."
                        },
                        "endTime": {
                          "type": "string",
                          "description": "RFC 3339 date indicating the end."
                        },
                        "isComplete": {
                          "type": "boolean",
                          "description": "The response can contain up to 10000 groups. If there are actually more groups, <i>isComplete</i> will be <i>false</i>."
                        },
                        "dataNames": {
                          "type": "array",
                          "description": "Indicates the type of data returned: \"edgeHostname dns request\"",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataUnit": {
                          "type": "string",
                          "description": "Indicates the unit of measurement of the returned values."
                        }
                      },
                      "required": [
                        "isComplete"
                      ]
                    },
                    "groups": {
                      "type": "array",
                      "description": "This object contains the breakdown of traffic by group. Groups are determined by the request body.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "group": {
                            "type": "string",
                            "description": "Name of a group.  \"\\_\\_all\\_\\_\" is a special group encompassing all groups.\n"
                          },
                          "data": {
                            "type": "number",
                            "description": "Data value. The units of measurement are determined by the dataUnit field."
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Summary of total requests": {
                    "value": {
                      "metaData": {
                        "startTime": "2020-01-01T12:35:00Z",
                        "endTime": "2020-01-29T12:40:00Z",
                        "isComplete": true,
                        "dataNames": [
                          "edgeHostname dns request"
                        ],
                        "dataUnit": "counts"
                      },
                      "groups": [
                        {
                          "group": "__all__",
                          "data": [
                            3692
                          ]
                        }
                      ]
                    }
                  },
                  "Summary broken down by edge hostname": {
                    "value": {
                      "metaData": {
                        "startTime": "2020-01-28T12:35:00Z",
                        "endTime": "2020-01-29T12:40:00Z",
                        "isComplete": true,
                        "dataNames": [
                          "edgeHostname dns request"
                        ],
                        "dataUnit": "counts"
                      },
                      "groups": [
                        {
                          "group": "__all__",
                          "data": [
                            18
                          ]
                        },
                        {
                          "group": "report1580294661282.qtlcdn.com.",
                          "data": [
                            10
                          ]
                        },
                        {
                          "group": "report1580297455005.qtlcdn.com.",
                          "data": [
                            2
                          ]
                        },
                        {
                          "group": "report1580299885881.qtlcdn.com.",
                          "data": [
                            2
                          ]
                        },
                        {
                          "group": "test.t1580282270963.qtlcdn.com.",
                          "data": [
                            1
                          ]
                        },
                        {
                          "group": "test.t1580282275253.qtlcdn.com.",
                          "data": [
                            1
                          ]
                        },
                        {
                          "group": "test.t1580282280011.qtlcdn.com.",
                          "data": [
                            2
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid group by": {
                    "value": {
                      "code": "InvalidGroupBy",
                      "message": "Invalid group name(s): \"abc\". We only support grouping by \"edgeHostnames\"."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span must be no more than 366 days."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-cdn-report-edgeHostnameReqSummary",
        "description": "Obtain a summary of DNS requests for one or more edge hostnames. This API allows you to see the actual number of requests for each edge hostname.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code>",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time span. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code>",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filters": {
                    "description": "Limit statistics to specific edge hostnames.\n",
                    "type": "object",
                    "properties": {
                      "edgeHostnames": {
                        "type": "array",
                        "description": "One or more edge hostnames.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "groupBy": {
                    "type": "array",
                    "description": "Specify an array containing \"edgeHostnames\" to get data for each edge hostname.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "Group by edge hostnames": {
                  "value": {
                    "groupBy": [
                      "edgeHostnames"
                    ]
                  }
                },
                "Filter results": {
                  "value": {
                    "filters": {
                      "edgeHostnames": [
                        "myedgehost1.qtlglb.com",
                        "myedgehost2.qtlglb.com"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "You can request a breakdown of requests by edge hostname."
        }
      },
      "parameters": []
    },
    "/cdn/edgeHostnames/isps": {
      "get": {
        "summary": "Get a list of ISPs",
        "tags": [
          "Edge Hostname Management"
        ],
        "responses": {
          "200": {
            "description": "The response contains a list of ISPs. You can specify an ISP's code in an <a href=\"#operation/createEdgeHostname\">edge hostname's client zone rule</a>.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A list of ISPs.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "A code representing an ISP."
                      },
                      "name": {
                        "type": "string",
                        "description": "Descriptive name of an ISP."
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "code": "au_vodafone",
                        "name": "Vodafone(Australia)"
                      },
                      {
                        "code": "mu_telecom",
                        "name": "Mauritius-Telecom"
                      },
                      {
                        "code": "us_abovenet",
                        "name": "AboveNet"
                      },
                      {
                        "code": "us_akamai",
                        "name": "Akamai"
                      },
                      {
                        "code": "us_amazon",
                        "name": "Amazon"
                      },
                      {
                        "code": "us_aol",
                        "name": "AOL"
                      },
                      {
                        "code": "us_att",
                        "name": "ATT"
                      },
                      {
                        "code": "us_centurylink",
                        "name": "CenturyLink"
                      },
                      {
                        "code": "us_cogent",
                        "name": "Cogent"
                      },
                      {
                        "code": "us_cologix",
                        "name": "Cologix"
                      },
                      {
                        "code": "us_comcast",
                        "name": "Comcast"
                      },
                      {
                        "code": "us_coresite",
                        "name": "Coresite"
                      },
                      {
                        "code": "us_coresite-any2-ix",
                        "name": "CoreSite-Any2-California"
                      },
                      {
                        "code": "us_cox",
                        "name": "Cox-Communications"
                      },
                      {
                        "code": "us_earthlink",
                        "name": "Earthlink"
                      },
                      {
                        "code": "us_google",
                        "name": "Google"
                      },
                      {
                        "code": "us_google-cloud",
                        "name": "Google-Cloud"
                      },
                      {
                        "code": "us_gtt",
                        "name": "GTT"
                      },
                      {
                        "code": "us_highwinds",
                        "name": "Highwinds"
                      },
                      {
                        "code": "us_hurricane",
                        "name": "Hurricane"
                      },
                      {
                        "code": "us_ibm",
                        "name": "IBM"
                      },
                      {
                        "code": "us_ixp",
                        "name": "IXP"
                      },
                      {
                        "code": "us_level3",
                        "name": "Level3"
                      },
                      {
                        "code": "us_markley",
                        "name": "Markley"
                      },
                      {
                        "code": "us_microsoft-azure",
                        "name": "Microsoft-Azure"
                      },
                      {
                        "code": "us_nlayer",
                        "name": "NLayer"
                      },
                      {
                        "code": "us_node",
                        "name": "US_NODE"
                      },
                      {
                        "code": "us_nota",
                        "name": "NOTA"
                      },
                      {
                        "code": "us_nyiix",
                        "name": "Telehouse-International-Corporation"
                      },
                      {
                        "code": "us_qwest",
                        "name": "Qwest"
                      },
                      {
                        "code": "us_roadrunner",
                        "name": "Roadrunner"
                      },
                      {
                        "code": "us_sprint",
                        "name": "Sprint"
                      },
                      {
                        "code": "us_t-mobile",
                        "name": "T-Mobile"
                      },
                      {
                        "code": "us_telehouse",
                        "name": "Telehouse"
                      },
                      {
                        "code": "us_telx",
                        "name": "Telx"
                      },
                      {
                        "code": "us_terremark",
                        "name": "Terremark"
                      },
                      {
                        "code": "us_tinet",
                        "name": "TiNet"
                      },
                      {
                        "code": "us_verizon",
                        "name": "Verizon"
                      },
                      {
                        "code": "us_yahoo",
                        "name": "Yahoo"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid sort order": {
                    "value": {
                      "code": "InvalidSortOrder",
                      "message": "The valid sort order values are asc and desc."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-cdn-edgeHostnames-isps",
        "description": "Obtain a list of ISPs that can be used in <a href=\"#operation/createEdgeHostname\">edge hostname client zone rules</a>.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "Return ISPs whose code or name contains this value."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "in": "query",
            "name": "sortOrder",
            "description": "Order of ISPs returned. Use 'asc' for ascending order or 'desc' for descending order."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "regionCode",
            "description": "Limit returned ISPs to those operating in a particular region. The value of <i>regionCode</i> should be one of the codes representing a region returned by the <a href=\"#operation/get-cdn-edgeHostnames-clientRegions\">client regions API</a>."
          }
        ]
      }
    },
    "/ngadmin/customers/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Specify the ID of a child customer."
        }
      ],
      "get": {
        "summary": "Get details about a customer",
        "tags": [
          "Customer Management"
        ],
        "responses": {
          "200": {
            "description": "The response body contains details about the customer account.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "customerresponse",
                  "type": "object",
                  "description": "Customer account details",
                  "properties": {
                    "customerId": {
                      "type": "integer",
                      "description": "ID of the customer account."
                    },
                    "apiName": {
                      "type": "string",
                      "description": "Admin API login name."
                    },
                    "name": {
                      "type": "string",
                      "description": "Customer name."
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "API key corresponding to the admin API login."
                    },
                    "phone": {
                      "type": "string",
                      "description": "A phone number.\n"
                    },
                    "address": {
                      "title": "address",
                      "type": "object",
                      "description": "Describes a physical address.",
                      "properties": {
                        "line1": {
                          "type": "string",
                          "description": "First line of the address."
                        },
                        "line2": {
                          "type": "string",
                          "description": "Second line of the address."
                        },
                        "city": {
                          "type": "string",
                          "description": "A city."
                        },
                        "state": {
                          "type": "string",
                          "description": "A state or province."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "A postal or zip code."
                        },
                        "country": {
                          "type": "string",
                          "description": "A country."
                        }
                      },
                      "x-examples": {
                        "example-1": {
                          "line1": "My Company",
                          "line2": "123 Main St. #200",
                          "city": "Santa Clara",
                          "state": "CA",
                          "zipcode": "95054",
                          "country": "USA"
                        }
                      }
                    },
                    "configs": {
                      "title": "customerConfigs",
                      "type": "object",
                      "description": "This object contains various limits and settings for a customer.  Customers cannot modify their own settings. Resellers can modify them for their child customers. Resellers can only specify products they have already purchased. If you have special requirements for your account, please contact our support team.",
                      "x-examples": {
                        "example-1": {}
                      },
                      "properties": {
                        "apiRate": {
                          "type": "integer",
                          "default": 64,
                          "description": "Maximum number of API requests permitted in any rolling 1-minute window."
                        },
                        "apiAccountLimit": {
                          "type": "integer",
                          "default": 3,
                          "description": "Maximum number of API accounts that can be created."
                        },
                        "type": {
                          "type": "string",
                          "default": "regular",
                          "description": "Type of customer account.  Resellers can only create customer accounts of type 'regular'.",
                          "enum": [
                            "regular",
                            "reseller"
                          ]
                        },
                        "products": {
                          "type": "array",
                          "description": "Products enabled for the customer. \"CDN\" representing CDN360 and \"ECP\" representing Edge Computing Platform are supported. ",
                          "enum": [
                            "CDN",
                            "ECP'"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "default": "suspended",
                          "description": "Account status. If the status is <i>suspended</i> API calls will fail with status code 403 indicating they are forbidden. Portal logins will also fail.  Child customers of a suspended reseller are <b>not</b> automatically suspended though.",
                          "enum": [
                            "active",
                            "suspended"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the customer.",
                          "maxLength": 1018
                        },
                        "regionalOffice": {
                          "type": "string",
                          "description": "Regional sales office name that satisfies the regular expression [0-9a-zA-Z_-]{1,28}. "
                        },
                        "parentId": {
                          "type": "string",
                          "description": "ID of the parent customer.  Resellers can omit this field when creating a customer. It will be filled in automatically."
                        },
                        "contactLimit": {
                          "type": "integer",
                          "default": 20,
                          "description": "Number of portal user accounts the customer is permitted to have."
                        }
                      },
                      "required": [
                        "regionalOffice"
                      ]
                    },
                    "portalSettings": {
                      "title": "customerPortalSettings",
                      "type": "object",
                      "description": "These settings apply to your users accessing the CDN360 portal.",
                      "x-tags": [
                        "Customer Management"
                      ],
                      "properties": {
                        "enforce2fa": {
                          "type": "boolean",
                          "default": false,
                          "description": "Set to <i>true</i> to use two factor authentication to improve security."
                        },
                        "passwordExpirationDays": {
                          "type": "integer",
                          "default": 90,
                          "description": "Indicates how many days a portal user's password can remain the same before it must be updated. The user will be emailed a warning in advance of the expiration.",
                          "minimum": 0,
                          "maximum": 365
                        },
                        "logoutIdleTime": {
                          "type": "integer",
                          "default": 900,
                          "minimum": 300,
                          "maximum": 7200,
                          "description": "Number of seconds the portal user can be idle before being automatically logged out."
                        },
                        "ipWhiteList": {
                          "type": "array",
                          "default": [
                            "0.0.0.0/0"
                          ],
                          "description": "List of IP addresses from which portal users can log in.  You can specify a range, an individual IP address, or an IP in CIDR notation.  Example: <code>[\"1.1.1.1-1.1.1.8\", \"1.2.3.4\", \"1.5.5.0/24\"]</code>  The default is [\"0.0.0.0/0\"], which permits API calls from all IP addresses. For security, we strongly recommend specifying appropriate IP addresses in your company. Child customers of a reseller can modify this setting to meet their requirements.",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "x-examples": {}
                    },
                    "ipWhiteList": {
                      "type": "array",
                      "default": [
                        "0.0.0.0/0"
                      ],
                      "description": "List of IP addresses from which API calls using API accounts are permitted.  You can specify a range, an individual IP address, or an IP in CIDR notation.  Example: <code>[\"1.1.1.1-1.1.1.8\", \"1.2.3.4\", \"1.5.5.0/24\"]</code>  The default is [\"0.0.0.0/0\"], which permits API calls from all IP addresses. For security, we strongly recommend specifying appropriate IP addresses for your company.\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "chinaBizInfo": {
                      "title": "chinaBizInfo",
                      "type": "object",
                      "description": "This object contains information that is required if the customer plans to deploy to PoPs in mainland China.",
                      "properties": {
                        "category": {
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            999
                          ],
                          "description": "The category indicates the type of customer:\n<table>\n<tr><th>Category</th><th>Description</th></tr>\n<tr><td>1</td><td>military</td></tr>\n<tr><td>2</td><td>government</td></tr>\n<tr><td>3</td><td>insititution</td></tr>\n<tr><td>4</td><td>business</td></tr>\n<tr><td>5</td><td>person</td></tr>\n<tr><td>6</td><td>social group</td></tr>\n<tr><td>999</td><td>others</td></tr>\n</table>"
                        },
                        "idType": {
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            999
                          ],
                          "description": "The idType field indicates a type of ID for the customer. Its value must be specified in the idNumber field.\n<table>\n<tr><th>idType </th><th>Description</th></tr>\n<tr><td>1</td><td>business license number</td></tr>\n<tr><td>2</td><td>ID card</td></tr>\n<tr><td>3</td><td>license of organization code</td></tr>\n<tr><td>4</td><td>certificate of business corporation</td></tr>\n<tr><td>5</td><td>army code</td></tr>\n<tr><td>6</td><td>social group legal person certificate</td></tr>\n<tr><td>7</td><td>passport</td></tr>\n<tr><td>8</td><td>military ID</td></tr>\n<tr><td>9</td><td>mainland travel permit for Taiwan residents</td></tr>\n<tr><td>999</td><td>others</td></tr>\n</table>"
                        },
                        "idNumber": {
                          "type": "string",
                          "description": "An ID number corresponding to the idType that was specified. For example, if idType is 'passport', the idNumber field should be set to the passport number."
                        }
                      }
                    }
                  },
                  "required": [
                    "customerId",
                    "apiName",
                    "name",
                    "apiKey"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "customerId": 123456,
                      "apiName": "myadminapilogin",
                      "name": "The Company",
                      "address": {
                        "line1": "The CompanyCorporation",
                        "line2": "123 Main St. #200",
                        "city": "Santa Clara",
                        "state": "CA",
                        "zipcode": "95054",
                        "country": "USA"
                      },
                      "ipWhiteList": [
                        "0.0.0.0/0"
                      ],
                      "configs": {
                        "parentId": 0,
                        "type": "regular",
                        "products": [
                          "CDN"
                        ],
                        "status": "active",
                        "apiRate": 64,
                        "apiAccountLimit": 3,
                        "regionalOffice": "US",
                        "contactLimit": 20
                      },
                      "portalSettings": {
                        "enforce2fa": false,
                        "passwordExpirationDays": 90,
                        "logoutIdleTime": 900,
                        "ipWhiteList": [
                          "0.0.0.0/0"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid customer.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "code": "InvalidCustomerId",
                      "message": "The specified customer ID does not exist or the caller doesn't have access to this resource."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-ngadmin-customers-ID",
        "description": "Obtain configuration details for a customer."
      },
      "patch": {
        "summary": "Update a customer",
        "tags": [
          "Customer Management"
        ],
        "responses": {
          "200": {
            "description": "The customer account was updated successfully.  The response body will contain the current settings.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "customerresponse",
                  "type": "object",
                  "description": "Customer account details",
                  "properties": {
                    "customerId": {
                      "type": "integer",
                      "description": "ID of the customer account."
                    },
                    "apiName": {
                      "type": "string",
                      "description": "Admin API login name."
                    },
                    "name": {
                      "type": "string",
                      "description": "Customer name."
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "API key corresponding to the admin API login."
                    },
                    "phone": {
                      "type": "string",
                      "description": "A phone number.\n"
                    },
                    "address": {
                      "title": "address",
                      "type": "object",
                      "description": "Describes a physical address.",
                      "properties": {
                        "line1": {
                          "type": "string",
                          "description": "First line of the address."
                        },
                        "line2": {
                          "type": "string",
                          "description": "Second line of the address."
                        },
                        "city": {
                          "type": "string",
                          "description": "A city."
                        },
                        "state": {
                          "type": "string",
                          "description": "A state or province."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "A postal or zip code."
                        },
                        "country": {
                          "type": "string",
                          "description": "A country."
                        }
                      },
                      "x-examples": {
                        "example-1": {
                          "line1": "My Company",
                          "line2": "123 Main St. #200",
                          "city": "Santa Clara",
                          "state": "CA",
                          "zipcode": "95054",
                          "country": "USA"
                        }
                      }
                    },
                    "configs": {
                      "title": "customerConfigs",
                      "type": "object",
                      "description": "This object contains various limits and settings for a customer.  Customers cannot modify their own settings. Resellers can modify them for their child customers. Resellers can only specify products they have already purchased. If you have special requirements for your account, please contact our support team.",
                      "x-examples": {
                        "example-1": {}
                      },
                      "properties": {
                        "apiRate": {
                          "type": "integer",
                          "default": 64,
                          "description": "Maximum number of API requests permitted in any rolling 1-minute window."
                        },
                        "apiAccountLimit": {
                          "type": "integer",
                          "default": 3,
                          "description": "Maximum number of API accounts that can be created."
                        },
                        "type": {
                          "type": "string",
                          "default": "regular",
                          "description": "Type of customer account.  Resellers can only create customer accounts of type 'regular'.",
                          "enum": [
                            "regular",
                            "reseller"
                          ]
                        },
                        "products": {
                          "type": "array",
                          "description": "Products enabled for the customer. \"CDN\" representing CDN360 and \"ECP\" representing Edge Computing Platform are supported. ",
                          "enum": [
                            "CDN",
                            "ECP'"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "default": "suspended",
                          "description": "Account status. If the status is <i>suspended</i> API calls will fail with status code 403 indicating they are forbidden. Portal logins will also fail.  Child customers of a suspended reseller are <b>not</b> automatically suspended though.",
                          "enum": [
                            "active",
                            "suspended"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the customer.",
                          "maxLength": 1018
                        },
                        "regionalOffice": {
                          "type": "string",
                          "description": "Regional sales office name that satisfies the regular expression [0-9a-zA-Z_-]{1,28}. "
                        },
                        "parentId": {
                          "type": "string",
                          "description": "ID of the parent customer.  Resellers can omit this field when creating a customer. It will be filled in automatically."
                        },
                        "contactLimit": {
                          "type": "integer",
                          "default": 20,
                          "description": "Number of portal user accounts the customer is permitted to have."
                        }
                      },
                      "required": [
                        "regionalOffice"
                      ]
                    },
                    "portalSettings": {
                      "title": "customerPortalSettings",
                      "type": "object",
                      "description": "These settings apply to your users accessing the CDN360 portal.",
                      "x-tags": [
                        "Customer Management"
                      ],
                      "properties": {
                        "enforce2fa": {
                          "type": "boolean",
                          "default": false,
                          "description": "Set to <i>true</i> to use two factor authentication to improve security."
                        },
                        "passwordExpirationDays": {
                          "type": "integer",
                          "default": 90,
                          "description": "Indicates how many days a portal user's password can remain the same before it must be updated. The user will be emailed a warning in advance of the expiration.",
                          "minimum": 0,
                          "maximum": 365
                        },
                        "logoutIdleTime": {
                          "type": "integer",
                          "default": 900,
                          "minimum": 300,
                          "maximum": 7200,
                          "description": "Number of seconds the portal user can be idle before being automatically logged out."
                        },
                        "ipWhiteList": {
                          "type": "array",
                          "default": [
                            "0.0.0.0/0"
                          ],
                          "description": "List of IP addresses from which portal users can log in.  You can specify a range, an individual IP address, or an IP in CIDR notation.  Example: <code>[\"1.1.1.1-1.1.1.8\", \"1.2.3.4\", \"1.5.5.0/24\"]</code>  The default is [\"0.0.0.0/0\"], which permits API calls from all IP addresses. For security, we strongly recommend specifying appropriate IP addresses in your company. Child customers of a reseller can modify this setting to meet their requirements.",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "x-examples": {}
                    },
                    "ipWhiteList": {
                      "type": "array",
                      "default": [
                        "0.0.0.0/0"
                      ],
                      "description": "List of IP addresses from which API calls using API accounts are permitted.  You can specify a range, an individual IP address, or an IP in CIDR notation.  Example: <code>[\"1.1.1.1-1.1.1.8\", \"1.2.3.4\", \"1.5.5.0/24\"]</code>  The default is [\"0.0.0.0/0\"], which permits API calls from all IP addresses. For security, we strongly recommend specifying appropriate IP addresses for your company.\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "chinaBizInfo": {
                      "title": "chinaBizInfo",
                      "type": "object",
                      "description": "This object contains information that is required if the customer plans to deploy to PoPs in mainland China.",
                      "properties": {
                        "category": {
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            999
                          ],
                          "description": "The category indicates the type of customer:\n<table>\n<tr><th>Category</th><th>Description</th></tr>\n<tr><td>1</td><td>military</td></tr>\n<tr><td>2</td><td>government</td></tr>\n<tr><td>3</td><td>insititution</td></tr>\n<tr><td>4</td><td>business</td></tr>\n<tr><td>5</td><td>person</td></tr>\n<tr><td>6</td><td>social group</td></tr>\n<tr><td>999</td><td>others</td></tr>\n</table>"
                        },
                        "idType": {
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            999
                          ],
                          "description": "The idType field indicates a type of ID for the customer. Its value must be specified in the idNumber field.\n<table>\n<tr><th>idType </th><th>Description</th></tr>\n<tr><td>1</td><td>business license number</td></tr>\n<tr><td>2</td><td>ID card</td></tr>\n<tr><td>3</td><td>license of organization code</td></tr>\n<tr><td>4</td><td>certificate of business corporation</td></tr>\n<tr><td>5</td><td>army code</td></tr>\n<tr><td>6</td><td>social group legal person certificate</td></tr>\n<tr><td>7</td><td>passport</td></tr>\n<tr><td>8</td><td>military ID</td></tr>\n<tr><td>9</td><td>mainland travel permit for Taiwan residents</td></tr>\n<tr><td>999</td><td>others</td></tr>\n</table>"
                        },
                        "idNumber": {
                          "type": "string",
                          "description": "An ID number corresponding to the idType that was specified. For example, if idType is 'passport', the idNumber field should be set to the passport number."
                        }
                      }
                    }
                  },
                  "required": [
                    "customerId",
                    "apiName",
                    "name",
                    "apiKey"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "customerId": 10000005,
                      "apiName": "companyapi",
                      "apiKey": "abcdefghijklmnopqrstuvwxyz1234",
                      "name": "thecompany",
                      "phone": "123-4568",
                      "address": {},
                      "configs": {
                        "parentId": 0,
                        "type": "regular",
                        "products": [
                          "CDN"
                        ],
                        "status": "active",
                        "apiRate": 64,
                        "apiAccountLimit": 3,
                        "regionalOffice": "US",
                        "contactLimit": 20
                      },
                      "portalSettings": {
                        "enforce2fa": false,
                        "passwordExpirationDays": 90,
                        "logoutIdleTime": 1230,
                        "ipWhiteList": [
                          "0.0.0.0/0"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid input": {
                    "value": {
                      "code": "InvalidInput",
                      "message": "We could not fulfill your request. Please check your input."
                    }
                  },
                  "Invalid API key": {
                    "value": {
                      "code": "InvalidAPIKey",
                      "message": "The only valid value is 'reset'."
                    }
                  },
                  "Invalid portal logout idle time": {
                    "value": {
                      "code": "InvalidPortalLogoutIdleTime",
                      "message": "Invalid portal logout idle time. It must be a number from 300 to 7200."
                    }
                  },
                  "Invalid product update": {
                    "value": {
                      "code": "InvalidProductUpdate",
                      "message": "At least one of the apiAccounts or contacts under this customer has access to the product you are trying to remove. Please revoke the access before unsubscribing the customer from this product."
                    }
                  },
                  "Invalid product": {
                    "value": {
                      "code": "InvalidProduct",
                      "message": "The 'products' list should be a subset of the reseller's product list."
                    }
                  },
                  "Invalid status": {
                    "value": {
                      "code": "InvalidStatus",
                      "message": "The specified status is not supported."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid self update": {
                    "value": {
                      "code": "InvalidSelfUpdateConfig",
                      "message": "You are not authorized to make this change. Please contact your account representative for further instructions."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid customer.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid customer": {
                    "value": {
                      "code": "InvalidCustomerId",
                      "message": "The specified customer ID does not exist or the caller doesn't have access to this resource."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "patch-ngadmin-customers-id",
        "description": "Update a customer account. Settings within the <i>configs</i> field can only be set by a reseller on behalf of a child customer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Customer name."
                  },
                  "apiName": {
                    "type": "string",
                    "description": "Admin API login name. "
                  },
                  "apiKey": {
                    "type": "string",
                    "description": "If specified, the value must be \"reset\". A new key will be generated for the admin API account and must be used for all future API calls using that account.",
                    "enum": [
                      "reset"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "A phone number."
                  },
                  "address": {
                    "title": "address",
                    "type": "object",
                    "description": "Describes a physical address.",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "description": "First line of the address."
                      },
                      "line2": {
                        "type": "string",
                        "description": "Second line of the address."
                      },
                      "city": {
                        "type": "string",
                        "description": "A city."
                      },
                      "state": {
                        "type": "string",
                        "description": "A state or province."
                      },
                      "zipCode": {
                        "type": "string",
                        "description": "A postal or zip code."
                      },
                      "country": {
                        "type": "string",
                        "description": "A country."
                      }
                    },
                    "x-examples": {
                      "example-1": {
                        "line1": "My Company",
                        "line2": "123 Main St. #200",
                        "city": "Santa Clara",
                        "state": "CA",
                        "zipcode": "95054",
                        "country": "USA"
                      }
                    }
                  },
                  "portalSettings": {
                    "title": "customerPortalSettings",
                    "type": "object",
                    "description": "These settings apply to your users accessing the CDN360 portal.",
                    "x-tags": [
                      "Customer Management"
                    ],
                    "properties": {
                      "enforce2fa": {
                        "type": "boolean",
                        "default": false,
                        "description": "Set to <i>true</i> to use two factor authentication to improve security."
                      },
                      "passwordExpirationDays": {
                        "type": "integer",
                        "default": 90,
                        "description": "Indicates how many days a portal user's password can remain the same before it must be updated. The user will be emailed a warning in advance of the expiration.",
                        "minimum": 0,
                        "maximum": 365
                      },
                      "logoutIdleTime": {
                        "type": "integer",
                        "default": 900,
                        "minimum": 300,
                        "maximum": 7200,
                        "description": "Number of seconds the portal user can be idle before being automatically logged out."
                      },
                      "ipWhiteList": {
                        "type": "array",
                        "default": [
                          "0.0.0.0/0"
                        ],
                        "description": "List of IP addresses from which portal users can log in.  You can specify a range, an individual IP address, or an IP in CIDR notation.  Example: <code>[\"1.1.1.1-1.1.1.8\", \"1.2.3.4\", \"1.5.5.0/24\"]</code>  The default is [\"0.0.0.0/0\"], which permits API calls from all IP addresses. For security, we strongly recommend specifying appropriate IP addresses in your company. Child customers of a reseller can modify this setting to meet their requirements.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "x-examples": {}
                  },
                  "configs": {
                    "title": "customerConfigs",
                    "type": "object",
                    "description": "This object contains various limits and settings for a customer.  Customers cannot modify their own settings. Resellers can modify them for their child customers. Resellers can only specify products they have already purchased. If you have special requirements for your account, please contact our support team.",
                    "x-examples": {
                      "example-1": {}
                    },
                    "properties": {
                      "apiRate": {
                        "type": "integer",
                        "default": 64,
                        "description": "Maximum number of API requests permitted in any rolling 1-minute window."
                      },
                      "apiAccountLimit": {
                        "type": "integer",
                        "default": 3,
                        "description": "Maximum number of API accounts that can be created."
                      },
                      "type": {
                        "type": "string",
                        "default": "regular",
                        "description": "Type of customer account.  Resellers can only create customer accounts of type 'regular'.",
                        "enum": [
                          "regular",
                          "reseller"
                        ]
                      },
                      "products": {
                        "type": "array",
                        "description": "Products enabled for the customer. \"CDN\" representing CDN360 and \"ECP\" representing Edge Computing Platform are supported. ",
                        "enum": [
                          "CDN",
                          "ECP'"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "status": {
                        "type": "string",
                        "default": "suspended",
                        "description": "Account status. If the status is <i>suspended</i> API calls will fail with status code 403 indicating they are forbidden. Portal logins will also fail.  Child customers of a suspended reseller are <b>not</b> automatically suspended though.",
                        "enum": [
                          "active",
                          "suspended"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the customer.",
                        "maxLength": 1018
                      },
                      "regionalOffice": {
                        "type": "string",
                        "description": "Regional sales office name that satisfies the regular expression [0-9a-zA-Z_-]{1,28}. "
                      },
                      "parentId": {
                        "type": "string",
                        "description": "ID of the parent customer.  Resellers can omit this field when creating a customer. It will be filled in automatically."
                      },
                      "contactLimit": {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of portal user accounts the customer is permitted to have."
                      }
                    },
                    "required": [
                      "regionalOffice"
                    ]
                  },
                  "ipWhiteList": {
                    "type": "array",
                    "default": [
                      "0.0.0.0/0"
                    ],
                    "description": "List of IP addresses from which API calls using API accounts are permitted.  You can specify a range, an individual IP address, or an IP in CIDR notation.  Example: <code>[\"1.1.1.1-1.1.1.8\", \"1.2.3.4\", \"1.5.5.0/24\"]</code>  The default is [\"0.0.0.0/0\"], which permits API calls from all IP addresses. For security, we strongly recommend specifying appropriate IP addresses in your company. Child customers of a reseller can modify this setting to meet their requirements.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "chinaBizInfo": {
                    "title": "chinaBizInfo",
                    "type": "object",
                    "description": "This object contains information that is required if the customer plans to deploy to PoPs in mainland China.",
                    "properties": {
                      "category": {
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          999
                        ],
                        "description": "The category indicates the type of customer:\n<table>\n<tr><th>Category</th><th>Description</th></tr>\n<tr><td>1</td><td>military</td></tr>\n<tr><td>2</td><td>government</td></tr>\n<tr><td>3</td><td>insititution</td></tr>\n<tr><td>4</td><td>business</td></tr>\n<tr><td>5</td><td>person</td></tr>\n<tr><td>6</td><td>social group</td></tr>\n<tr><td>999</td><td>others</td></tr>\n</table>"
                      },
                      "idType": {
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7,
                          8,
                          9,
                          999
                        ],
                        "description": "The idType field indicates a type of ID for the customer. Its value must be specified in the idNumber field.\n<table>\n<tr><th>idType </th><th>Description</th></tr>\n<tr><td>1</td><td>business license number</td></tr>\n<tr><td>2</td><td>ID card</td></tr>\n<tr><td>3</td><td>license of organization code</td></tr>\n<tr><td>4</td><td>certificate of business corporation</td></tr>\n<tr><td>5</td><td>army code</td></tr>\n<tr><td>6</td><td>social group legal person certificate</td></tr>\n<tr><td>7</td><td>passport</td></tr>\n<tr><td>8</td><td>military ID</td></tr>\n<tr><td>9</td><td>mainland travel permit for Taiwan residents</td></tr>\n<tr><td>999</td><td>others</td></tr>\n</table>"
                      },
                      "idNumber": {
                        "type": "string",
                        "description": "An ID number corresponding to the idType that was specified. For example, if idType is 'passport', the idNumber field should be set to the passport number."
                      }
                    }
                  }
                }
              },
              "examples": {
                "Enable two factor authentication for portal users": {
                  "value": {
                    "portalSettings": {
                      "enforce2fa": true
                    }
                  }
                }
              }
            }
          },
          "description": "Specify the fields to be updated.  Omitted fields will be unchanged. Settings within the <i>configs</i> field can only be set by a reseller on behalf of a child customer."
        }
      },
      "delete": {
        "summary": "Delete a customer",
        "operationId": "delete-ngadmin-customers-id",
        "responses": {
          "204": {
            "description": "The customer was deleted."
          },
          "404": {
            "description": "The customer could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid customer ID": {
                    "value": {
                      "code": "InvalidCustomerId",
                      "message": "The specified customer ID does not exist or the caller doesn't have access to this resource."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The customer could not be deleted because it is still configured with a product. <a href=\"#operation/patch-ngadmin-customers-id\">Update the customer</a> to remove the product before trying again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Has products": {
                    "value": {
                      "code": "HasProducts",
                      "message": "This customer still has access to at least one product. The caller has to call update customer API first to remove all product access."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Resellers can delete a child customer using this API. Products must be removed from the customer before it can be deleted.",
        "tags": [
          "Customer Management"
        ]
      }
    },
    "/ngadmin/customers": {
      "parameters": [],
      "post": {
        "summary": "Create a customer",
        "operationId": "post-ngadmin-customers",
        "responses": {
          "201": {
            "description": "The customer account was successfully created. The response body will have details including default values of settings not explicitly specified in the request body. \nThe Location header will also include a link to the customer account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "type": "integer",
                      "description": "ID of the new customer.",
                      "minimum": 1
                    },
                    "apiName": {
                      "type": "string",
                      "description": "Admin API login name."
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "API key ccorresponding to the admin API account."
                    },
                    "name": {
                      "type": "string",
                      "description": "Customer name."
                    },
                    "address": {
                      "title": "address",
                      "type": "object",
                      "description": "Describes a physical address.",
                      "properties": {
                        "line1": {
                          "type": "string",
                          "description": "First line of the address."
                        },
                        "line2": {
                          "type": "string",
                          "description": "Second line of the address."
                        },
                        "city": {
                          "type": "string",
                          "description": "A city."
                        },
                        "state": {
                          "type": "string",
                          "description": "A state or province."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "A postal or zip code."
                        },
                        "country": {
                          "type": "string",
                          "description": "A country."
                        }
                      },
                      "x-examples": {
                        "example-1": {
                          "line1": "My Company",
                          "line2": "123 Main St. #200",
                          "city": "Santa Clara",
                          "state": "CA",
                          "zipcode": "95054",
                          "country": "USA"
                        }
                      }
                    },
                    "responsiblePerson": {
                      "type": "string",
                      "description": "Name of a person responsible for the customer account.\n"
                    },
                    "configs": {
                      "title": "customerConfigs",
                      "type": "object",
                      "description": "This object contains various limits and settings for a customer.  Customers cannot modify their own settings. Resellers can modify them for their child customers. Resellers can only specify products they have already purchased. If you have special requirements for your account, please contact our support team.",
                      "x-examples": {
                        "example-1": {}
                      },
                      "properties": {
                        "apiRate": {
                          "type": "integer",
                          "default": 64,
                          "description": "Maximum number of API requests permitted in any rolling 1-minute window."
                        },
                        "apiAccountLimit": {
                          "type": "integer",
                          "default": 3,
                          "description": "Maximum number of API accounts that can be created."
                        },
                        "type": {
                          "type": "string",
                          "default": "regular",
                          "description": "Type of customer account.  Resellers can only create customer accounts of type 'regular'.",
                          "enum": [
                            "regular",
                            "reseller"
                          ]
                        },
                        "products": {
                          "type": "array",
                          "description": "Products enabled for the customer. \"CDN\" representing CDN360 and \"ECP\" representing Edge Computing Platform are supported. ",
                          "enum": [
                            "CDN",
                            "ECP'"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "default": "suspended",
                          "description": "Account status. If the status is <i>suspended</i> API calls will fail with status code 403 indicating they are forbidden. Portal logins will also fail.  Child customers of a suspended reseller are <b>not</b> automatically suspended though.",
                          "enum": [
                            "active",
                            "suspended"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the customer.",
                          "maxLength": 1018
                        },
                        "regionalOffice": {
                          "type": "string",
                          "description": "Regional sales office name that satisfies the regular expression [0-9a-zA-Z_-]{1,28}. "
                        },
                        "parentId": {
                          "type": "string",
                          "description": "ID of the parent customer.  Resellers can omit this field when creating a customer. It will be filled in automatically."
                        },
                        "contactLimit": {
                          "type": "integer",
                          "default": 20,
                          "description": "Number of portal user accounts the customer is permitted to have."
                        }
                      },
                      "required": [
                        "regionalOffice"
                      ]
                    },
                    "portalSettings": {
                      "title": "customerPortalSettings",
                      "type": "object",
                      "description": "These settings apply to your users accessing the CDN360 portal.",
                      "x-tags": [
                        "Customer Management"
                      ],
                      "properties": {
                        "enforce2fa": {
                          "type": "boolean",
                          "default": false,
                          "description": "Set to <i>true</i> to use two factor authentication to improve security."
                        },
                        "passwordExpirationDays": {
                          "type": "integer",
                          "default": 90,
                          "description": "Indicates how many days a portal user's password can remain the same before it must be updated. The user will be emailed a warning in advance of the expiration.",
                          "minimum": 0,
                          "maximum": 365
                        },
                        "logoutIdleTime": {
                          "type": "integer",
                          "default": 900,
                          "minimum": 300,
                          "maximum": 7200,
                          "description": "Number of seconds the portal user can be idle before being automatically logged out."
                        },
                        "ipWhiteList": {
                          "type": "array",
                          "default": [
                            "0.0.0.0/0"
                          ],
                          "description": "List of IP addresses from which portal users can log in.  You can specify a range, an individual IP address, or an IP in CIDR notation.  Example: <code>[\"1.1.1.1-1.1.1.8\", \"1.2.3.4\", \"1.5.5.0/24\"]</code>  The default is [\"0.0.0.0/0\"], which permits API calls from all IP addresses. For security, we strongly recommend specifying appropriate IP addresses in your company. Child customers of a reseller can modify this setting to meet their requirements.",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "x-examples": {}
                    },
                    "ipWhiteList": {
                      "type": "array",
                      "description": "List of IP addresses from which API calls using API accounts are permitted.  You can specify a range, an individual IP address, or an IP in CIDR notation.  Example: <code>[\"1.1.1.1-1.1.1.8\", \"1.2.3.4\", \"1.5.5.0/24\"]</code>  The default is [\"0.0.0.0/0\"], which permits API calls from all IP addresses. For security, we strongly recommend specifying appropriate IP addresses for your company.\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "phone": {
                      "type": "string",
                      "description": "A phone number for the customer."
                    }
                  },
                  "required": [
                    "customerId",
                    "apiName",
                    "apiKey",
                    "name"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "customerId": 1234567890,
                      "apiName": "TestCustomer",
                      "apiKey": "uwo8mikJ1PkSzgxDjs1i6ohsrd8Tad",
                      "name": "Nata Inc.",
                      "phone": 123456789,
                      "address": {
                        "line1": "123 Main St.",
                        "line2": "Suite 456",
                        "city": "Santa Clara",
                        "state": "CA",
                        "zipcode": "45678",
                        "country": "USA"
                      },
                      "emailAddress": "testcustomer@domain.com",
                      "ipWhiteList": [
                        "0.0.0.0/0"
                      ],
                      "configs": {
                        "parentId": 12345,
                        "type": "regular",
                        "products": [
                          "CDN"
                        ],
                        "status": "active",
                        "regionalOffice": "US",
                        "apiRate": 64,
                        "description": "my new customer",
                        "apiAccountLimit": 10,
                        "contactLimit": 20
                      },
                      "portalSettings": {
                        "enforce2fa": true,
                        "passwordExpirationDays": 41,
                        "logoutIdleTime": 355,
                        "ipWhiteList": [
                          "0.0.0.0/0"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The Location header's value will refer to the newly created customer. Example:  https://ngapi.cdnetworks.com/ngadmin/customers/12345678",
                "required": true
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "API name empty": {
                    "value": {
                      "code": "APINameEmpty",
                      "message": "The apiName field cannot be empty."
                    }
                  },
                  "Name empty": {
                    "value": {
                      "code": "NameEmpty",
                      "message": "The name field cannot be empty."
                    }
                  },
                  "Invalid email": {
                    "value": {
                      "code": "InvalidEmail",
                      "message": "The email address format is not correct."
                    }
                  },
                  "Invalid product": {
                    "value": {
                      "code": "InvalidProduct",
                      "message": "The 'products' list should be a subset of the reseller's product list."
                    }
                  },
                  "Invalid configs field": {
                    "value": {
                      "code": "InvalidConfigs",
                      "message": "The configs field cannot be null or empty since it has required fields."
                    }
                  },
                  "InvalidRegionalOffice": {
                    "value": {
                      "code": "InvalidRegionalOffice",
                      "message": "The value for regionalOffice is not specified or invalid."
                    }
                  },
                  "Invalid contact limit": {
                    "value": {
                      "code": "InvalidContactLimit",
                      "message": "The value for limit should be non-negative."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Access denied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "This user is not allowed to perform this request."
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Resellers can use this API to create a child customer. If the customer requires deployment to PoPs in mainland China the reseller is responsible for collecting and verifying the phone, address, responsiblePerson, and chinaBizInfo fields for the customer before enabling deployment to China.",
        "tags": [
          "Customer Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiName": {
                    "type": "string",
                    "description": "Administrative API account name."
                  },
                  "name": {
                    "type": "string",
                    "description": "Customer name."
                  },
                  "emailAddress": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address for the customer."
                  },
                  "responsiblePerson": {
                    "type": "string",
                    "description": "Name of a person responsible for the customer account."
                  },
                  "ipWhiteList": {
                    "type": "array",
                    "description": "List of IP addresses from which API calls using API accounts are permitted.  You can specify a range, an individual IP address, or an IP in CIDR notation.  Example: <code>[\"1.1.1.1-1.1.1.8\", \"1.2.3.4\", \"1.5.5.0/24\"]</code>  The default is [\"0.0.0.0/0\"], which permits API calls from all IP addresses. For security, we strongly recommend specifying appropriate IP addresses in your company. Child customers of a reseller can modify this setting to meet their requirements.\n",
                    "items": {
                      "type": "string"
                    }
                  },
                  "portalSettings": {
                    "title": "customerPortalSettings",
                    "type": "object",
                    "description": "These settings apply to your users accessing the CDN360 portal.",
                    "x-tags": [
                      "Customer Management"
                    ],
                    "properties": {
                      "enforce2fa": {
                        "type": "boolean",
                        "default": false,
                        "description": "Set to <i>true</i> to use two factor authentication to improve security."
                      },
                      "passwordExpirationDays": {
                        "type": "integer",
                        "default": 90,
                        "description": "Indicates how many days a portal user's password can remain the same before it must be updated. The user will be emailed a warning in advance of the expiration.",
                        "minimum": 0,
                        "maximum": 365
                      },
                      "logoutIdleTime": {
                        "type": "integer",
                        "default": 900,
                        "minimum": 300,
                        "maximum": 7200,
                        "description": "Number of seconds the portal user can be idle before being automatically logged out."
                      },
                      "ipWhiteList": {
                        "type": "array",
                        "default": [
                          "0.0.0.0/0"
                        ],
                        "description": "List of IP addresses from which portal users can log in.  You can specify a range, an individual IP address, or an IP in CIDR notation.  Example: <code>[\"1.1.1.1-1.1.1.8\", \"1.2.3.4\", \"1.5.5.0/24\"]</code>  The default is [\"0.0.0.0/0\"], which permits API calls from all IP addresses. For security, we strongly recommend specifying appropriate IP addresses in your company. Child customers of a reseller can modify this setting to meet their requirements.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "x-examples": {}
                  },
                  "configs": {
                    "title": "customerConfigs",
                    "type": "object",
                    "description": "This object contains various limits and settings for a customer.  Customers cannot modify their own settings. Resellers can modify them for their child customers. Resellers can only specify products they have already purchased. If you have special requirements for your account, please contact our support team.",
                    "x-examples": {
                      "example-1": {}
                    },
                    "properties": {
                      "apiRate": {
                        "type": "integer",
                        "default": 64,
                        "description": "Maximum number of API requests permitted in any rolling 1-minute window."
                      },
                      "apiAccountLimit": {
                        "type": "integer",
                        "default": 3,
                        "description": "Maximum number of API accounts that can be created."
                      },
                      "type": {
                        "type": "string",
                        "default": "regular",
                        "description": "Type of customer account.  Resellers can only create customer accounts of type 'regular'.",
                        "enum": [
                          "regular",
                          "reseller"
                        ]
                      },
                      "products": {
                        "type": "array",
                        "description": "Products enabled for the customer. \"CDN\" representing CDN360 and \"ECP\" representing Edge Computing Platform are supported. ",
                        "enum": [
                          "CDN",
                          "ECP'"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "status": {
                        "type": "string",
                        "default": "suspended",
                        "description": "Account status. If the status is <i>suspended</i> API calls will fail with status code 403 indicating they are forbidden. Portal logins will also fail.  Child customers of a suspended reseller are <b>not</b> automatically suspended though.",
                        "enum": [
                          "active",
                          "suspended"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the customer.",
                        "maxLength": 1018
                      },
                      "regionalOffice": {
                        "type": "string",
                        "description": "Regional sales office name that satisfies the regular expression [0-9a-zA-Z_-]{1,28}. "
                      },
                      "parentId": {
                        "type": "string",
                        "description": "ID of the parent customer.  Resellers can omit this field when creating a customer. It will be filled in automatically."
                      },
                      "contactLimit": {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of portal user accounts the customer is permitted to have."
                      }
                    },
                    "required": [
                      "regionalOffice"
                    ]
                  },
                  "phone": {
                    "type": "string",
                    "description": "A phone number for the customer."
                  },
                  "address": {
                    "title": "address",
                    "type": "object",
                    "description": "Describes a physical address.",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "description": "First line of the address."
                      },
                      "line2": {
                        "type": "string",
                        "description": "Second line of the address."
                      },
                      "city": {
                        "type": "string",
                        "description": "A city."
                      },
                      "state": {
                        "type": "string",
                        "description": "A state or province."
                      },
                      "zipCode": {
                        "type": "string",
                        "description": "A postal or zip code."
                      },
                      "country": {
                        "type": "string",
                        "description": "A country."
                      }
                    },
                    "x-examples": {
                      "example-1": {
                        "line1": "My Company",
                        "line2": "123 Main St. #200",
                        "city": "Santa Clara",
                        "state": "CA",
                        "zipcode": "95054",
                        "country": "USA"
                      }
                    }
                  },
                  "chinaBizInfo": {
                    "title": "chinaBizInfo",
                    "type": "object",
                    "description": "This object contains information that is required if the customer plans to deploy to PoPs in mainland China.",
                    "properties": {
                      "category": {
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          999
                        ],
                        "description": "The category indicates the type of customer:\n<table>\n<tr><th>Category</th><th>Description</th></tr>\n<tr><td>1</td><td>military</td></tr>\n<tr><td>2</td><td>government</td></tr>\n<tr><td>3</td><td>insititution</td></tr>\n<tr><td>4</td><td>business</td></tr>\n<tr><td>5</td><td>person</td></tr>\n<tr><td>6</td><td>social group</td></tr>\n<tr><td>999</td><td>others</td></tr>\n</table>"
                      },
                      "idType": {
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7,
                          8,
                          9,
                          999
                        ],
                        "description": "The idType field indicates a type of ID for the customer. Its value must be specified in the idNumber field.\n<table>\n<tr><th>idType </th><th>Description</th></tr>\n<tr><td>1</td><td>business license number</td></tr>\n<tr><td>2</td><td>ID card</td></tr>\n<tr><td>3</td><td>license of organization code</td></tr>\n<tr><td>4</td><td>certificate of business corporation</td></tr>\n<tr><td>5</td><td>army code</td></tr>\n<tr><td>6</td><td>social group legal person certificate</td></tr>\n<tr><td>7</td><td>passport</td></tr>\n<tr><td>8</td><td>military ID</td></tr>\n<tr><td>9</td><td>mainland travel permit for Taiwan residents</td></tr>\n<tr><td>999</td><td>others</td></tr>\n</table>"
                      },
                      "idNumber": {
                        "type": "string",
                        "description": "An ID number corresponding to the idType that was specified. For example, if idType is 'passport', the idNumber field should be set to the passport number."
                      }
                    }
                  }
                },
                "required": [
                  "apiName",
                  "name",
                  "emailAddress"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "configs": {
                      "regionalOffice": "US",
                      "apiRate": "64",
                      "description": "my new customer",
                      "apiAccountLimit": "10",
                      "type": "regular",
                      "status": "active"
                    },
                    "apiName": "TestCustomer",
                    "emailAddress": "testcustomer@domain.com",
                    "address": {
                      "zipcode": "45678",
                      "country": "USA",
                      "city": "Santa Clara",
                      "state": "CA",
                      "line2": "Suite 456",
                      "line1": "123 Main St."
                    },
                    "phone": 123456789,
                    "name": "Nata Inc.",
                    "portalSettings": {
                      "logoutIdleTime": "355",
                      "enforce2fa": true,
                      "passwordExpirationDays": "41"
                    }
                  }
                }
              }
            }
          },
          "description": "The request body describes the new customer account."
        }
      },
      "get": {
        "summary": "Get list of customers",
        "tags": [
          "Customer Management"
        ],
        "responses": {
          "200": {
            "description": "The response contains a list of customers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Number of customers.",
                      "minimum": 0
                    },
                    "customers": {
                      "type": "array",
                      "description": "List of customers.",
                      "items": {
                        "type": "object",
                        "description": "Summarizes a single customer account.",
                        "properties": {
                          "customerId": {
                            "type": "integer",
                            "description": "Customer ID. Pass it to the <a href=\"#operation/get-ngadmin-customers-ID\">Get Customer Details API</a> to retrieve more information.",
                            "minimum": 0
                          },
                          "parentId": {
                            "type": "integer",
                            "description": "ID of the parent customer.",
                            "minimum": 0
                          },
                          "apiName": {
                            "type": "string",
                            "description": "Administrator API account name."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the customer."
                          },
                          "status": {
                            "type": "string",
                            "description": "Account status.",
                            "enum": [
                              "active",
                              "suspended"
                            ]
                          },
                          "creationTime": {
                            "type": "string",
                            "description": "RFC 3339 date indicating when the customer account was created."
                          },
                          "lastUpdatTime": {
                            "type": "string",
                            "description": "RFC 3339 date indicating when the customer account was last updated."
                          },
                          "type": {
                            "type": "string",
                            "description": "Indicates the type of account.",
                            "enum": [
                              "regular"
                            ]
                          },
                          "phone": {
                            "type": "string",
                            "description": "Phone number of the customer."
                          },
                          "regionalOffice": {
                            "type": "string",
                            "description": "Regional sales office name that satisfies the regular expression [0-9a-zA-Z_-]{1,28}. "
                          }
                        },
                        "required": [
                          "customerId",
                          "parentId",
                          "apiName",
                          "name",
                          "status",
                          "creationTime",
                          "lastUpdatTime",
                          "type",
                          "phone",
                          "regionalOffice"
                        ]
                      }
                    }
                  },
                  "required": [
                    "count"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "customers": [
                        {
                          "customerId": 12345678,
                          "parentId": 10005611,
                          "apiName": "resellerchildapiname",
                          "name": "reseller child #1",
                          "status": "active",
                          "creationTime": "2019-12-09T21:30:32Z",
                          "lastUpdateTime": "2019-12-10T23:26:41Z",
                          "type": "regular",
                          "phone": "",
                          "regionalOffice": "East"
                        },
                        {
                          "customerId": 20006185,
                          "parentId": 10005611,
                          "apiName": "resellerchild2apiname",
                          "name": "reseller child #2",
                          "status": "active",
                          "creationTime": "2020-02-20T15:20:37Z",
                          "lastUpdateTime": "2020-02-20T15:20:37Z",
                          "type": "regular",
                          "phone": "123456789",
                          "regionalOffice": "West"
                        }
                      ],
                      "count": 2
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid list limit": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be between 1 and 200, inclusive."
                    }
                  },
                  "Invalid list offset": {
                    "value": {
                      "code": "InvalidListOffset",
                      "message": "The offset must be a valid non-negative integer."
                    }
                  },
                  "Invalid URL": {
                    "value": {
                      "code": "InvalidUrl",
                      "message": "Invalid ids : a"
                    }
                  },
                  "Invalid status": {
                    "value": {
                      "code": "InvalidStatus",
                      "message": "The specified status is not supported."
                    }
                  },
                  "Invalid product": {
                    "value": {
                      "code": "InvalidProduct",
                      "message": "One or more product names are not valid."
                    }
                  },
                  "Invalid sort by": {
                    "value": {
                      "code": "InvalidSortBy",
                      "message": "The valid sort by values for this endpoint are 'creationTime', 'lastUpdateTime'."
                    }
                  },
                  "Invalid sort order": {
                    "value": {
                      "code": "InvalidSortOrder",
                      "message": "The valid sort order values are asc and desc."
                    }
                  },
                  "Invalid regional offices": {
                    "value": {
                      "code": "InvalidRegionalOffices",
                      "message": "The value for regionalOffices is invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "The API call is not permitted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Access Denied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "This user is not allowed to perform this request."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-ngadmin-customers",
        "description": "<b>Resellers</b> can use this API to get a list of their child customers. Query parameters filter results.\n",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "default": "0",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Indicates the first item to return. The default is \"0\"."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of customers to return. The default is to return all customers."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "Keyword to search for in the customerId, apiName, name, and description fields of customer accounts."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "ids",
            "description": "Comma-separated list of IDs of customers to return."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "suspended"
              ],
              "default": "active"
            },
            "in": "query",
            "name": "status",
            "description": "Return customers with particular status."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "products",
            "description": "Comma-separated list of products which can include 'CDN' representing CDN360 and 'ECP' representing Edge Computing Platform."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "creationTime",
                "lastUpdateTime"
              ],
              "default": "creationTime"
            },
            "in": "query",
            "name": "sortBy",
            "description": "Sort accounts by their creation time or when they were last updated."
          },
          {
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "sortOrder",
            "description": "Order of customers returned by the API, either <i>asc</i> for ascending or <i>desc</i> for descending."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "regionalOffices",
            "description": "Comma-separated list of regional offices of customers to return. A case insensitive search for the regional offices will be done.  You can specify a value ending with an asterisk character, '*', in which case all customers whose regional offices begin with the preceding characters will be returned."
          }
        ]
      }
    },
    "/cdn/edgeHostnames/clientRegions": {
      "get": {
        "summary": "Get client regions",
        "tags": [
          "Edge Hostname Management"
        ],
        "responses": {
          "200": {
            "description": "The response body contains a list of regions. You can specify a region's code in an edge hostname's client zone rule.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "A code representing a region."
                      },
                      "name": {
                        "type": "string",
                        "description": "A description of the region.\n"
                      }
                    },
                    "required": [
                      "code",
                      "name"
                    ]
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "code": "euna",
                        "name": "Europe & North America"
                      },
                      {
                        "code": "na",
                        "name": "North America"
                      },
                      {
                        "code": "oc.as",
                        "name": "American Samoa"
                      },
                      {
                        "code": "sa",
                        "name": "South America, Antarctica"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid sort order": {
                    "value": {
                      "code": "InvalidSortOrder",
                      "message": "The valid sort order values are asc and desc."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-cdn-edgeHostnames-clientRegions",
        "description": "Get a list of client regions that can be used in <a href=\"#operation/createEdgeHostname\">edge hostname client zone rules</a>. Query parameters allow you to filter and sort the results.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "description": "Return regions whose code or name contains the specified value.\n"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "in": "query",
            "name": "sortOrder",
            "description": "Order of client regions returned. Use 'asc' for ascending order or 'desc' for descending order."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "ispCode",
            "description": "Limit the returned regions to those where an ISP operates. The value should be one of the ISP codes returned by the <a href=\"#operation/get-cdn-edgeHostnames-isps\">ISPs API</a>."
          }
        ]
      }
    },
    "/ngadmin/apicalls": {
      "get": {
        "summary": "Retrieve a list of API calls that have been made",
        "tags": [
          "API Call History"
        ],
        "responses": {
          "200": {
            "description": "The response body contains a summary of API calls that have been made.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of available API calls. This may be larger than the number actually returned."
                    },
                    "apiCalls": {
                      "type": "array",
                      "description": "A list of API calls.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiRequestId": {
                            "type": "string",
                            "description": "A unique ID representing the API call."
                          },
                          "requestTimestamp": {
                            "type": "string",
                            "description": "RFC 3339 date with UTC time that indicates when the API call was made. Example: \"2020-04-24T20:09:15Z\""
                          },
                          "requestURL": {
                            "type": "string",
                            "description": "URL that was requested."
                          },
                          "requestMethod": {
                            "type": "string",
                            "description": "Indicates the HTTP method that was used. Example:  \"GET\""
                          },
                          "isSafe": {
                            "type": "boolean",
                            "description": "A value of <i>true</i> indicates the API call is read-only and does not modify any resource. A value of <i>false</i> means a modification can occur.  For example, a call to create or deploy a property is not safe, so <i>false</i> would be returned."
                          },
                          "responseCode": {
                            "type": "integer",
                            "description": "HTTP response code for the API call."
                          },
                          "onBehalfOf": {
                            "type": "string",
                            "description": "A nonempty value indicates that an API call was made on your behalf. For example, the CDN360 support team may have helped you with configuration."
                          },
                          "apiName": {
                            "type": "string",
                            "description": "Indicates the API account name used in the API call. This field will be omitted if the admin API account is used."
                          }
                        },
                        "required": [
                          "apiRequestId",
                          "requestTimestamp",
                          "requestURL",
                          "requestMethod",
                          "isSafe",
                          "responseCode"
                        ]
                      }
                    }
                  },
                  "required": [
                    "count",
                    "apiCalls"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "count": 570,
                      "apiCalls": [
                        {
                          "apiRequestId": "2d99b9d962847b3f",
                          "requestTimestamp": "2020-04-24T20:09:15Z",
                          "requestURL": "https://ngapi.cdnetworks.com/ngadmin/apicalls?limit=5",
                          "requestMethod": "GET",
                          "isSafe": true,
                          "responseCode": 0
                        },
                        {
                          "apiRequestId": "94d2b2168fabccb7",
                          "requestTimestamp": "2020-04-24T20:09:06Z",
                          "requestURL": "https://ngapi.cdnetworks.com/cdnapi/certificates?offset=0&limit=10&search=&sortOrder=desc",
                          "requestMethod": "GET",
                          "isSafe": true,
                          "apiName": "myapiname",
                          "responseCode": 200
                        },
                        {
                          "apiRequestId": "97f8af300ff5a982",
                          "requestTimestamp": "2020-04-24T20:09:02Z",
                          "requestURL": "https://ngapi.cdnetworks.com/cdnapi/properties/2b83a6aab4b4fa93837df8eb/versions/latest",
                          "requestMethod": "GET",
                          "isSafe": true,
                          "apiName": "myapiname",
                          "responseCode": 200
                        },
                        {
                          "apiRequestId": "f291e3014bd06216",
                          "requestTimestamp": "2020-04-24T20:09:02Z",
                          "requestURL": "https://ngapi.cdnetworks.com/cdnapi/properties/2b83a6aab4b4fa93837df8eb",
                          "requestMethod": "GET",
                          "isSafe": true,
                          "apiName": "myapiname2",
                          "responseCode": 200
                        },
                        {
                          "apiRequestId": "f03ca108dd17d342",
                          "requestTimestamp": "2020-04-24T20:09:02Z",
                          "requestURL": "https://ngapi.cdnetworks.com/cdnapi/properties/2b83a6aab4b4fa93837df8eb/versions?offset=0&limit=100",
                          "requestMethod": "GET",
                          "isSafe": true,
                          "apiName": "myapiname",
                          "responseCode": 200
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid list limit": {
                    "value": {
                      "code": "InvalidListLimit",
                      "message": "The value of limit should be between 1 and 200, inclusive."
                    }
                  },
                  "Invalid URL": {
                    "value": {
                      "code": "InvalidUrl",
                      "message": "Invalid safe : abc"
                    }
                  },
                  "Invalid status code": {
                    "value": {
                      "code": "InvalidStatusCode",
                      "message": "The status code 'abc' is invalid."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-ngadmin-apicalls",
        "description": "Retrieve a list of recent API calls that have been made by you or on your behalf. API calls triggered by portal users are included as well. Query parameters allow you to filter results.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "POST",
                "PATCH",
                "DELETE",
                "PUT"
              ]
            },
            "in": "query",
            "name": "method",
            "description": "Filter results by HTTP method. Example: \"PATCH\"."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "path",
            "description": "Specify the path portion of a URI to filter out calls to a particular path. For example, to get a list of calls to property API endpoints using https://ngapi.cdnetworks.com/cdn/properties, you would specify \"path=/cdn/properties\"."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "in": "query",
            "name": "safe",
            "description": "Filter results by whether they are considered safe or not. Safe calls do not make changes to resources."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "caller",
            "description": "Filter results by specifying the API login name or API  account ID. You can get IDs by obtaining a <a href=\"#operation/get-ngadmin-apiAccounts\">list of your API accounts</a>."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "onbehalfof",
            "description": "The value can be a customer ID to return API calls made on behalf of that customer, <i>none</i> to fetch API calls made directly or through the portal,  or <i>any</i> to fetch calls made on behalf of any customer.  The last option would only apply if you are a reseller."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "description": "Filter API calls by specifying a comma-separated list of HTTP response status codes. You can also specify individual status codes such as \"200\" or \"404\". You can also  pass \"2xx\", \"3xx\", \"4xx\", or \"5xx\" to request all API calls whose response status codes begin with the first digit. For example, \"2xx\" will include API calls whose status were \"200\", \"201\", and \"204\"."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 format date indicating the beginning of the time period when API calls were made. Example: <code>startdate=2019-10-30T00:00:00Z</code> "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period when API calls were made. Example: <code>startdate=2019-10-30T00:00:00Z</code> "
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "description": "Indicates the first item to return. The default is \"0\"."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 100
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of API calls to return. The default is to return up to 100 calls."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "self-only",
                "children-only",
                "self+children"
              ]
            },
            "in": "header",
            "name": "Report-Range",
            "description": "If you are a reseller, you can specify whether to include API calls from children customers. A value of \"self-only\" will only return API calls corresponding to your account. A value of \"self+children\" will return your API calls along with those of your children customers. A value of \"children-only\" will return API calls of your children customers."
          }
        ]
      }
    },
    "/ngadmin/apicalls/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The ID is a value returned in the Qtl-Request-Id header when making a CDN360 API call. It is also available when <a href=\"#operation/get-ngadmin-apicalls\">getting a list of API calls</a>."
        }
      ],
      "get": {
        "summary": "Get details about an API call",
        "tags": [
          "API Call History"
        ],
        "responses": {
          "200": {
            "description": "The response body contains details about an API call.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "type": "string",
                      "description": "ID of the customer."
                    },
                    "apiRequestId": {
                      "type": "string",
                      "description": "A unique ID representing the API call."
                    },
                    "apiName": {
                      "type": "string",
                      "description": "The API name used to make the API call."
                    },
                    "apiAccountId": {
                      "type": "string",
                      "description": "The ID of an API account if one other than the administrative API account was used to make the API call."
                    },
                    "clientIp": {
                      "type": "string",
                      "description": "Caller's IP address."
                    },
                    "requestHeaders": {
                      "type": "array",
                      "description": "An array of all the request headers passed in the API call. Each entry consists of the header along with its value. Example: \"Content-Type:application/json;charset=UTF-8\".",
                      "items": {
                        "type": "string"
                      }
                    },
                    "requestBody": {
                      "type": "string",
                      "description": "Body of the HTTP request."
                    },
                    "requestTimestamp": {
                      "type": "string",
                      "description": "RFC 3339 date indicating when the API call was made. Example: \"2020-04-24T15:21:17Z\" "
                    },
                    "requestMethod": {
                      "type": "string",
                      "description": "Indicates the HTTP request method used to make the API call.",
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "PATCH",
                        "DELETE"
                      ]
                    },
                    "requestURL": {
                      "type": "string",
                      "description": "The URL of the API call."
                    },
                    "isSafe": {
                      "type": "boolean",
                      "description": "A value of <i>true</i> indicates the API call is read-only and does not modify any resource. A value of <i>false</i> means a modification can occur.  For example, a call to create or deploy a property is not safe, so <i>false</i> would be returned."
                    },
                    "responseHeaders": {
                      "type": "array",
                      "description": "HTTP headers that are returned in the response.  Each entry includes the header name along with its value. Example: \"Qtl-Request-Id:bf9bdb402ef4eaf5\"",
                      "items": {
                        "type": "string"
                      }
                    },
                    "responseTimestamp": {
                      "type": "string",
                      "description": "RFC 3339 date indicating when the response was sent."
                    },
                    "responseCode": {
                      "type": "integer",
                      "description": "HTTP response status code for the API call."
                    }
                  },
                  "required": [
                    "customerId",
                    "apiRequestId",
                    "apiName",
                    "clientIp",
                    "requestHeaders",
                    "requestBody",
                    "requestTimestamp",
                    "requestMethod",
                    "requestURL",
                    "isSafe",
                    "responseHeaders",
                    "responseTimestamp",
                    "responseCode"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "requestHeaders": [
                        "sec-fetch-dest:empty",
                        "user-agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36",
                        "dnt:1",
                        "content-type:application/json",
                        "accept:application/json",
                        "sec-fetch-site:same-origin",
                        "sec-fetch-mode:cors",
                        "referer:https://console.cdnetworks.com/cdn/properties/2b83a6aab4b4fa93837df8eb?taskId=5ea30363f5a9ba7b2b4251f9&taskName=Validate%20version%201%20of%20property%20%27xyzabc20200424%27",
                        "accept-encoding:gzip, deflate, br",
                        "accept-language:en-US,en;q=0.9",
                        "cookie:_ga=GA1.2.1656448886.1553879004; LPVID=MyMDIzZGU0YTFmOWMyMTll; MPEL=CH; LPSID-78804126=iQsfcMCrQQ6Ep7Pi6CcYkQ; crowd.token_key=Rl6Fjm4WCtDMPHWrHhMpyQAAAAAAAAACYnVydG9uLmxlZQ; LPSID-75492851=w619XhnXQOu0ZILa4ci9hg; connect.sid=s%3AM2j0Xp9ij9Kv8J8I-OVa6xnoxJfrq37g.p%2FFU8DdBACz0F3aV7sgobPRYrBn3ZFty%2BkT4Tu%2BB9rs",
                        "x-cloud-trace-context:7752735628596068accfa93df2473873/8494161987970494246",
                        "x-forwarded-proto:https",
                        "authorization:Basic YnVydG9uY29tcGFueTItYXBpOnBvUG9IRm8wQms3SGcwOXVzYzBDOGR6SVlIcz0=",
                        "date:Fri, 24 Apr 2020 15:21:17 UTC",
                        "host:ngapi.cdnetworks.com",
                        "via:1.1 google, 1.1 google",
                        "x-forwarded-for:220.242.143.61, 35.241.43.180, 35.222.43.216, 35.241.43.180",
                        "connection:Keep-Alive"
                      ],
                      "requestBody": "",
                      "requestURL": "https://ngapi.cdnetworks.com/cdnapi/deploymentTasks/024a6b98-6421-4f74-9a8b-06bd2b0bcab9",
                      "requestMethod": "GET",
                      "requestTimestamp": "2020-04-24T15:21:17Z",
                      "responseHeaders": [
                        "Qtl-Request-Id:bf9bdb402ef4eaf5",
                        "Vary:Accept-Encoding",
                        "Date:Fri, 24 Apr 2020 15:21:17 GMT",
                        "Content-Type:application/json;charset=UTF-8"
                      ],
                      "responseCode": 200,
                      "responseTimestamp": "2020-04-24T15:21:18Z",
                      "isSafe": true,
                      "customerId": "10000005",
                      "apiRequestId": "bf9bdb402ef4eaf5",
                      "clientIp": "123.45.67.89",
                      "apiName": "mycompanyapiname"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid request ID": {
                    "value": {
                      "code": "InvalidRequestId",
                      "message": "The request does not exist."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-ngadmin-apicalls-id",
        "description": "Get details about an API call including its response status, request and response headers, and caller's IP address.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          }
        ]
      }
    },
    "/cdn/systemConfigs": {
      "get": {
        "summary": "Get system configuration",
        "tags": [
          "CDN Product Management"
        ],
        "responses": {
          "200": {
            "description": "The response contains system configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minimumSupportedCacheVersion": {
                      "type": "string",
                      "description": "The minimum version of the cache server required to validate and deploy properties."
                    },
                    "baseDirectives": {
                      "type": "array",
                      "description": "A list of edge logic directives that are available to everyone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "advancedDirectives": {
                      "type": "array",
                      "description": "A list of advanced edge logic directives that can be enabled by contacting our support team.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "publishedPrice": {
                      "type": "object",
                      "required": [
                        "perGB",
                        "perMHttpsReq"
                      ],
                      "description": "Describes the price for traffic and requests.",
                      "properties": {
                        "perGB": {
                          "type": "object",
                          "description": "Describes the price for each gigabyte of traffic used  within each server group.",
                          "required": [
                            "standard",
                            "premium",
                            "premium+",
                            "ultra"
                          ],
                          "properties": {
                            "standard": {
                              "type": "number",
                              "description": "Price in US dollars per gigabyte of traffic using the standard server group."
                            },
                            "premium": {
                              "type": "number",
                              "description": "Price in US dollars per gigabyte of traffic using the premium server group."
                            },
                            "premium+": {
                              "type": "number",
                              "description": "Price in US dollars per gigabyte of traffic using the premium+ server group."
                            },
                            "ultra": {
                              "type": "number",
                              "description": "Price in US dollars per gigabyte of traffic using the ultra server group."
                            }
                          }
                        },
                        "perMHttpsReq": {
                          "type": "number",
                          "description": "Price in US dollars of one million HTTPS requests."
                        }
                      }
                    }
                  },
                  "required": [
                    "minimumSupportedCacheVersion",
                    "baseDirectives",
                    "advancedDirectives",
                    "publishedPrice"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "minimumSupportedCacheVersion": "1.16.1.1.1.11-20",
                      "baseDirectives": [
                        "origin_pass",
                        "add_header",
                        "expires",
                        "allow",
                        "deny",
                        "limit_rate",
                        "limit_rate_after",
                        "location",
                        "set",
                        "if",
                        "return",
                        "break",
                        "rewrite",
                        "satisfy",
                        "proxy_cache_bypass",
                        "proxy_cache_valid",
                        "proxy_ignore_headers",
                        "proxy_hide_header",
                        "proxy_no_cache",
                        "proxy_pass_header",
                        "valid_referers",
                        "origin_limit_rate",
                        "proxy_cache_min_age",
                        "origin_set_header",
                        "proxy_buffering",
                        "proxy_cache_methods"
                      ],
                      "advancedDirectives": [
                        "internal",
                        "auth_request",
                        "auth_request_set",
                        "gzip_types",
                        "proxy_cache_min_uses",
                        "proxy_cache_use_stale",
                        "proxy_cookie_domain",
                        "proxy_cookie_path",
                        "proxy_next_upstream",
                        "proxy_next_upstream_timeout",
                        "proxy_next_upstream_tries",
                        "proxy_redirect",
                        "proxy_ssl_protocols",
                        "secure_link",
                        "secure_link_md5",
                        "secure_link_secret",
                        "sub_filter",
                        "sub_filter_last_modified",
                        "sub_filter_once",
                        "sub_filter_types",
                        "slice",
                        "error_page",
                        "origin_connect_timeout",
                        "origin_read_timeout",
                        "origin_send_timeout",
                        "proxy_cache_vary",
                        "eval_func",
                        "realtime_log_switch",
                        "proxy_ignore_cache_control",
                        "origin_header_modify",
                        "enable_websocket",
                        "sorted_querystring_filter_parameter"
                      ],
                      "publishedPrice": {
                        "perGB": {
                          "standard": 0.057,
                          "premium": 0.112,
                          "ultra": 0.279,
                          "premium+": 0.197
                        },
                        "perMHttpsReq": 0.99
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-cdn-systemConfigs",
        "description": "This API returns system configuration settings including supported edge logic directives, advanced edge logic directives, and the default pricing for traffic and HTTPS requests. Please note that your account may not have access to the advanced directives. Please contact our support team if you require access to a particular directive."
      }
    },
    "/cdn/serviceQuotas": {
      "post": {
        "summary": "Create a service quota for a customer",
        "tags": [
          "CDN Product Management"
        ],
        "responses": {
          "201": {
            "description": "A Location header will contain a URL to the newly created service quota.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "The Location header's value is a URL to the new service quota object. You can use the ID to get information or to update it."
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Resource Limit Exceeded": {
                    "value": {
                      "code": "ResourceLimitExceeded",
                      "message": "This customer's 'allowedCacheDirectives' list should be a subset of the reseller's list."
                    }
                  },
                  "Duplicate configuration": {
                    "value": {
                      "code": "DuplicateCustomerId",
                      "message": "The provided customer ID already has a CDN config."
                    }
                  },
                  "Invalid certificate limit": {
                    "value": {
                      "code": "InvalidCertificateLimit",
                      "message": "The value for limit should be non-negative."
                    }
                  },
                  "Invalid directives": {
                    "value": {
                      "code": "InvalidDirectives",
                      "message": "Invalid directive 'test directive' for allowedCacheDirectives field."
                    }
                  },
                  "Invalid customer ID": {
                    "value": {
                      "code": "InvalidCustomerId",
                      "message": "The specified customer ID does not exist or the caller doesn't have access to this resource."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-cdn-serviceQuotas",
        "description": "A reseller can use this API to define CDN360 service quotas for a child customer. The child customer cannot have quota levels greater than those of the reseller. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "integer",
                    "description": "ID of the customer for which to create the service quota.",
                    "minimum": 1
                  },
                  "status": {
                    "type": "string",
                    "default": "suspended",
                    "enum": [
                      "active",
                      "trial",
                      "suspended"
                    ],
                    "description": "Indicates the status of the customer's access to the CDN360 product.  An <i>active</i> customer has full access. A <i>suspended</i> customer no longer has access. A <i>trial</i> customer is one with trial settings which may be more limited than those of a customer with the <i>active</i> status. "
                  },
                  "contractId": {
                    "type": "string",
                    "description": "ID representing the contract, used for billing."
                  },
                  "accountManagerEmail": {
                    "type": "string",
                    "description": "An email address representing the account manager."
                  },
                  "trialDeadline": {
                    "type": "string",
                    "description": "A date in RFC 3339 format indicating when the trial expires. This field is required if the <i>status</i> field's value  is <i>trial</i>. "
                  },
                  "usageLimitDays": {
                    "type": "integer",
                    "description": "This setting applies to trial customers. It is used to limit traffic use. It represents the number of days over which the traffic amount designated by the <i>usageLimitDollar</i> field can be used. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over a 90 day period. A value of 0 means there is no limit on the customer.",
                    "minimum": 0,
                    "maximum": 365,
                    "default": 0
                  },
                  "usageLimitDollar": {
                    "type": "integer",
                    "description": "This setting applies to trial customers. It represents the amount of traffic valued in US dollars that is permitted to be used over a period of time  set by the <i>usageLimitDays</i> field. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over a 90 day period. The dollar value is based on CDN360's default pricing. A value of 0 means there is no limit on the customer.",
                    "minimum": 0,
                    "default": 0
                  },
                  "allowDeploymentInChina": {
                    "type": "boolean",
                    "description": "Indicates whether deployment to PoPs in mainland China is permitted. An ICP Beian license is required for web content to be hosted on servers within China. A reseller must collect and verify a child customer's name, address, phone, responsible person, and China business information before enabling deployment to China. Those settings are specified when <a href=\"#operation/post-ngadmin-customers\">creating</a> or <a href=\"#operation/patch-ngadmin-customers-id\">updating</a> a customer.",
                    "default": false
                  },
                  "hostnameLimit": {
                    "type": "integer",
                    "default": 100,
                    "description": "Maximum number of hostnames allowed in production."
                  },
                  "edgeHostnameLimit": {
                    "type": "integer",
                    "default": 100,
                    "description": "Maximum number of edge hostnames that can be created."
                  },
                  "filePurgeQuotaInStaging": {
                    "type": "integer",
                    "default": 5000,
                    "description": "Maximum number of file purges allowed in the staging environment in a 24 hour rolling window."
                  },
                  "dirPurgeQuotaInStaging": {
                    "type": "integer",
                    "default": 20,
                    "description": "Maximum number of directory purges allowed in the staging environment in a 24 hour rolling window."
                  },
                  "filePurgeQuotaInProduction": {
                    "type": "integer",
                    "default": 5000,
                    "description": "Maximum number of file purges allowed in the production environment in a 24 hour rolling window."
                  },
                  "dirPurgeQuotaInProduction": {
                    "type": "integer",
                    "default": 20,
                    "description": "Maximum number of directory purges allowed in the production environment in a 24 hour rolling window."
                  },
                  "prefetchQuota": {
                    "type": "integer",
                    "default": 5000,
                    "description": "Maximum number of prefetch requests in a 24 hour window."
                  },
                  "propertyLimit": {
                    "type": "integer",
                    "default": 100,
                    "description": "Maximum number of properties that can be created."
                  },
                  "certificateLimit": {
                    "type": "integer",
                    "default": 100,
                    "description": "Maximum number of certificates that can be created."
                  },
                  "logConfigLimit": {
                    "type": "integer",
                    "default": 100,
                    "description": "Maximum number of log configurations."
                  },
                  "maximumChildCustomers": {
                    "type": "integer",
                    "default": 20,
                    "description": "For resellers, this represents the maximum number of child customers allowed."
                  },
                  "allowedCacheDirectives": {
                    "type": "array",
                    "description": "A list of advanced <a href=\"https://docs.cdnetworks.com/cdn/docs/edge-logic/supported-directives\">edge logic directives</a> that are permitted to be used in addition to standard ones.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allowProduction": {
                    "type": "boolean",
                    "default": "false",
                    "description": "Indicates if deployment to production servers is permitted. Deployment to staging servers is always permitted."
                  }
                },
                "required": [
                  "customerId"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "customerId": "12345678",
                    "status": "active",
                    "contractId": "",
                    "hostnameLimit": "10",
                    "edgeHostnameLimit": "10",
                    "propertyLimit": "10",
                    "certificateLimit": "100",
                    "logConfigLimit": "10",
                    "filePurgeQuotaInStaging": "10",
                    "dirPurgeQuotaInStaging": "10",
                    "filePurgeQuotaInProduction": "10",
                    "dirPurgeQuotaInProduction": "10",
                    "prefetchQuota": "10",
                    "maximumChildCustomers": "10",
                    "allowProduction": true,
                    "accountManagerEmail": "manager@somecompany.com",
                    "usageLimitDays": "50",
                    "usageLimitDollar": "100",
                    "allowedCacheDirectives": [
                      "proxy_cookie_path"
                    ]
                  }
                }
              }
            }
          },
          "description": "The request body contains the service quota settings for the customer."
        },
        "parameters": []
      },
      "parameters": []
    },
    "/cdn/serviceQuotas/{serviceQuotaId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "serviceQuotaId",
          "in": "path",
          "required": true,
          "description": "Specify the service quota ID. It is returned when <a href=\"#operation/post-cdn-serviceQuotas\">creating a service quota</a>."
        }
      ],
      "get": {
        "summary": "Get a service quota by service quota ID",
        "tags": [
          "CDN Product Management"
        ],
        "responses": {
          "200": {
            "description": "The response contains the service quotas for a CDN360 customer.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "serviceQuotaResponse",
                  "type": "object",
                  "description": "Describes the service quotas for a customer",
                  "x-examples": {
                    "example-1": {
                      "serviceQuotaId": "5efbadf08bb3b2298802b0f3",
                      "customerId": 10008046,
                      "contractId": "",
                      "hostnameLimit": 13,
                      "propertyLimit": 13,
                      "certificateLimit": 11,
                      "edgeHostnameLimit": 8,
                      "filePurgeQuotaInStaging": 13,
                      "dirPurgeQuotaInStaging": 13,
                      "filePurgeQuotaInProduction": 13,
                      "dirPurgeQuotaInProduction": 13,
                      "prefetchQuota": 13,
                      "logConfigLimit": 13,
                      "maximumChildCustomers": 0,
                      "allowedCacheDirectives": [
                        "slice"
                      ],
                      "status": "active",
                      "allowProduction": true,
                      "usageLimitDays": 0,
                      "usageLimitDollar": 0,
                      "allowDeploymentInChina": false
                    }
                  },
                  "x-tags": [
                    "CDN Product Management"
                  ],
                  "properties": {
                    "serviceQuotaId": {
                      "type": "string",
                      "description": "An ID for the service quota settings. This is omitted when returning results for a customer who does not have an explicitly defined service quota."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "ID of the customer."
                    },
                    "contractId": {
                      "type": "string",
                      "description": "ID representing the contract, used for billing."
                    },
                    "hostnameLimit": {
                      "type": "integer",
                      "description": "Maximum number of hostnames allowed in production.\n",
                      "default": 100
                    },
                    "propertyLimit": {
                      "type": "integer",
                      "default": 100,
                      "description": "Maximum number of properties that can be created.\n"
                    },
                    "certificateLimit": {
                      "type": "integer",
                      "default": 100,
                      "description": "Maximum number of certificates that can be created."
                    },
                    "edgeHostnameLimit": {
                      "type": "integer",
                      "description": "Maximum number of edge hostnames that can be created.",
                      "default": 100
                    },
                    "filePurgeQuotaInStaging": {
                      "type": "integer",
                      "default": 5000,
                      "description": "Maximum number of file purges allowed in the staging environment in a 24 hour rolling window."
                    },
                    "dirPurgeQuotaInStaging": {
                      "type": "integer",
                      "default": 20,
                      "description": "Maximum number of directory purges allowed in the staging environment in a 24 hour rolling window."
                    },
                    "filePurgeQuotaInProduction": {
                      "type": "integer",
                      "default": 5000,
                      "description": "Maximum number of file purges allowed in the production environment in a 24 hour rolling window."
                    },
                    "dirPurgeQuotaInProduction": {
                      "type": "integer",
                      "default": 20,
                      "description": "Maximum number of directory purges allowed in the production environment in a 24 hour rolling window."
                    },
                    "prefetchQuota": {
                      "type": "integer",
                      "default": 5000,
                      "description": "Maximum number of prefetch requests in a 24 hour window."
                    },
                    "logConfigLimit": {
                      "type": "integer",
                      "default": 100,
                      "description": "Maximum number of log configurations."
                    },
                    "maximumChildCustomers": {
                      "type": "integer",
                      "default": 20,
                      "description": "For resellers, this represents the maximum number of child customers allowed."
                    },
                    "allowedCacheDirectives": {
                      "type": "array",
                      "description": "A list of advanced edge logic directives that are permitted to be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates the status of access to the CDN360 product.  An <i>active</i> customer has full access. A <i>suspended</i> customer no longer has access. A <i>trial</i> customer is one with trial settings which may be more limited than that of a customer with the <i>active</i> status.",
                      "enum": [
                        "active",
                        "suspended",
                        "trial"
                      ]
                    },
                    "allowProduction": {
                      "type": "boolean",
                      "description": "Indicates if deployment to production servers is permitted. Deployment to staging servers is always permitted.",
                      "default": false
                    },
                    "usageLimitDollar": {
                      "type": "integer",
                      "description": "This setting applies to trial customers. It represents the amount of traffic valued in US dollars that is permitted to be used over a period of time  set by the <i>usageLimitDays</i> field. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over 90 day period. The dollar value is based on CDN360's default pricing.\n",
                      "minimum": 0
                    },
                    "usageLimitDays": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 365,
                      "description": "This setting applies to trial customers. It is used to limit traffic use. It represents the number of days over which the traffic amount designated by the <i>usageLimitDollar</i> field can be used. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over 90 day period.\n"
                    },
                    "allowDeploymentInChina": {
                      "type": "boolean",
                      "default": false,
                      "description": "Indicates whether deployment to PoPs in mainland China is permitted. An ICP Beian license is required for web content to be hosted on servers within China."
                    },
                    "trialDeadline": {
                      "type": "string",
                      "description": "A date in RFC 3339 format indicating when the trial expires. This field is required if the <i>status</i> field's value  is <i>trial</i>."
                    },
                    "upgradeDate": {
                      "type": "string",
                      "description": "A date in RFC 3339 format indicating when a customer's status changed from <i>trial</i> to <i>active</i>."
                    },
                    "suspensionDate": {
                      "type": "string",
                      "description": "A date in RFC 3339 format indicating when the customer's CDN360 service was suspended."
                    }
                  },
                  "required": [
                    "customerId",
                    "status"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "serviceQuotaId": "5efbadf08bb3b2298802b0f3",
                      "customerId": 1234567890,
                      "contractId": "",
                      "hostnameLimit": 20,
                      "propertyLimit": 20,
                      "certificateLimit": 20,
                      "edgeHostnameLimit": 10,
                      "filePurgeQuotaInStaging": 100,
                      "dirPurgeQuotaInStaging": 20,
                      "filePurgeQuotaInProduction": 100,
                      "dirPurgeQuotaInProduction": 20,
                      "prefetchQuota": 20,
                      "logConfigLimit": 20,
                      "maximumChildCustomers": 0,
                      "allowedCacheDirectives": [
                        "secure_link"
                      ],
                      "status": "active",
                      "allowProduction": true,
                      "usageLimitDays": 0,
                      "usageLimitDollar": 0,
                      "allowDeploymentInChina": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid service quota ID": {
                    "value": {
                      "code": "InvalidServiceQuotaId",
                      "message": "The serviceQuotaId does not exist."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The request could not be completed. Refer to the response body for details.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Access denied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "The serviceQuotaId is not for a child customer of the caller."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-cdn-serviceQuotas-serviceQuotaId",
        "description": "This API allows a reseller to get a child customer's service quota by referencing its service quota ID."
      },
      "patch": {
        "summary": "Update a service quota by service quota ID",
        "tags": [
          "CDN Product Management"
        ],
        "responses": {
          "200": {
            "description": "The customer's quota was updated successfully."
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Resource limit exceeded": {
                    "value": {
                      "code": "ResourceLimitExceeded",
                      "message": "This customer cannot have a higher 'propertyLimit' limit than the reseller."
                    }
                  },
                  "Invalid customer ID update": {
                    "value": {
                      "code": "InvalidCustomerIdUpdate",
                      "message": "The customer ID field cannot be updated."
                    }
                  },
                  "Invalid certificate limit": {
                    "value": {
                      "code": "InvalidCertificateLimit",
                      "message": "The value for limit should be non-negative."
                    }
                  },
                  "Invalid service quota ID": {
                    "value": {
                      "code": "InvalidServiceQuotaId",
                      "message": "The serviceQuotaId does not exist."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Access denied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "The serviceQuotaId is not for a child customer of the caller."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "patch-cdn-serviceQuotas-serviceQuotaId",
        "description": "This API allows a reseller to update a child customer's service quota by referencing its service quota ID.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateServiceQuotaBody",
                "type": "object",
                "description": "This object contains the fields of the service quota that can be updated.",
                "x-tags": [
                  "CDN Product Management"
                ],
                "properties": {
                  "contractId": {
                    "type": "string",
                    "description": "ID representing the contract, used for billing."
                  },
                  "hostnameLimit": {
                    "type": "integer",
                    "description": "Maximum number of hostnames allowed in production.\n",
                    "default": 100
                  },
                  "propertyLimit": {
                    "type": "integer",
                    "default": 100,
                    "description": "Maximum number of properties that can be created.\n"
                  },
                  "certificateLimit": {
                    "type": "integer",
                    "default": 100,
                    "description": "Maximum number of certificates that can be created."
                  },
                  "edgeHostnameLimit": {
                    "type": "integer",
                    "description": "Maximum number of edge hostnames that can be created.",
                    "default": 100
                  },
                  "filePurgeQuotaInStaging": {
                    "type": "integer",
                    "default": 5000,
                    "description": "Maximum number of file purges allowed in the staging environment in a 24 hour rolling window."
                  },
                  "dirPurgeQuotaInStaging": {
                    "type": "integer",
                    "default": 20,
                    "description": "Maximum number of directory purges allowed in the staging environment in a 24 hour rolling window."
                  },
                  "filePurgeQuotaInProduction": {
                    "type": "integer",
                    "default": 5000,
                    "description": "Maximum number of file purges allowed in the production environment in a 24 hour rolling window."
                  },
                  "dirPurgeQuotaInProduction": {
                    "type": "integer",
                    "default": 20,
                    "description": "Maximum number of directory purges allowed in the production environment in a 24 hour rolling window."
                  },
                  "prefetchQuota": {
                    "type": "integer",
                    "default": 5000,
                    "description": "Maximum number of prefetch requests in a 24 hour window."
                  },
                  "logConfigLimit": {
                    "type": "integer",
                    "default": 100,
                    "description": "Maximum number of log configurations."
                  },
                  "maximumChildCustomers": {
                    "type": "integer",
                    "default": 20,
                    "description": "For resellers, this represents the maximum number of child customers allowed."
                  },
                  "allowedCacheDirectives": {
                    "type": "array",
                    "description": "A list of <a href=\"/cdn/docs/edge-logic/supported-directives\">advanced edge logic directives</a> that are permitted to be used.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "Indicates the status of a customer's access to the CDN360 product. An <i>active</i> customer has full access. A <i>suspended</i> customer no longer has access. A <i>trial</i> customer  is one with trial settings which may be more limited than those of a customer with the <i>active</i> status.",
                    "enum": [
                      "active",
                      "suspended",
                      "trial"
                    ]
                  },
                  "allowProduction": {
                    "type": "boolean",
                    "description": "Indicates if deployment to production servers is permitted. Deployment to staging servers is always permitted.",
                    "default": false
                  },
                  "usageLimitDollar": {
                    "type": "integer",
                    "description": "This setting applies to trial customers. It represents the amount of traffic valued in US dollars that is permitted to be used over a period of time  set by the <i>usageLimitDays</i> field. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over a 90 day period. The dollar value is based on CDN360's default pricing.\n",
                    "minimum": 0
                  },
                  "usageLimitDays": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 365,
                    "description": "This setting applies to trial customers. It is used to limit traffic use. It represents the number of days over which the traffic amount designated by the <i>usageLimitDollar</i> field can be used. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over a 90 day period.\n"
                  },
                  "allowDeploymentInChina": {
                    "type": "boolean",
                    "description": "Indicates whether deployment to PoPs in mainland China is permitted. An ICP Beian license is required for web content to be hosted on servers within China. A reseller must collect and verify a child customer's name, address, phone, responsible person, and China business information before enabling deployment to China. Those settings are specified when <a href=\"#operation/post-ngadmin-customers\">creating</a> or <a href=\"#operation/patch-ngadmin-customers-id\">updating</a> a customer.",
                    "default": false
                  },
                  "trialDeadline": {
                    "type": "string",
                    "description": "A date in RFC 3339 format indicating when the trial expires. This field is required if the <i>status</i> field's value  is <i>trial</i>."
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "filePurgeQuotaInStaging": 100
                  }
                }
              }
            }
          },
          "description": "Include the fields that you wish to update. Omitted fields will not be changed."
        }
      },
      "delete": {
        "summary": "Delete a service quota by service quota ID",
        "tags": [
          "CDN Product Management"
        ],
        "responses": {
          "204": {
            "description": "The service quota was successfully deleted."
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid service quota ID": {
                    "value": {
                      "code": "InvalidServiceQuotaId",
                      "message": "The serviceQuotaId does not exist."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The request is forbidden. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Access denied": {
                    "value": {
                      "code": "AccessDenied",
                      "message": "The serviceQuotaId is not for a child customer of the caller."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The service quota cannot be deleted due to a conflict. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Has certificate in production": {
                    "value": {
                      "code": "HasCertificateInProduction",
                      "message": "This customer still has certificates deployed in production. They must be deleted before the configuration can be deleted."
                    }
                  },
                  "Has edge hostname": {
                    "value": {
                      "code": "HasEdgeHostname",
                      "message": "This customer still has edge hostname deployed in production. They must be deleted before the configuration can be deleted."
                    }
                  },
                  "Has property in production": {
                    "value": {
                      "code": "HasPropertyInProduction",
                      "message": "This customer still has properties deployed in production. They must be deleted before the configuration can be deleted."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "delete-cdn-serviceQuotas-serviceQuotaId",
        "description": "This API allows a reseller to delete a child customer's service quota by referencing its service quota ID. The deletion will only work if the customer does not have any properties, certificates, or edge hostnames <a href=\"#operation/createDeployment\">deployed</a> in the staging or production environments."
      }
    },
    "/cdn/report/fastOriginReq": {
      "post": {
        "summary": "Get origin fast route requests",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "reportResponse",
                  "type": "object",
                  "description": "Contains data returned by a report.",
                  "x-examples": {
                    "example-1": {
                      "dataName": "edge response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-10-30T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-10-31T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-01T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-02T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-03T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  },
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "description": "Unit of measurement. This will depend on the report API."
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "The data points.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "An RFC 3339 format date representing the beginning of a time interval. It is always in <b>UTC</b> time. For example:  <code>\"timestamp\": \"2019-10-29T01:00:00Z\"</code>"
                          },
                          "data": {
                            "type": "number",
                            "description": "A value at that timestamp. Refer to the <i>dataUnit</i> field for the unit of measurement."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "dataName"
                  ],
                  "x-tags": [
                    "Reports"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "fast route origin requests",
                      "dataUnit": "counts",
                      "dataSeries": [
                        {
                          "timestamp": "2020-08-25T08:00:00Z",
                          "data": 123
                        },
                        {
                          "timestamp": "2020-08-26T08:00:00Z",
                          "data": 1145
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid timespan": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The parameter 'enddate' should be after 'startdate'."
                    }
                  },
                  "Invalid protocol": {
                    "value": {
                      "code": "InvalidProtocol",
                      "message": "Invalid parameter 'protocol': 'httpsd'. The protocol type must be 'http', 'https' or 'all'."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-cdn-report-fastOriginReq",
        "description": "Return the number of requests to your origin server that uses our <a href=\"/cdn/docs/edge-logic/supported-directives#origin_fast_route\">fast route feature</a> to make the connections faster and more reliable.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>\n",
            "name": "Report-Range"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "required": true,
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "required": true,
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14.  For example, <code>type=daily+8</code> means the day as defined in UTC+8 time."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfiltershostnamesonly",
                "type": "object",
                "x-tags": [
                  "Reports"
                ],
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "mydomain.com"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames are included."
        }
      }
    },
    "/cdn/report/fastOriginVol": {
      "post": {
        "summary": "Get origin fast route traffic volume",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "default": "megabytes",
                      "description": "Unit of measurement."
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "The data points for the time period include the upload and download traffic.",
                      "items": {
                        "type": "object",
                        "description": "Describes upload and download traffic for a particular timestamp.",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "An RFC 3339 format date representing the beginning of  a time interval. It is always in <b>UTC</b> time. For example:  <code>\"timestamp\": \"2019-10-29T01:00:00Z\"</code>"
                          },
                          "dataUp": {
                            "type": "number",
                            "description": "Indicates the amount of traffic in megabytes uploaded to the origin using the fast route feature.",
                            "default": 0,
                            "minimum": 0
                          },
                          "dataDown": {
                            "type": "number",
                            "description": "Indicates the amount of traffic in megabytes downloaded from the origin using the fast route feature.",
                            "default": 0,
                            "minimum": 0
                          }
                        },
                        "required": [
                          "timestamp",
                          "dataUp",
                          "dataDown"
                        ]
                      }
                    }
                  },
                  "required": [
                    "dataName",
                    "dataUnit"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "fast route origin volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2020-08-25T08:00:00Z",
                          "dataUp": 123,
                          "dataDown": 4567
                        },
                        {
                          "timestamp": "2020-08-26T08:00:00Z",
                          "dataUp": 1145,
                          "dataDown": 8901
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid timespan": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The parameter 'enddate' should be after 'startdate'."
                    }
                  },
                  "Invalid protocol": {
                    "value": {
                      "code": "InvalidProtocol",
                      "message": "Invalid parameter 'protocol': 'httpsd'. The protocol type must be 'http', 'https' or 'all'."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-cdn-report-fastOriginVol",
        "description": "Return the traffic to your origin server that uses our <a href=\"/cdn/docs/edge-logic/supported-directives#origin_fast_route\">fast route feature</a> to make the connections faster and more reliable.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "required": true,
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14.  For example, <code>type=daily+8</code> means the day as defined in UTC+8 time."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfilters",
                "type": "object",
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "x-examples": {
                  "Filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                },
                "x-tags": [
                  "Reports"
                ],
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "serverGroups": {
                        "type": "array",
                        "enum": [
                          "standard",
                          "premium",
                          "premium+",
                          "ultra"
                        ],
                        "description": "Indicates one or more server groups (standard, premium, premium+, or ultra).",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "mydomain.com"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames are included."
        }
      }
    },
    "/cdn/serviceQuotas/customer/{customerId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "customerId",
          "in": "path",
          "required": true,
          "description": "ID of a customer.  For the \"Get the service quota for a customer\" API, its value can also be <i>me</i> to fetch your own service quota settings. You cannot specify \"me\" to update or delete your own settings."
        }
      ],
      "get": {
        "summary": "Get the service quota for a customer",
        "tags": [
          "CDN Product Management"
        ],
        "responses": {
          "200": {
            "description": "The response contains the service quotas for a CDN360 customer.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "serviceQuotaResponse",
                  "type": "object",
                  "description": "Describes the service quotas for a customer",
                  "x-examples": {
                    "example-1": {
                      "serviceQuotaId": "5efbadf08bb3b2298802b0f3",
                      "customerId": 10008046,
                      "contractId": "",
                      "hostnameLimit": 13,
                      "propertyLimit": 13,
                      "certificateLimit": 11,
                      "edgeHostnameLimit": 8,
                      "filePurgeQuotaInStaging": 13,
                      "dirPurgeQuotaInStaging": 13,
                      "filePurgeQuotaInProduction": 13,
                      "dirPurgeQuotaInProduction": 13,
                      "prefetchQuota": 13,
                      "logConfigLimit": 13,
                      "maximumChildCustomers": 0,
                      "allowedCacheDirectives": [
                        "slice"
                      ],
                      "status": "active",
                      "allowProduction": true,
                      "usageLimitDays": 0,
                      "usageLimitDollar": 0,
                      "allowDeploymentInChina": false
                    }
                  },
                  "x-tags": [
                    "CDN Product Management"
                  ],
                  "properties": {
                    "serviceQuotaId": {
                      "type": "string",
                      "description": "An ID for the service quota settings. This is omitted when returning results for a customer who does not have an explicitly defined service quota."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "ID of the customer."
                    },
                    "contractId": {
                      "type": "string",
                      "description": "ID representing the contract, used for billing."
                    },
                    "hostnameLimit": {
                      "type": "integer",
                      "description": "Maximum number of hostnames allowed in production.\n",
                      "default": 100
                    },
                    "propertyLimit": {
                      "type": "integer",
                      "default": 100,
                      "description": "Maximum number of properties that can be created.\n"
                    },
                    "certificateLimit": {
                      "type": "integer",
                      "default": 100,
                      "description": "Maximum number of certificates that can be created."
                    },
                    "edgeHostnameLimit": {
                      "type": "integer",
                      "description": "Maximum number of edge hostnames that can be created.",
                      "default": 100
                    },
                    "filePurgeQuotaInStaging": {
                      "type": "integer",
                      "default": 5000,
                      "description": "Maximum number of file purges allowed in the staging environment in a 24 hour rolling window."
                    },
                    "dirPurgeQuotaInStaging": {
                      "type": "integer",
                      "default": 20,
                      "description": "Maximum number of directory purges allowed in the staging environment in a 24 hour rolling window."
                    },
                    "filePurgeQuotaInProduction": {
                      "type": "integer",
                      "default": 5000,
                      "description": "Maximum number of file purges allowed in the production environment in a 24 hour rolling window."
                    },
                    "dirPurgeQuotaInProduction": {
                      "type": "integer",
                      "default": 20,
                      "description": "Maximum number of directory purges allowed in the production environment in a 24 hour rolling window."
                    },
                    "prefetchQuota": {
                      "type": "integer",
                      "default": 5000,
                      "description": "Maximum number of prefetch requests in a 24 hour window."
                    },
                    "logConfigLimit": {
                      "type": "integer",
                      "default": 100,
                      "description": "Maximum number of log configurations."
                    },
                    "maximumChildCustomers": {
                      "type": "integer",
                      "default": 20,
                      "description": "For resellers, this represents the maximum number of child customers allowed."
                    },
                    "allowedCacheDirectives": {
                      "type": "array",
                      "description": "A list of advanced edge logic directives that are permitted to be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates the status of access to the CDN360 product.  An <i>active</i> customer has full access. A <i>suspended</i> customer no longer has access. A <i>trial</i> customer is one with trial settings which may be more limited than that of a customer with the <i>active</i> status.",
                      "enum": [
                        "active",
                        "suspended",
                        "trial"
                      ]
                    },
                    "allowProduction": {
                      "type": "boolean",
                      "description": "Indicates if deployment to production servers is permitted. Deployment to staging servers is always permitted.",
                      "default": false
                    },
                    "usageLimitDollar": {
                      "type": "integer",
                      "description": "This setting applies to trial customers. It represents the amount of traffic valued in US dollars that is permitted to be used over a period of time  set by the <i>usageLimitDays</i> field. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over 90 day period. The dollar value is based on CDN360's default pricing.\n",
                      "minimum": 0
                    },
                    "usageLimitDays": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 365,
                      "description": "This setting applies to trial customers. It is used to limit traffic use. It represents the number of days over which the traffic amount designated by the <i>usageLimitDollar</i> field can be used. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over 90 day period.\n"
                    },
                    "allowDeploymentInChina": {
                      "type": "boolean",
                      "default": false,
                      "description": "Indicates whether deployment to PoPs in mainland China is permitted. An ICP Beian license is required for web content to be hosted on servers within China."
                    },
                    "trialDeadline": {
                      "type": "string",
                      "description": "A date in RFC 3339 format indicating when the trial expires. This field is required if the <i>status</i> field's value  is <i>trial</i>."
                    },
                    "upgradeDate": {
                      "type": "string",
                      "description": "A date in RFC 3339 format indicating when a customer's status changed from <i>trial</i> to <i>active</i>."
                    },
                    "suspensionDate": {
                      "type": "string",
                      "description": "A date in RFC 3339 format indicating when the customer's CDN360 service was suspended."
                    }
                  },
                  "required": [
                    "customerId",
                    "status"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "serviceQuotaId": "5efbadf08bb3b2298802b0f3",
                      "customerId": 1234567890,
                      "contractId": "",
                      "hostnameLimit": 20,
                      "propertyLimit": 20,
                      "certificateLimit": 20,
                      "edgeHostnameLimit": 10,
                      "filePurgeQuotaInStaging": 100,
                      "dirPurgeQuotaInStaging": 20,
                      "filePurgeQuotaInProduction": 100,
                      "dirPurgeQuotaInProduction": 20,
                      "prefetchQuota": 20,
                      "logConfigLimit": 20,
                      "maximumChildCustomers": 0,
                      "allowedCacheDirectives": [
                        "secure_link"
                      ],
                      "status": "active",
                      "allowProduction": true,
                      "usageLimitDays": 0,
                      "usageLimitDollar": 0,
                      "allowDeploymentInChina": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid customer ID": {
                    "value": {
                      "code": "InvalidCustomerId",
                      "message": "The provided customer ID does not exist or the caller does not have permission to access it."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No service quota was explicitly defined for this customer. The response body will contain the default settings.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "serviceQuotaResponse",
                  "type": "object",
                  "description": "Describes the service quotas for a customer",
                  "x-examples": {
                    "example-1": {
                      "serviceQuotaId": "5efbadf08bb3b2298802b0f3",
                      "customerId": 10008046,
                      "contractId": "",
                      "hostnameLimit": 13,
                      "propertyLimit": 13,
                      "certificateLimit": 11,
                      "edgeHostnameLimit": 8,
                      "filePurgeQuotaInStaging": 13,
                      "dirPurgeQuotaInStaging": 13,
                      "filePurgeQuotaInProduction": 13,
                      "dirPurgeQuotaInProduction": 13,
                      "prefetchQuota": 13,
                      "logConfigLimit": 13,
                      "maximumChildCustomers": 0,
                      "allowedCacheDirectives": [
                        "slice"
                      ],
                      "status": "active",
                      "allowProduction": true,
                      "usageLimitDays": 0,
                      "usageLimitDollar": 0,
                      "allowDeploymentInChina": false
                    }
                  },
                  "x-tags": [
                    "CDN Product Management"
                  ],
                  "properties": {
                    "serviceQuotaId": {
                      "type": "string",
                      "description": "An ID for the service quota settings. This is omitted when returning results for a customer who does not have an explicitly defined service quota."
                    },
                    "customerId": {
                      "type": "string",
                      "description": "ID of the customer."
                    },
                    "contractId": {
                      "type": "string",
                      "description": "ID representing the contract, used for billing."
                    },
                    "hostnameLimit": {
                      "type": "integer",
                      "description": "Maximum number of hostnames allowed in production.\n",
                      "default": 100
                    },
                    "propertyLimit": {
                      "type": "integer",
                      "default": 100,
                      "description": "Maximum number of properties that can be created.\n"
                    },
                    "certificateLimit": {
                      "type": "integer",
                      "default": 100,
                      "description": "Maximum number of certificates that can be created."
                    },
                    "edgeHostnameLimit": {
                      "type": "integer",
                      "description": "Maximum number of edge hostnames that can be created.",
                      "default": 100
                    },
                    "filePurgeQuotaInStaging": {
                      "type": "integer",
                      "default": 5000,
                      "description": "Maximum number of file purges allowed in the staging environment in a 24 hour rolling window."
                    },
                    "dirPurgeQuotaInStaging": {
                      "type": "integer",
                      "default": 20,
                      "description": "Maximum number of directory purges allowed in the staging environment in a 24 hour rolling window."
                    },
                    "filePurgeQuotaInProduction": {
                      "type": "integer",
                      "default": 5000,
                      "description": "Maximum number of file purges allowed in the production environment in a 24 hour rolling window."
                    },
                    "dirPurgeQuotaInProduction": {
                      "type": "integer",
                      "default": 20,
                      "description": "Maximum number of directory purges allowed in the production environment in a 24 hour rolling window."
                    },
                    "prefetchQuota": {
                      "type": "integer",
                      "default": 5000,
                      "description": "Maximum number of prefetch requests in a 24 hour window."
                    },
                    "logConfigLimit": {
                      "type": "integer",
                      "default": 100,
                      "description": "Maximum number of log configurations."
                    },
                    "maximumChildCustomers": {
                      "type": "integer",
                      "default": 20,
                      "description": "For resellers, this represents the maximum number of child customers allowed."
                    },
                    "allowedCacheDirectives": {
                      "type": "array",
                      "description": "A list of advanced edge logic directives that are permitted to be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Indicates the status of access to the CDN360 product.  An <i>active</i> customer has full access. A <i>suspended</i> customer no longer has access. A <i>trial</i> customer is one with trial settings which may be more limited than that of a customer with the <i>active</i> status.",
                      "enum": [
                        "active",
                        "suspended",
                        "trial"
                      ]
                    },
                    "allowProduction": {
                      "type": "boolean",
                      "description": "Indicates if deployment to production servers is permitted. Deployment to staging servers is always permitted.",
                      "default": false
                    },
                    "usageLimitDollar": {
                      "type": "integer",
                      "description": "This setting applies to trial customers. It represents the amount of traffic valued in US dollars that is permitted to be used over a period of time  set by the <i>usageLimitDays</i> field. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over 90 day period. The dollar value is based on CDN360's default pricing.\n",
                      "minimum": 0
                    },
                    "usageLimitDays": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 365,
                      "description": "This setting applies to trial customers. It is used to limit traffic use. It represents the number of days over which the traffic amount designated by the <i>usageLimitDollar</i> field can be used. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over 90 day period.\n"
                    },
                    "allowDeploymentInChina": {
                      "type": "boolean",
                      "default": false,
                      "description": "Indicates whether deployment to PoPs in mainland China is permitted. An ICP Beian license is required for web content to be hosted on servers within China."
                    },
                    "trialDeadline": {
                      "type": "string",
                      "description": "A date in RFC 3339 format indicating when the trial expires. This field is required if the <i>status</i> field's value  is <i>trial</i>."
                    },
                    "upgradeDate": {
                      "type": "string",
                      "description": "A date in RFC 3339 format indicating when a customer's status changed from <i>trial</i> to <i>active</i>."
                    },
                    "suspensionDate": {
                      "type": "string",
                      "description": "A date in RFC 3339 format indicating when the customer's CDN360 service was suspended."
                    }
                  },
                  "required": [
                    "customerId",
                    "status"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "customerId": 1234567890,
                      "hostnameLimit": 1000000,
                      "propertyLimit": 1000000,
                      "certificateLimit": 1000000,
                      "edgeHostnameLimit": 1000000,
                      "filePurgeQuotaInStaging": 5000,
                      "dirPurgeQuotaInStaging": 20,
                      "filePurgeQuotaInProduction": 5000,
                      "dirPurgeQuotaInProduction": 20,
                      "prefetchQuota": 5000,
                      "logConfigLimit": 1000000,
                      "maximumChildCustomers": 1000000,
                      "allowedCacheDirectives": [],
                      "status": "suspended",
                      "allowProduction": false,
                      "usageLimitDays": 0,
                      "usageLimitDollar": 0,
                      "allowDeploymentInChina": false
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-cdn-serviceQuotas-customer-customerId",
        "description": "Get the CDN service quota for a customer."
      },
      "patch": {
        "summary": "Update the service quota for a customer",
        "tags": [
          "CDN Product Management"
        ],
        "responses": {
          "200": {
            "description": "The customer's quota was updated successfully."
          },
          "400": {
            "description": "The request was invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Resource limit exceeded": {
                    "value": {
                      "code": "ResourceLimitExceeded",
                      "message": "This customer cannot have a higher 'propertyLimit' limit than the reseller."
                    }
                  },
                  "Invalid customer ID update": {
                    "value": {
                      "code": "InvalidCustomerIdUpdate",
                      "message": "The customer ID field cannot be updated."
                    }
                  },
                  "Invalid certificate limit": {
                    "value": {
                      "code": "InvalidCertificateLimit",
                      "message": "The value for limit should be non-negative."
                    }
                  },
                  "Invalid status": {
                    "value": {
                      "code": "InvalidStatus",
                      "message": "The 'trial' status cannot be specified by this customer."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "patch-cdn-serviceQuotas-customer-customerId",
        "description": "This API allows a reseller to update an existing service quota for a child customer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "updateServiceQuotaBody",
                "type": "object",
                "description": "This object contains the fields of the service quota that can be updated.",
                "x-tags": [
                  "CDN Product Management"
                ],
                "properties": {
                  "contractId": {
                    "type": "string",
                    "description": "ID representing the contract, used for billing."
                  },
                  "hostnameLimit": {
                    "type": "integer",
                    "description": "Maximum number of hostnames allowed in production.\n",
                    "default": 100
                  },
                  "propertyLimit": {
                    "type": "integer",
                    "default": 100,
                    "description": "Maximum number of properties that can be created.\n"
                  },
                  "certificateLimit": {
                    "type": "integer",
                    "default": 100,
                    "description": "Maximum number of certificates that can be created."
                  },
                  "edgeHostnameLimit": {
                    "type": "integer",
                    "description": "Maximum number of edge hostnames that can be created.",
                    "default": 100
                  },
                  "filePurgeQuotaInStaging": {
                    "type": "integer",
                    "default": 5000,
                    "description": "Maximum number of file purges allowed in the staging environment in a 24 hour rolling window."
                  },
                  "dirPurgeQuotaInStaging": {
                    "type": "integer",
                    "default": 20,
                    "description": "Maximum number of directory purges allowed in the staging environment in a 24 hour rolling window."
                  },
                  "filePurgeQuotaInProduction": {
                    "type": "integer",
                    "default": 5000,
                    "description": "Maximum number of file purges allowed in the production environment in a 24 hour rolling window."
                  },
                  "dirPurgeQuotaInProduction": {
                    "type": "integer",
                    "default": 20,
                    "description": "Maximum number of directory purges allowed in the production environment in a 24 hour rolling window."
                  },
                  "prefetchQuota": {
                    "type": "integer",
                    "default": 5000,
                    "description": "Maximum number of prefetch requests in a 24 hour window."
                  },
                  "logConfigLimit": {
                    "type": "integer",
                    "default": 100,
                    "description": "Maximum number of log configurations."
                  },
                  "maximumChildCustomers": {
                    "type": "integer",
                    "default": 20,
                    "description": "For resellers, this represents the maximum number of child customers allowed."
                  },
                  "allowedCacheDirectives": {
                    "type": "array",
                    "description": "A list of <a href=\"/cdn/docs/edge-logic/supported-directives\">advanced edge logic directives</a> that are permitted to be used.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "Indicates the status of a customer's access to the CDN360 product. An <i>active</i> customer has full access. A <i>suspended</i> customer no longer has access. A <i>trial</i> customer  is one with trial settings which may be more limited than those of a customer with the <i>active</i> status.",
                    "enum": [
                      "active",
                      "suspended",
                      "trial"
                    ]
                  },
                  "allowProduction": {
                    "type": "boolean",
                    "description": "Indicates if deployment to production servers is permitted. Deployment to staging servers is always permitted.",
                    "default": false
                  },
                  "usageLimitDollar": {
                    "type": "integer",
                    "description": "This setting applies to trial customers. It represents the amount of traffic valued in US dollars that is permitted to be used over a period of time  set by the <i>usageLimitDays</i> field. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over a 90 day period. The dollar value is based on CDN360's default pricing.\n",
                    "minimum": 0
                  },
                  "usageLimitDays": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 365,
                    "description": "This setting applies to trial customers. It is used to limit traffic use. It represents the number of days over which the traffic amount designated by the <i>usageLimitDollar</i> field can be used. For example, a value of 90 for <i>usageLimitDays</i> and 50 for <i>usageLimitDollar</i> means the customer can use up to $50 worth of total traffic over a 90 day period.\n"
                  },
                  "allowDeploymentInChina": {
                    "type": "boolean",
                    "description": "Indicates whether deployment to PoPs in mainland China is permitted. An ICP Beian license is required for web content to be hosted on servers within China. A reseller must collect and verify a child customer's name, address, phone, responsible person, and China business information before enabling deployment to China. Those settings are specified when <a href=\"#operation/post-ngadmin-customers\">creating</a> or <a href=\"#operation/patch-ngadmin-customers-id\">updating</a> a customer.",
                    "default": false
                  },
                  "trialDeadline": {
                    "type": "string",
                    "description": "A date in RFC 3339 format indicating when the trial expires. This field is required if the <i>status</i> field's value  is <i>trial</i>."
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "filePurgeQuotaInStaging": 100
                  }
                }
              }
            }
          },
          "description": "Include the fields that you wish to update. Omitted fields will not be changed."
        }
      },
      "delete": {
        "summary": "Delete the service quota for a customer",
        "tags": [
          "CDN Product Management"
        ],
        "responses": {
          "204": {
            "description": "The service quota was successfully deleted."
          },
          "400": {
            "description": "Invalid request. Refer to the response body for details.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid customer ID": {
                    "value": {
                      "code": "InvalidCustomerId",
                      "message": "The provided customer ID does not exist or is not a child of the caller."
                    }
                  },
                  "Has certificate in production": {
                    "value": {
                      "code": "HasCertificateInProduction",
                      "message": "This customer still has certificates deployed in production. They must be deleted before the configuration can be deleted."
                    }
                  },
                  "Has edge hostname": {
                    "value": {
                      "code": "HasEdgeHostname",
                      "message": "This customer still has edge hostname deployed in production. They must be deleted before the configuration can be deleted."
                    }
                  },
                  "Has property in production": {
                    "value": {
                      "code": "HasPropertyInProduction",
                      "message": "This customer still has properties deployed in production. They must be deleted before the configuration can be deleted."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The service quota cannot be deleted due to a conflict. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "delete-cdn-serviceQuotas-customer-customerId",
        "description": "This API allows a reseller to remove a service quota object for a child customer. The deletion will only work if the customer does not have any properties, certificates, or edge hostnames <a href=\"#operation/createDeployment\">deployed</a> in the staging or production environments."
      }
    },
    "/cdn/report/cpuTime": {
      "post": {
        "summary": "Get CPU time used",
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "The response contains the data. Note that it is always in UTC time.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "reportResponse",
                  "type": "object",
                  "description": "Contains data returned by a report.",
                  "x-examples": {
                    "example-1": {
                      "dataName": "edge response volume",
                      "dataUnit": "megabytes",
                      "dataSeries": [
                        {
                          "timestamp": "2019-10-30T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-10-31T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-01T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-02T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-03T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-04T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-05T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-06T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-07T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-08T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-09T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-10T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-11T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-12T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-13T00:00:00Z",
                          "data": 0
                        },
                        {
                          "timestamp": "2019-11-14T00:00:00Z",
                          "data": 0
                        }
                      ]
                    }
                  },
                  "properties": {
                    "dataName": {
                      "type": "string",
                      "description": "A brief description of the data."
                    },
                    "dataUnit": {
                      "type": "string",
                      "description": "Unit of measurement. This will depend on the report API."
                    },
                    "dataSeries": {
                      "type": "array",
                      "description": "The data points.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "An RFC 3339 format date representing the beginning of a time interval. It is always in <b>UTC</b> time. For example:  <code>\"timestamp\": \"2019-10-29T01:00:00Z\"</code>"
                          },
                          "data": {
                            "type": "number",
                            "description": "A value at that timestamp. Refer to the <i>dataUnit</i> field for the unit of measurement."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "dataName"
                  ],
                  "x-tags": [
                    "Reports"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "dataName": "cpu time",
                      "dataUnit": "seconds",
                      "dataSeries": [
                        {
                          "timestamp": "2020-08-01T00:00:00Z",
                          "data": 9900540
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request is invalid. Refer to the response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Invalid protocol": {
                    "value": {
                      "code": "InvalidProtocol",
                      "message": "Invalid parameter 'protocol': 'invalidProtocol'. The protocol type must be 'http', 'https' or 'all'."
                    }
                  },
                  "Invalid hostnames": {
                    "value": {
                      "code": "InvalidHostnames",
                      "message": "Duplicate hostname(s) 'domain.info'."
                    }
                  },
                  "Invalid time span": {
                    "value": {
                      "code": "InvalidTimeSpan",
                      "message": "The max time span of 'daily' report must be no more than 366 days."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-cdn-report-cpuTime",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Report-Range",
            "description": "An optional header that resellers can use to specify whether to include data from children customers. <table><tr><th>Value</th><th>Behavior</th></tr><tr><td>self-only</td><td>Include hostnames from the caller.</td></tr><tr><td>children-only</td><td>Only hostnames owned by children customers will be included.</td></tr><tr><td>self+children</td><td>Include data from hostnames of both the caller and children customers.</td></tr></table>"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "On-Behalf-Of",
            "description": "If you are a reseller, you can use this header to specify the ID of a child customer."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate",
            "description": "RFC 3339 date indicating the beginning of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>startdate=2019-10-30T00:00:00Z</code> Your startdate may be rounded down to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data beginning 2019-09-05T03:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate",
            "description": "RFC 3339 date indicating the end of the time period. The time must be specified using the UTC timezone; it cannot be an offset. Example: <code>enddate=2019-11-14T00:00:00Z</code> Your enddate may be rounded up to the nearest minute, hour, or day depending on the <i>type</i> parameter. For example, if you enter <code>startdate=2019-09-05T03:14:01Z&type=hourly</code>, the response includes data ending 2019-09-05T04:00:00Z.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Indicates the granularity of returned data. By default, 00:00:00 in UTC is used as the beginning of a day. If you wish to use a different offset from UTC, you can append -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, +1, +2, +3, +4, +5, +6, +7, +8, +9, +10, +11, +12, +13, +14. For example, <code>type=daily+8</code> means the day as defined in UTC+8 time.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "protocol",
            "description": "Choose whether to include HTTP and HTTPS traffic in the results. The default \"all\" includes both types of traffic."
          }
        ],
        "description": "Get the amount of CPU time in seconds used to handle requests for your content.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "reportfiltershostnamesonly",
                "type": "object",
                "x-tags": [
                  "Reports"
                ],
                "description": "An object that can be passed to report API calls to filter the results. For example, you can specify to only return data for a particular hostname.",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "description": "List of hostnames for which to return data. Wildcard hostnames such as *.domain.com are also permitted. If unspecified, data from all hostnames will be returned.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "filter by a specific hostname": {
                    "filters": {
                      "hostnames": [
                        "domain.info"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Return data for a specific hostname only": {
                  "value": {
                    "filters": {
                      "hostnames": [
                        "endtoendsds.domain.info"
                      ]
                    }
                  }
                }
              }
            }
          },
          "description": "The request body can include filters to customize the results. By default, data from all hostnames will be included."
        }
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "APIKey": {
        "type": "http",
        "scheme": "Basic",
        "description": "All requests to the CDNetworks platform must be authenticated using an API login name and key assigned to your organization. For security, the API key is not passed directly but is secured as described below.\n\nThe authentication type is HTTP Basic, and the authorization string is specified in the HTTP request header called Authorization.\n\n<pre>\n<code>\n#!/bin/bash\n#URL of the CDN360 API server\nAPI_SERVER=https://ngapi.cdnetworks.com\n\n#You will be given the following information by the CDNetworks sales team\nUSER=\"{API user name}\"\nAPI_KEY=\"{API key (make sure to escape the $ sign if any)}\"\n\n#Date in RFC 1123 format\nDATE=`date \"+%a, %d %b %Y %H:%M:%S %Z\"`\n\n#Generate the password. Raw output from openssl by adding the \"-binary\" flag\npassw=$(echo -n \"$DATE\" | openssl dgst -sha1 -hmac \"$API_KEY\" -binary | base64)\necho \" \"\n\n#Construct the curl command to query list of properties\napiCall =\"curl -i --url '${API_SERVER}/cdnapi/properties'\n               -X GET\n               -u $USER:$passw\n               -H 'Date: $DATE'\n               -H 'Accept: application/json'\"\n\neval $apiCall\necho \" \"\n</code>\n</pre>\n\nIf you are a reseller you can also specify a child customer's ID in an On-Behalf-Of HTTP header to make API calls to manage your child customer."
      }
    }
  },
  "tags": [
    {
      "name": "Certificate Management",
      "description": "If your content requires TLS, you must create a certificate and <a href=\"#tag/Deployment-Management\">deploy</a> it along with associated <a href=\"#tag/Property-Management\">properties</a>.  For test purposes, you can create a self-signed certificate. Certificates are versioned. Each update to a certificate generates a new version which is immutable. You can choose to deploy any version to staging or production. If you are a reseller, you may share your certificates with your child customers. They would be able to use the certificates but not modify them. "
    },
    {
      "name": "Property Management",
      "description": "A property is the configuration of one or more hostnames (domains) that need to be <a href=\"#tag/Deployment-Management\">deployed</a> to the CDN360 servers. A property can have multiple versions. A property version that has been deployed cannot be updated or <a href=\"#tag/Property-Validation\">validated</a> again. You can <a href=\"#operation/createPropertyVersion\">create a new version of a property</a> by making a clone (or copy) of an existing version. <p>The following figure shows the steps for creating an acceleration service for a hostname.</p><img src=\"https://docs.cdnetworks.com/static/content-assets/mileweb/docs-content-cdn/docs/resources/images/getting-started-flowchart.png\">"
    },
    {
      "name": "Property Validation",
      "description": "After you <a href=\"#operation/createProperty\">create a property</a>, you must validate it to ensure that the settings are syntactically correct before you can <a href=\"#tag/Deployment-Management\">deploy</a> it to staging or production. The validation process is an asynchronous action. APIs are available to check the status of your validation tasks."
    },
    {
      "name": "Deployment Management",
      "description": "Deployment is the process of pushing out your property and certificate configurations to the CDN360 cache servers. You have the option of deploying to a <i>staging</i> environment to test your configurations before deploying to <i>production</i>. <h2>Testing a staged property</h2>If you have deployed to staging, you can send traffic to our staging servers to ensure the property behaves as you intended. The staging cache servers can be found through a special hostname <i>staging.qtlgslb.com</i>. You can get IP addresses of staging cache servers using the Unix/Linux dig command.  For example:\n<pre> <code> $ dig staging.qtlgslb.com <br/> ... <br /> ;; ANSWER SECTION:<br/> staging.qtlgslb.com.    59      IN      A       163.171.228.89<br/> staging.qtlgslb.com.    59      IN      A       163.171.233.53<br/> staging.qtlgslb.com.    59      IN      A       163.171.230.47<br/> </code> </pre> You can also call the <a href=\"#operation/getStagingServers\">Query list of staging servers API</a> to get IP addresses you can use. You have several ways to set up your system to test against staging: <ol> <li>Modify your DNS server to point your deployed property's hostname to the CDN360 staging hostname <i>staging.qtlgslb.com</i>.</li> <li>Modify your HOSTS file (/etc/hosts on Linux) to hard code the property's hostname to one of the staging servers' IP addresses.</li> <li> If the cURL command is used, the --resolve option can be used to directly map the property's hostname to an IP address of a CDN360 staging server.</li> </ol> Once you have done the setup, you can access your content via the hostname. <h2>Testing a property deployed to production</h2> After you <a href=\"#operation/createEdgeHostname\">create an edge hostname</a> and set your DNS server to point the edge hostname to your property's hostname, you can browse your content under the hostname."
    },
    {
      "name": "Hostnames",
      "description": "You must <a href=\"#operation/createProperty\">create properties</a> to manage your configurations on CDN360. Several APIs are available that allow you to get summarized information about the hostnames (or domains) of properties that have been <a href=\"#tag/Deployment-Management\">deployed</a> to production or staging."
    },
    {
      "name": "Edge Hostname Management",
      "description": "You must create an edge hostname for properties deployed to production. You can define rules to apply to visitors from different client zones that are combinations of geographic regions and ISPs.  You must modify your DNS records to point each property's hostnames to an edge hostname in order for visitor requests to be handled by CDN360."
    },
    {
      "name": "Reports",
      "description": "Call our report APIs to get information about your visitors including edge and origin traffic, requests, status code details, and log files."
    },
    {
      "name": "Annotations for Reports",
      "description": "Add text annotations to highlight events related to traffic to your hostnames. These annotations will appear in the <a href=\"https://console.cdnetworks.com/cdn\">CDN360 portal</a> when you look at the reports."
    },
    {
      "name": "Content Management",
      "description": "The content management APIs allow you to request an update (or purge) of your cached content ahead of the schedule determined by your <a href=\"#operation/getPropertyVersion\">property configuration</a>.  You can purge files or directories.  The purge requests are asynchronous. APIs are available for you to check the status of your purge requests."
    },
    {
      "name": "Portal User Management",
      "description": "Create and manage users who access the <a href=\"https://console.cdnetworks.com/cdn\">CDN360 portal</a>."
    },
    {
      "name": "API Account Management",
      "description": "Create and manage additional API accounts used to call the CDN360 APIs."
    },
    {
      "name": "Customer Management",
      "description": "These APIs allow you to update customer level portal settings and contact information as well as to reset the administrator API key. Resellers can also create, update, delete, and get a list of customer accounts."
    },
    {
      "name": "API Call History",
      "description": "Obtain a summary of API calls that have been made by you or on your behalf."
    },
    {
      "name": "CDN Product Management",
      "description": "These APIs allow you to fetch CDN settings that apply to your account. If you are a reseller, you can use APIs to manage the service quotas of your child customers."
    }
  ]
}
